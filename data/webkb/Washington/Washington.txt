"MetaCrawler Searching;MetaCrawler Parallel Web Search Service;by Erik Selberg;and Oren Etzioni;Try the new MetaCrawler Beta!;If you're searching for a person's home page, try Ahoy!;Examples;Beta Site;Add Site;About;Search for:;as a Phrase;All of these words;Any of these words;For better results, please specify:;Search Region:;The World;Your Continent;Your Country;Your Domain;North America;Europe;Asia;Australia;South America;Africa;Antarctica;Search Sites:;Any;Company;Educational;Network (ISP);Organization;Government (US);Military (US);Intl (.int);Performance parameters:;Max wait:;1;3;5;7;10;minutes;Match type:;Any;Loose;Medium;Strong;[;About; |;Help; |;Problems; |;Add Site; |;Search; ];webmaster@metacrawler.com;Â© Copyright 1995, 1996 Erik Selberg and Oren Etzioni;"
"Univ. of Washington Computer Science & Engineering;; Steam Powered Parallel Computing; mural, circa 1986.;GENERALINFORMATION;Including an overview of the department,;visitor schedule,;colloquia,;televised talks,;what's new in our web,;construction;progress of our new building,;department;newsletter, and more.;EDUCATION;Including a;time;schedule of classes, course;list;and;webs,;information about the;full-time;graduate program,;the professional;masters program, and the undergraduate;computer;science and;computer engineering programs,;final exam;schedules, and more.;RESEARCH;Including;research project web pages,;technical reports and;abstracts,;Computing Research Association,;and more.;PEOPLE &;ORGANIZATIONS;Including faculty, staff, students, visitors, organizations,;our;Affiliates Program,;our graduating Ph.D.;students, and more.;THE REGION;Including local information,;desktop references,;links to elsewhere,;and more.;SPOTLIGHT;UW;wins Pacific Regionals of ACM International Student Programming;Contest;Two;videos highlighting educational initiatives;Our;colloquia are now live on the MBONE;Major;donation from Intel Corporation;Dick;Karp receives National Medal of Science;Professional;Masters Program;Department;Overview;""The;Impact of a Research University: An IT Perspective"";Faculty/Staff;Positions Available;""A Half Century of Exponential Progress in Information Technology"";CSE for in;All pages; People; The Region; Courses; CS Laboratory; Research; News;Can't handle tables? Click here.; Department of Computer Science; & Engineering;University of Washington; Box 352350; Seattle, WA 98195-2350; (206) 543-1695 voice, (206) 543-2969 FAX;;; Comments to; webmaster@cs.washington.edu;"
"CSE 135 Home Page;Click here for help.;CSE 135: Computational Techniques;1995 Spring Quarter;Welcome to the CSE/135 Home Page!;This is the World Wide Web hypermedia document for CSE/135, which;contains a bounty of information about the class. Keep in mind that;this document is not static, and that new information will be added;frequently.;If you have any problems with this document, send mail to weld@cs.;You may click on any highlighted item for more information.;About the class:;Personnel (Professor and TAs);Course syllabus;Reading assignments;Homework policy;Computing Lab;Announcements;Check this regularly!;Last changed: 31 May 95;Handouts:;Lecture notes;Homework assignments and grades;Other useful links:;Official Mathematica Page;MVis home; page (visitor and room scheduling); The; Computer Science and Engineering Department,; The;; Computer Science degree program (offered through the College; of Arts and Sciences),; The;; Computer Engineering degree program (offered through the College; of Engineering),;and;Mosaic help:;Help is available on the following topics:; Basic information about Mosaic.; Information about the HyperText Markup Language;(HTML); Uniform Resource Locators;(URL); How to read the web from home using;Lynx,;a character-based web browser;Portions of the CSE/ENGR 135 Web may be reprinted or adapted for;academic nonprofit purposes, providing the source is accurately quoted;and duly credited. The CSE/ENGR 135 Web: Copyright 1995, Department;of Computer Science and Engineering, University of Washington.;"
"CSE/ENGR 142 Home Page (Autumn 95); CSE/ENGR 142: Computer Programming I;; Ben Dugan and Martin Tompa, Autumn 1995;;Welcome to the 142 Home Page!;This is the World Wide Web (""the Web"" for short) hypermedia document;for CSE/ENGR 142 and contains a bounty of information about the;class. Keep in mind that this document is not static, and that new;information (especially class messages) will be added frequently.;If you have any problems with this document, send mail to;cse142-webmaster@cs.;You may click on any highlighted item for more information.;Click here for help.;Class Messages; Check Class Messages frequently.; (Last update:;;; 12/15/95 at 09AM.);;Course Syllabus;Lab & Office Hours;The Staff;Lecture Slides;Homework;Midterm Exam:;Study Guide,; Exam,; Solution;Final Exam:;Study Guide,; Exam,; Solution;Tips on:;Macs & the Lab,;;C & Think C,;;The Think Debugger, and;;Netscape.; Help Bulletin Boards;Computing at Home;Textbook Code;References;Final Exam:;NOT AT REGULARLY SCHEDULED TIME / PLACE;Special Demos;Rainy Day Activities; Course webs from earlier quarters should be intact (more or; less; if you notice problems, for instance links that don't; work, please send mail to cse142-webmaster@cs.washington.edu).; You might like to see assignments, tests, and the like that were; used previously.;;Autumn 1994;Winter 1995;Spring 1995;Summer 1995; Search the 142 Web;;Autumn `95, all pages; Previous quarters, too; Tips; Miscellaneous Info; Rainy Day Activities;; Case insensitive;; For:; Match whole word;;Other information is available about; the; University of Washington,; the; Computer Science and Engineering Department,; the;; Computer Science degree program (offered through the College; of Arts and Sciences),; the;; Computer Engineering degree program (offered through the College; of Engineering),;and; related courses,; for both majors and nonmajors.;If you're considering taking CSE 143, here's a;preview.;Netscape Help:;If you're running Netscape on a Mac, you can find some help items;under the Mac Balloon Help menu, in particular the online; Handbook.;Portions of the CSE/ENGR 142 Web may be reprinted or adapted for;academic nonprofit purposes, providing the source is accurately quoted;and duly credited. The CSE/ENGR 142 Web: Copyright 1995, Department;of Computer Science and Engineering, University of Washington.; Comments to:;;cse142-webmaster@cs.washington.edu;;(Last Update:;; 01/02/96;);"
"CSE/ENGR 142 Home Page (Autumn 1996);CSE/ENGR 142:;Computer Programming I;Martin Dickey;& Richard Ladner,;Autumn 1996;Welcome to the 142 Home Page!;This is the World Wide Web (""the Web"" for short) hypermedia;document for CSE/ENGR 142 and will contain a bounty of information;about the class. You can click on any highlighted item for more;information.;Class Messages - check frequently!;Course Syllabus;All sorts of schedules;The week at a glance;Week-by-week activity schedule;Computing labs (including;lab hours). Watch for lab hour changes!;The Staff (including instructor and;TA office hours);Lecture slides;Lecture slides with audio;from Summer 1996;Homework.;Examinations: Midterm;and Final (not at originally;scheduled place and time!). Study guides, old tests, place and;time, etc.;All kinds of tips on using;the compiler, for both PC and Macintosh users.;Computing at Home;Textbook Code;References;Tutorials and special demos;Course webs from earlier quarters should be more or less intact;and you are invited to browse them. (If you notice problems, for;instance links that don't work, please send mail the Webmaster;(see below). You might like to look at assignments, tests, and;the like that were used previously.;Autumn 1995;Winter 1996;Spring 1996;Summer 1996;Other information;is available about;the University of Washington,;the Computer Science and Engineering Department,;the Computer Science degree program;(College of Arts and Sciences),;the Computer Engineering degree program;(College of Engineering), and;related courses,;for both majors and nonmajors.;Comments to:;cse142-webmaster@cs.washington.edu;(Last Update: 11/19/96;);"
"CSE 143 Home Page;CSE 143:Computer Programming II;Autumn 1996;Craig Chambers;Welcome to the CSE 143 Home Page!;This is the World Wide Web hypermedia document for CSE 143 and;contains a bounty of information about the class. Keep in mind that;this document is not static, and that new information (especially;class messages) will be added frequently. If you have any problems;with this document, send mail to cse143-webmaster@cs.;Announcements:;Class announcements sent by course staff to the cse143-announce mailing list.;(Last update:;;; 12/01/96 at 04PM.);;Course administration:;General Information: course goals,;course staff, course policies, etc.; Grading policy; Turn-in policy;Lab and Office hours;Overall schedule of lecture topics,;reading assignments;E-mail:;Course E-mail aliases;How to Subscribe;Class E-mail Archives;Coursework:;Reading assignments (on the weekly;topic schedule);(Last update:;;; 12/01/96 at 04PM.);Homeworks: Programming assignments;Quizzes;Exams;Course Materials:;Lectures: Online versions of the slides;used in lectures.;Sections: Examples and handouts from quiz;sections.;Miscellaneous;Computing information: Answers to;questions about the computing environment.;Textbook code; Feedback: Tell us how you think;things are going (anonymously, if you wish).;Links to Previous Quarters of CSE;143, as well as other information about the CSE department;Portions of the CSE/ENGR 143 Web may be reprinted or adapted for;academic nonprofit purposes, providing the source is accurately quoted;and duly credited. The CSE/ENGR 143 Web: Copyright 1996, Department of;Computer Science and Engineering, University of Washington.;cse143-webmaster@cs.washington.edu;"
"CSE 321, Autumn '96; CSE 321 Discrete Structures;Autumn 1996;Instructor;Paul Beame,;beame@cs.washington.edu;Lectures MWF 10:30am - 11:20pm in EEB 108;Office Sieg 416;Phone 543-5114;Office Hours M 1:00-1:30, W 1:30-2:00, Thursday 11:00-12:00,;F 3:00-3:30 or by appointment.;Teaching Assistant;Jonathan Nowitz,;nowitz@cs.washington.edu;Section A Thursday, 1:30-2:20 in Johnson 437;Section B Thursday, 2:30-3:20 in Loew 216;Office Hours Tuesdays 2:30-3:20 in Sieg 326A, Wednesdays 3:30-4:20;in Sieg 326D; Handouts; Syllabus; Induction for recursively defined sets;Postscript or Acrobat;(To get Acrobat Reader go here if you don't have it as part of;your browser.); Midterm;Wednesday November 6 in class; Sample questions from old midterms; Homework Assignments; Assignment #1; Assignment #2; Assignment #3; Assignment #4; Assignment #5; Assignment #6; Assignment #7; Previous 321 Course Webs:; Fall 1995 (Karp); Spring 1995 (Ruzzo); Winter 1995 (Leveson); Spring 1996 (Beame);Computer Science & Engineering Department,;University of Washington,;PO Box 352350;Seattle, WA;98195-2350 USA;beame@cs.washington.edu;Last modified:;"
"CSE 322, Winter 1996;CSE 322: Intro. to Formal Models Winter 1996;Richard Ladner;Class Messages:; (Check this or your email frequently.; Last update:;;; 03/18/96 at 01PM.);Handouts:;Course Syllabus; (LaTeX, PS);Handout 1; (LaTeX, PS); on constructing regular grammars from regular expressions;Midterm Extra; (LaTeX, PS); some ramblings from the TA regarding Question 5 on the exam;Handout 2; (LaTeX, PS); construcing a PDA that does top-down parsing of a grammar;Handout 3; (LaTeX, PS); what to review for the final exam;Handout 4; (LaTeX, PS); proof that the halting problem is undecidable;Exams:;Midterm Exam; (LaTeX, PS),; Solutions; (LaTeX, PS);Final Exam; (LaTeX, PS),;Homework:;Homework 1; (LaTeX, PS),; due 1/8/96,; Solutions; (LaTeX, PS);Homework 2; (LaTeX, PS); due 1/12/96;Solutions; (LaTeX, PS);Homework 3; (LaTeX, PS); due 1/19/96;Solutions; (LaTeX, PS)with some comments on set notation.;Homework 4; (LaTeX, PS); due 1/26/96;Solutions; (LaTeX, PS);Homework 5; (LaTeX, PS); due 2/2/96;Solutions; (LaTeX, PS);Homework 6; (LaTeX, PS); due 2/9/96;Solutions; (text LaTeX, text PS, state diagram PS);Homework 7; (LaTeX, PS); due 2/16/96;Solutions; (text LaTeX, text PS, state diagram PS);Homework 8; (LaTeX, PS); due 2/23/96;Solutions; (text LaTeX, text PS, state diagram PS);Homework 9; (LaTeX, PS); due 3/1/96;Solutions; (LaTeX, PS);Homework 10; (LaTeX, PS); due 3/8/96;Solutions; (LaTeX, text PS, PDA PS, TM PS);About file formats: Most of the course;materials above are provided in three formats:;HTML:; HyperText Markup Language (HTML) is the document format handled by; WWW browsers, in fact you are currently looking viewing an HTML; document. Many of the handouts we've provided were originally LaTeX; documents that have been converted to HTML using; LaTeX2HTML,; which is why they can be a bit strange.; LaTeX:; Plain ASCII text including formating commands.; Simple things (e.g. assignments) are generally quite legible in; this format. For figures and complex math stuff, these are; hard-to-impossible to read.; PostScript:; The; Ghostscript Home Page; has free viewers (Mac, Windows, OS/2, Linux, ...);322 Webs From Previous Quarters; Autumn 1995; Winter 1995; Autumn 1994; Autumn 1993;ladner@cs.washington.edu;fix@cs.washington.edu;(Last Update: January 3, 1996);"
"CSE322: Introduction to Formal Models, Fall 1996;CSE 322: Intro. to Formal Models Fall 1996; Anne Condon; Welcome to the CSE 322 home page! Check this page regularly to find;homeworks, solution sets, pointers to upcoming lectures, and exams.;Class Messages:;Messages sent to the class mailing list will;be logged here on the web. To subscribe to the mailing list,;send mail to ""majordomo@cs"" and include the message:;""subscribe cse322 your-userid"".;Check this or your email frequently.;( Last update:;;; 11/20/96 at 10AM.); Homeworks; Handouts; Upcoming Lectures; List of Contents of Previous Lectures;322 Webs From Previous Quarters; Winter 1996; Autumn 1995; Winter 1995; Autumn 1994; Autumn 1993;condon@cs.washington.edu;kayee@cs.washington.edu;(Last Update: September 27, 1996);"
"CSE 326, Autumn 1996;CSE 326: Data Structures Autumn 1996 Martin Tompa;Class Messages; (Check this or your mail frequently.; Last update:;;; 11/21/96 at 09AM.);Course Information;Lab tech;notes (e.g., Unix);Questionnaire;Locatives in C;DeleteMin Algorithm for AVL Trees;Homework:; #1,; #2,; #3,; #4,; #5,; #6,;326 Webs From Previous Quarters:; Winter 1995; Spring 1995; Autumn 1995; Winter 1996; Spring 1996;cse326-request@cs.washington.edu;(Last Update:;; 11/18/96;);"
"CSE 326, Spring 1995, Home Page;CSE 326, Spring 1995: Data Structures;Richard Ladner, Instructor;Dan Fasulo, Teaching Assistant;This is the World Wide Web (""the Web"" for short) hypermedia document;for CSE 326 and contains information about the;class taught in Spring 1995.;Keep in mind that this document is not static, and that new;information (especially class messages) will be added frequently.;Click here for help.;Class Messages; Check these frequently!;; Office Hours;Suggested Reading;Projects;Homework;Exams;Lecture Overheads;Portions of the CSE 326 Web may be reprinted or adapted for;academic nonprofit purposes, providing the source is accurately quoted;and duly credited. The CSE 326 Web: Copyright 1995, Department;of Computer Science and Engineering, University of Washington,;Seattle, WA, 98195.;ladner@cs.washington.edu (Last Update: 03/28/95);"
"CSE 341 Home Page;CSE 341: Programming Languages;Fall Quarter, 1996; Current Offering Home Page (Autumn 96);Other information;The Language List;Info about just about every programming language.;Programming Language Research Page;Home page for Spring1996 offering of;CSE 341;Home page for Winter 1996 offering of;CSE 341;Home page for Autumn 1995 offering of;CSE 341;Home page for Spring 1995 offering of;CSE 341;Home page for Winter 1995 offering of;CSE 341;Home page for the Department of Computer;Science and Engineering;Portions of the CSE 341 Web may be reprinted or adapted for academic;nonprofit purposes, providing the source is accurately quoted and duly;credited. The CSE 341 Web: Copyright 1995-96, Department of Computer Science;and Engineering, University of Washington.;cse341-webmaster@cs.washington.edu;"
"CSE 341 Home Page;CSE 341: Programming Languages;Spring Quarter, 1996;Lectures: MWF 12:30-1:20 (EEB 108);Sections: TTh 8:30-9:20 (Sieg 225) or TTh 9:30-10:20 (Sieg 225); Final Exam Review Sessions:; Monday June 3, 12:30--1:20, Sieg 229.; Tuesday June 4, 12:30--1:20, Sieg 231.;; Final Exam: Thursday June 6, 8:30--10:20, EEB 108.;Instructors:;Steve Hanks;e-mail: <hanks@cs.washington.edu>;Office: Sieg 210;Office Hours: M 1:30-2:30 and W 1:30-2:30;Dave Grove;e-mail: <grove@cs.washington.edu>;Office: Sieg 326a (W) 326d (F);Office Hours: W 11:30-12:30 and F 2:00-3:00;Administrative; Course Syllabus; Course Overview;Course Newsgroup;Help Documents;General;Introduction to News (using Netscape);(Last update:;;; 03/21/96 at 02PM.);Using UNIX;(Last update:;;; 03/22/96 at 02PM.);Using turnin (Electronic submission of homework assignments);(Last update:;;; 04/06/96 at 12AM.);Using Emacs;(Last update:;;; 03/22/96 at 02PM.);Emacs Clip 'n' Save;(Last update:;;; 03/21/96 at 02PM.);Lisp-related;Running Lisp in Emacs;(Last update:;;; 03/22/96 at 02PM.);Reasons why Dave Grove will do bad things to you;(Last update:;;; 04/16/96 at 01PM.);Smalltalk-related; Using Smalltalk in the PC Lab (Last update:;;; 04/26/96 at 10AM.);Assignments; LISP assignment #0;(html);(postscript);(Last update:;;; 07/16/96 at 10AM.); LISP assignment #1 (Due 4/15);(html);(postscript);Sample solution(Last update:;;; 04/04/96 at 07PM.); LISP assignment #2 (Due 4/26);(html);(postscript);(Last update:;;; 04/17/96 at 09AM.); SMALLTALK assignment #0 (Done in Section 4/25);(html);(postscript);(Last update:;;; 04/24/96 at 02PM.); SMALLTALK assignment #1 (Due 5/13);(html);(postscript);(Last update:;;; 05/01/96 at 09AM.); SMALLTALK assignment #2 (Due 5/24);(html);(postscript);(Last update:;;; 05/10/96 at 03PM.); PROLOG assignment #0 (Assigned 5/20; not handed in);(html);(postscript);(Last update:;;; 05/20/96 at 05PM.); PROLOG assignment #1 (Assigned 5/22; due 5/31);HTML but missing a figure.;Postscript (includes figure).;Partial solution.;(Last update:;;; 05/22/96 at 09AM.);Quizes and Tests; The LISP quiz (html;postscript) and a sample solution.; The Smalltalk quiz (html;postscript) and a sample solution.;Daily class notes; notes,; code,; transcript for March 27.; notes,; code,; transcript for March 29.; notes,; code,; transcript;suggested reading; for April 1.; notes,; code,; transcript;suggested reading; for April 3.; notes,; code,; transcript;suggested reading; for April 5.; notes,; code,; transcript;suggested reading; for April 8.; notes,; code,; transcript;suggested reading; for April 10.; notes,; code; for April 12.; notes,; code,; transcript;suggested reading; for April 15.; notes,; code,; transcript;suggested reading; for April 17.; notes; for April 19.; notes; for April 22.; Smalltalk transcipt and notes; for April 24.; Smalltalk transcipt and notes; for April 26.; Smalltalk transcipt and notes; for April 29.; Smalltalk transcipt and notes; for May 1.; Suggested Smalltalk readings; (May 1).; Notes; for May 3.; Notes; for May 6.; Notes; for May 10 (Full notes on Interface Building.); Notes and code on Prolog Databases:;; Method 1: Notes; Method 1: Code; Method 2: Notes; Method 1: Code; Suggested Prolog readings; Prolog code for May 24. (Employees #2);Other information;The Language List;Info about just about every programming language.;Programming Language Research Page;Home page for Winter 1996 offering of;CSE 341;Home page for Autumn 1995 offering of;CSE 341;Home page for Spring 1995 offering of;CSE 341;Home page for Winter 1995 offering of;CSE 341;Home page for the Department of Computer;Science and Engineering;Portions of the CSE 341 Web may be reprinted or adapted for academic;nonprofit purposes, providing the source is accurately quoted and duly;credited. The CSE 341 Web: Copyright 1995-96, Department of Computer Science;and Engineering, University of Washington.;cse341-webmaster@cs.washington.edu;"
"CSE 370 Index Page;CSE 370 Index Page;Current Quarter;The web for the current quarter of CSE 370 is here.;Previous Quarters;Course webs from earlier quarters should be intact (more or less; if you;notice problems, for instance links that don't work, please send mail to;cse370-webmaster@cs.washington.edu).;Spring 1996;Other information is available about; the; University of Washington,; the; Department of Computer Science and Engineering,; the;; Computer Science degree program (offered through the College; of Arts and Sciences),; the;; Computer Engineering degree program (offered through the College; of Engineering).;Portions of the CSE 370 Web may be reprinted or adapted for academic;nonprofit purposes, providing the source is accurately quoted and duly;credited. The CSE 370 Web: Copyright 1996, Department of Computer;Science and Engineering, University of Washington.; Comments to: cse370-webmaster@cs.washington.edu (Last Update:;; 11/17/96;);"
"CSE 370 Home Page (Autumn 96);CSE 370: Introduction to Digital Design;Autumn Quarter 1996;Gaetano Borriello and Corey Anderson;Welcome to the CSE 370 Home Page!;This is the home page for the CSE 370 web which contains a whole bunch of;useful information about the class. Keep in mind that this document is not;static, and that new information (especially class announcements and;messages) will be added frequently. If you have any problems with this;document or the CSE 370 web, in general, send mail to;cse370-webmaster@cs.;Class Announcements:;Notices from your instructor, TA, and/or system administrators.;(Last update:; 11/11/96 at 12AM.);Class E-mail Archive: Messages;sent to cse370@cs.washington.edu.;(Last update:; 11/21/96 at 01PM.);Send e-mail to: the class,;your instructor,;your TA,;both the instructor and TA,;or everyone.;Course administration:;Goals and syllabus;Meeting Times;;Lectures: MWF 8:30-9:20am, EEB 108; Final Exam: Monday, December 16, 8:30-10:20am, EEB108;;Workload and grading expectations;PC laboratory and software tools;Policies on collaboration and cheating;Announcements and e-mail addresses;Overall schedule of lecture topics;Instructor: Gaetano Borriello (gaetano@cs); Office hours: WTh 12:30-1:20 in Sieg 212;TA: Corey Anderson (corin@cs); Office hours: M 2:30-3:20, TTh 8:30-9:20 in Sieg 326a;Weekly assignments.;Bi-weekly quizzes and final exam.;Lectures:;Online versions of the slides used in lectures.;Textbook: Contemporary Logic Design, R. H. Katz, Benjamin-Cummings/Addison-Wesley 1994.;;Web maintained by the author, R. H. Katz.; Web maintained by the publisher, Benjamin-Cummings/Addison-Wesley.;;Notes on topics of interest:;;Evolution of implementation; technologies;Computer-aided design (CAD); tools for logic design;Synario; Feedback:;Tell us what you think about how things are going (even anonymously, if you so desire).;Links to previous quarters of CSE 370.;Portions of the CSE 370 Web may be reprinted or adapted for academic;nonprofit purposes, providing the source is accurately quoted and;duly credited. The CSE 370 Web: Copyright 1996, Department of Computer;Science and Engineering, University of Washington.; Comments to: cse370-webmaster@cs.washington.edu (Last Update:;; 11/17/96;);"
"CSE373 Course Web Page;CSE 373: DATA STRUCTURES AND ALGORITHMS;Autumn 1996;Basic Information:;Instructor: Dr. Steve Tanimoto; tanimoto@cs.washington.edu; Sieg Hall Room 312; Office hours: WF1:30-2:20 or by appointment.;Teaching Assistant: Mr. Anhai Doan; Office hours: To be announced.;Place, Days and Time: Smith 304, MWF, 12:30-1:20;Computing Facilities:; 1. Unix accounts at the MSCC.; 2. (optional) Students' own PCs.;Languages: C++ (required), Lisp (optional);Textbook: Shaffer: ""A Practical Introduction to; Data Structures and Algorithm Analysis""; (published in the Summer of 1996 by Prentice-Hall).;Grading breakdown:;(tentative); Assignments 1-3 (20%); Assignment 4 (20%); Midterm (20%); Project (20%); Final (20%);Late policy: To keep grading manageable and encourage punctual; work, points will be deducted for late assignments.; Each assignment will have its own penalty schedule.;Here is updated information about;the project.;Topics to study for the midterm exam;Information about the final exam;Basic information on C, C++, and on using the g++ compiler;Assignments;Solutions to Assignments;Teaching assistant information;Schedule;Webs for previous offerings of CSE 373:;Winter 96;Autumn 95;"
"CSE 373 Home Page;CSE 373: Data Structures and Algorithms;Spring 1995;Instructor:;Alistair Holden (holden@cs.washington.edu);TA:;Jonathan Nowitz (nowitz@cs.washington.edu);Class Messages;(Last update: Monday 10/25);Course materials;Computing;Syllabus;Homework;Demos;Exams;Other information; Department of Computer Science &amp Engineering;;Computer Science degree program (offered through the College; of Arts and Sciences);;Computer Engineering degree program (offered through the; College of Engineering); Related courses,; both for majors and for non-majors.;Mosaic; Help!; Some interesting; pages for rainy day fun;nowitz@cs.washington.edu;"
"CSE373 Course Web Page;CSE373: Data Structures and Algorithms;Winter 1996;Meeting Time: MWF 1230-120;Meeting Place: Sieg 226;Instructor: Linda Shapiro;Office: 214 Sieg;Telephone: 543-2196;Email: shapiro@cs.washington.edu;Office Hours: MF 10:30-11:20 and W 1:30-2:20;TA: Denise Pinnel;Office: 429 Sieg;Telephone: 543-5129;Email: denisep@cs.washington.edu;Office Hours: TR 1:30-3:00 and W 2:30-4:00;Syllabus;Transparencies;Homework Assignments;Homework 1;Answers to Homework 1;Homework 2;Homework 3;Programming Assignments;Programming Assignment 1;Test File 1;Test File 2;Test File 3;Test File 4;Programming Assignment 2;Note: The data sets are set up as follows: A line beginning with an 'I';indicates an insertion into the B+ tree. The key is next enclosed in;quotes. As stated in the assignment these are 10 characters long.;Next comes an integer that indicates the length of the associated;value. And finally the string value, also enclosed in quotes. A line;beginning with an 'S' indicates doing a find or search. It is;followed by the search key, enclosed in quotes.;Test File 1;Test File 2;Test File 3;Programming Assignment 3;Object Model Graph;Image Graph;Review Lists;Final Study Sheet;"
"CSE 378 Home Page;CSE 378: Machine Organization and Assembly Language;Autumn 1996; Instructor:;; Jean-Loup Baer,;; baer@cs.washington.edu; Lectures; MWF 11:30am - 12:20pm in EEB 108; Office Hours; Monday 2:30pm-3:30pm, Friday 1:30pm-2:30pm in 319 Sieg; Teaching Assistant:; Ori Gershony ,;; ori@cs.washington.edu; Quiz Sections; Thursday 12:30pm - 1:20pm in LOW 118; Thursday 1:30pm - 2:20pm in LOW 113; Office Hours; Monday 1:30pm-2:20pm, Wednesday 3:30pm-4:20pm in 326A Sieg;Welcome to the 378 Home Page!;This is the World Wide Web (""the Web"" for short) hypermedia document;for CSE 378 and contains some information about the;class. Keep in mind that this document is not static, and that new;information will be added frequently. Let us know if you are having;any problems with this page.;To be added to the class mailing list please send mail to;cse378-request@cs.washington.edu.;The class mailing list;is linked to uw-cs.courses.cse378.;Available information;Course Introduction Sheet;Course Outline;Class slides;Getting started with SPIM;Homeworks;You can also look at the online materials for CSE 378 for the;following quarters:;Winter 1996;Spring 1996;Other information; the; Computer Science and Engineering Department; the;; Computer Science degree program (offered through the College; of Arts and Sciences); the;; Computer Engineering degree program (offered through the College; of Engineering);baer@cs.washington.edu (Last Update: 9/04/96);"
"CSE 401;CSE 401 Compilers Class;Home;This is the World Wide Web hypermedia document;for CSE 401 and contains information about the class. Keep in;mind that this document is not static, and that new information will;be added frequently.; Urgent Announcements;Assignment 5 is now online;Class meets MWF at 12:30 PM in LOW 101;401admin@cs.washington.edu;(Last modified: 11/6/96);"
"CSE 403 Home Page;CSE 403: Software Engineering;Meeting Times; Location: Loew 105; Time: Monday, Wednesday, Friday 11:30 - 12:20;;Professor: Nancy Leveson; Office: Sieg 219; Phone: 685-1934; Hours: by appointment; Mail: leveson@cs.washington.edu;TA: Adam Carlson; Office: Sieg 326a; Hours: Wed 12:30 - 1:30 or by appointment; Mail: carlson@cs.washington.edu;Course Description;This course will study the concepts, methods and tools for the specifications, design, construction, testing (analysis) and documentation of large software systems. Included also will be ""non-technical"" topics essential to creating complex software systems successfully, including project management.;Textbook;Ghezzi, Jazayeri, and Mandrioli, Fundamentals of Software Engineering, Prentice Hall, 1991.;Notes:; Notes on requirements; Some sample requirements interview questions; Producer-Consumer Petri Net and Axiomatic Specification notes; Z notes; Coupling and Cohesion notes;Assignments:; Assignment 1; Assignment 2; Assignment 3; Assignment 4; Assignment 5;Some links that may be of your interest:; Course syllabus (Updated 4/2); Send mail to the class mailing;list; news:comp.risks; Military Standard Defense System Software Development;Other information is available about; CSE403, Winter 1995; CSE403, Spring 1995; CSE403, Winter 1996; the Computer Science and Engineering Department;Suggestions/Feedback to: cse403-request@cs.washington.edu;"
"CSE 413 (Winter 1996) Home Page;CSE 413 (Winter 1996);PROGRAMMING LANGUAGES AND THEIR IMPLEMENTATION; Instructor:; Steve Tanimoto, Department of Computer Science and Engineering, University of Washington,;Seattle, WA 98195.; TA:; Ruth Anderson;Meetings:; Tuesdays and Thursdays 10:30 AM to 11:50 AM in Sieg 325.;(EXCEPT ON THURSDAY, JAN 4, WE WILL MEET IN THOMPSON HALL, ROOM 3!);SLN in Time Schedule:; 2408; Steve's Office Hours:; Tuesday from 4:30 to 5:30 in Sieg 312.; Thursday from 12 to 1 PM in Sieg 312.; Ruth's Office Hours:; Mondays 12:30 to 1:30, 326a Sieg;;Wednesdays 1:30 to 2:30, 326a Sieg.; Course Mailing List: cse413; Mailing list archive.; Schedule:; This is a tentative schedule: of topics and examinations.;Most of the transparencies from past lectures are also posted here.; Number of Credits:; 3; Grading:; Homework 20%; Midterm exam 25%; Final exam 35%; Project 15%; Class participation 5%; Hardcopy Readings:; Text (selected sections).;Many of the readings for the course will be online, but the first set of;readings is part of my recent book on Lisp and artificial intelligence.;There will be several readings from the book throughout the course,;including readings on Lisp, logic programming and Prolog, grammars and;parsing, language understanding systems, and shells for expert systems.;You can either purchase the whole book at the bookstore (approximately;15 copies have been ordered) or do a combination of getting copies from;the copy center and reading in the library. The book is entitled,;The Elements of Artificial Intelligence Using Common Lisp, 2nd edition,;W. H. Freeman, 1995. Chapter 2 (Introduction to Programming in;Common Lisp) and the Lisp glossary may be purchased;separately at the Copy Center in the basement of the Communications Building.; Online reference materials for Lisp:; What Lisp is.;;The Lisp FAQ provides the answers to many questions about Lisp and;its implementations.;;Common Lisp: The Language, 2nd edition is the standard reference;on Common Lisp. (It seems best if you access it via the table-of-contents;page, rather than by trying to download the entire HTML file or;postscript.); You can get the source code for;the Lisp programs from The Elements of Artificial Intelligence Using;Common Lisp, 2nd edition.; The web site for;Digitool, Inc., the company that;maintains and supports Macintosh Common Lisp, provides the most current;information about MCL.; Here are some interesting links to info about how to use Lisp for; programming World-Wide Web applications.; Online reference materials for C.; Introduction;to C Programming is an online tutorial.; Programming in C is another online tutorial, but it's on a website in the UK that;doesn't always respond promptly.; These are two of the several tutorials that are listed; here.; Online reference materials for Java.;;The Java language trail map.;Announcements; January 2.; Welcome to this course and its course web!;This course is about programming languages and their implementation.;In some of the department's listings, it is called ""Languages and Compilers,"";although in the catalog it is called ""Programming Languages and Their;Implementation."";It covers interpreters, compilers, and other techniques for building;programming systems. Our attention will focus mainly on two particular programming;languages: Lisp and C. With Lisp, we will explore many issues relevant to;intepreted languages, while with C, we will investigate compilers.;In addition to traditional language issues and techniques, we will also;look into current issues such as visual programming systems and programming;facilities for the World-Wide Web.; January 2.; Facilities:;This quarter, CSE 413 students will have the use of both the MSCC Macintoshes;(running Macintosh Common Lisp 3.0) and the MSCC Unix systems.;MSCC is the;Mathematical Sciences Computing Center. The MSCC Macs are located in the;basement of Thompson Hall. Some of the Macs are in Room 3 and some in Room 9.;While the Macs offer MCL (and a variety of other languages such as Mathematica);the MSCC Unix hosts offer, C, Lex, Yacc, Allegro;Common Lisp, and other software facilities.;Macintosh Common Lisp provides a particularly powerful;environment including full implementation of the Common Lisp standard,;integrated editor (called FRED), and extensive facilities for graphics;and user interface construction. The Macintosh computers are networked,;and files can easily be transferred between them and the Unix host machines;of MSCC.; Students who have difficulty getting to the Macintoshes in;Thompson Hall can supplement their Macintosh work with work on their;own PCs, using such packages as XLISP-STAT for Windows and Micro-Emacs.;However, due to our limited ability to support alternative facilities,;students who wish to work on their own PCs will need to access these;resources themselves from archives on the Internet. Also, note that;XLISP-STAT is a bare-bones implementation of Common Lisp and does not;have the extensive program-development support that MCL has.;While we are fortunate to have the powerful MCL system for this course,;there is one disadvantage of using it---you must use it in the MSCC lab;unless you purchase your own copy of it from;Digitool, Inc..;(MCL normally costs about $500 a copy, but there is a special student deal;allowing students to purchase it for $135.);It has been pointed out that there is a free version of Allegro Common Lisp;for Windows which can be downloaded from franz.com on the Web.;This may be an attractive tool for some students.; Final examination:; The final exam for CSE 413 will be given on Monday, March 11,;in Sieg 325 from 10:30 to 12:20. It will be a closed-book test.; January 4.; NOTE THIS: On Thursday, January 4, we will meet in;Thompson Hall Room 3, so that we can get introduced to the;laboratory facilities for the course. So go to Thompson this;time, instead of going to our regular classroom.; January 9.; THIS WEEK ONLY Ruth's Wednesday office hours are moved to Thursday;2:30 - 3:30 in Sieg 326a.; January 21.; A Beginner's guide to HTML might be helpful for Assignment #3.; January 22.; Post of the message sent to the class news group regarding;reading files with paths on the Mac.; January 23.; Reminder to please email your assignment #3 to Ruth (rea@cs) today,;even if you turned in a hard copy in class.;Click here for info on emailing files from the Macs.; January 29.; For assignment #4, please turn in a printout of your tokenize program run on several examples. Also please email a copy of tokenize to Ruth (rea@cs).; February 1.; The midterm examination will be from 10:30-11:50 AM on;Thursday, February 8. It will cover these;topics..; There will be an optional review session for the midterm exam.;The review session will be held 2:30-3:20 PM on Monday, Feb. 5, in;Sieg Hall room 422. Please bring in questions on the material to be;covered.; *** HOMEWORK #5 HELP ***. Click here for info on converting strings to numbers and symbols.; ** Check the cse413 mail archive for an important message about hw#5. The archive can be found at the top of this page. Send email to rea@cs if you have not received any mail from the mailing list.; February 5; Note modifications to the Assignment 5 page -- new deadlines (as announced;earlier via email), plus online reading material for part B.; February 6; A free postscript viewer for windows is available here.; February 12; A Picture of a Koch Snowflake here.; March 5; New details on completing the project are given in the project;general description page. Check it out to find out about;demonstrations and writeups.; The review session for the final exam has been scheduled.;It will be from 4:00-5:00 on Friday, March 8 in Sieg 422.; March 8; The final examination will be from 10:30-12:20 on;Monday, March 11. It will cover these;topics.. Part of the exam will be in multiple-choice format;;bring a mark-sense form and a few #2 pencils. The exam is ""closed-book."";Assignment 1 due on Tuesday, January 9.;Assignment 2 due on Tuesday, January 16.;Assignment 3 due on Tuesday, January 23.;Solution:;Part 1.;Part 2.;Assignment 4 due on Tuesday, January 30.;Solution:;Exercises;Tokenizer;Assignment 5 (Part A is due on Tuesday, February 13, and;Part B is due on Thursday, February 15).;Part A Solution:;Parser;Tokenizer;Part B Solution:;Koch Snowflake;Assignment 6 due on Tuesday, March 5. Java Tutorial (local copy);** Assignment #6 Help!! **.;PROJECT: General description, including new info on;demonstrations and writeups.;PROJECT Milestone 1 (DUE FEBRUARY 22nd).;PROJECT Milestone 2 (DUE FEBRUARY 29th).;Here is the file that shows how to;display text in an MCL window.;Project Demonstrations are scheduled for Thursday, March 7 at 10:30.;Project Writeups are due at or before 4:00PM Friday, March 8.;You may turn them in at the review session for the final exam.;tanimoto@cs.washington.edu;"
"CSE 421, Winter 1996;CSE 421: Intro. To Algorithms Winter 1996;Larry Ruzzo & Martin Tompa;Class Messages:; (Check this or your email frequently.; Last update:;;; 03/15/96 at 02PM.);Text Book Errata Lists.;Handouts:;LaTeX:;Syllabus;Midtem Solution;Acrobat :;Syllabus;Midtem Solution;PostScript:;Syllabus;Midtem Solution;Homework:;LaTeX:;1,;2,;3,;4,;5,;6,;7,;Acrobat :;1,;2,;3,;4,;5,;6,;7,;PostScript:;1,;2,;3,;4,;5,;6,;7,;421 Webs From Previous Quarters; Winter 1995 (Karlin);About file formats: Most of the;course materials above are provided in three formats:;LaTeX:; Plain ASCII text including formating commands.; Simple things (e.g. assignments) are generally quite legible in; this format. For figures and complex math stuff, these are; hard-to-impossible to read.; Adobe Acrobat :; The latest & greatest.; Get a free viewer from Adobe's; Acrobat and the Web Page.;;PostScript:; The; Ghostscript Home Page; has free viewers (Mac, Windows, OS/2, Linux, ...);;At this time, Acrobat is supported on fewer systems, but is;preferable if you can use it -- files are smaller, rendering is;faster and more legible, and it can print (which Mac Ghostscript;can't, for example).;{ ruzzo | tompa | aberman } @cs.washington.edu;(Last Update:;; 02/28/96;);"
"CSE 431 - Intro. to the Theory of Computation, Spring 1996;; CSE 431; Introduction to the Theory of Computation;; Larry Ruzzo, Spring 1996;; General information; Instructor: Larry Ruzzo; TA:; Jayram Thathachar; Meeting times: Mon, Wed, Fri 10:30-11:20 in EEB 108.; Instructor office hours (tentative): Wed 1-2, Fri 1-2 in Sieg 415.; TA office hours: Mon 1-2, Tue 12-1 in Sieg 326.; Welcome to the CSE 431 home page;If you have any problems with this document, send;mail to jayram@cs.washington.edu.;Class E-mail:; (Last update:;;; 05/31/96 at 10PM.);A log of all messages sent out to the class e-mail list;(cse431@cs.washington.edu).; Textbook; Errata.;Handouts:;Admin.;Problems;Solutions;Everything;LaTeX Source:;Syllabus; 1; 2; 3; 4; 5;Midterm;Final; 1; 2; 3; 4; 5;Midterm;Final;Everything; Acrobat:;Syllabus; 1; 2; 3; 4; 5;Midterm;Final; 1; 2; 3; 4; 5;Midterm;Final;Everything;PostScript:;Syllabus; 1; 2; 3; 4; 5;Midterm;Final; 1; 2; 3; 4; 5;Midterm;Final;Everything;About file formats: Most of the;course materials above are provided in three formats:;LaTeX:; Plain ASCII text including formating commands.; Simple things (e.g. assignments) are generally quite legible in; this format. For figures and complex math stuff, these are; hard-to-impossible to read.; Adobe Acrobat :; The latest & greatest.; Get a free viewer from Adobe's; Acrobat and the Web Page.;;PostScript:; The; Ghostscript Home Page; has free viewers (Mac, Windows, OS/2, Linux, ...);;At this time, Acrobat is supported on fewer systems, but is;preferable if you can use it -- files are smaller, rendering is;faster and more legible, and it can print (which Mac Ghostscript;can't, for example).; Old Course Webs:; Spring 1994; Spring 1995;jayram@cs.washington.edu;"
"CSE 451 Home Page;CSE 451;Introduction to Operating Systems;Autumn 1996;Instructor:;Brian Bershad;(cse451-instructor@cs.washington.edu);Lecture: MWF 11:30 - 12:20 in Low 102;Office Hours:MF: 12.30-1.30;TA: Sung-Eun Choi;(cse451-TA@cs.washington.edu);Section A: Th 12:30 - 1:20 in Low 217;Section B: Th 1:30 - 2:30 in Low 118;Office Hours: W 12:30 - 1:20 in Sieg 326A or by appointment;Course Intro by Brian Bershad.;Course Admin;The class outline, administrative info, textbooks, grading, and;other words of wisdom.;Course Messages; Mail sent to cse451 is archived here.;Midterm 1 solutions; Scale and solutions for the first midterm.;Lecture Schedule;What will be covered when. The schedule is aggressive, and;will be updated regularly to reflect our actual pace.;Lecture Notes; Handouts and slides from lecture.;Projects;Descriptions of the projects, related project material, and solutions;to old projects.; Project 2 solutions are now available.; Project 3 is now available.;Section Notes;Notes of the material from (some) sections. Watch;this space carefully for information vital to your survival (and;grade). Project hints will appear here.; Personal Pages; Your personal 451 home pages, where you'll receive feedback on;projects.;Feedback Page; Send feedback to the instructors/TA...anonymously if you wish.;How To Page; Lost in the cse451 web? Click here.;cse451-webmaster@cs.washington.edu;"
"CSE 457 Home Page;1996 Autumn Quarter;Welcome to the World Wide Web hypermedia document for CSE/457,;which contains a bounty of information about the class. Keep;in mind that this document is by no means static, and that new information;will be added frequently. If you have any problems with this;document, send mail to pighin@cs. Click here for help.;About the class;Personnel;(Professor, TAs, Students);Course syllabus;Course calendar;TA Office Hours;Handouts & Assignments;Lecture notes;Reading assignments;Homework assignments;Projects;Project handouts;Project artifacts;Project help sessions;Project grading policy;Project write-ups;libui Documentation;Other course-related information;Getting into the class;Hearn & Baker errata;The SGI Instructional Lab;Using the Indys, a guide to 228;OpenGL Example Programs;1996 Spring quarter home page;1995 Autumn quarter home page;1995 Spring quarter home page;1995 Winter quarter home page;Graphics links;SGI Silicon Surf;Grafica Obscura;SIGGRAPH;GRAIL;Graphics sites index;Other useful links;MVis home page (visitor and room scheduling);The Computer Science and Engineering Department;The Computer Science degree program;The Computer Engineering degree program;Web help;Basic help;Mosaic, Netscape, and Lynx;Using Netscape on the Indys;pighin@cs.washington.edu;29 September 1996;"
"CSE/EE 461, Autumn 1996;CSE/EE 461: Intro. to Computer Communication NetworksAutumn 1996;Instructor:;Arun Somani,;somani@cs;Lecture: MWF 8:30am - 9:20am in MEB103;Office Sieg 316/EEB306;Phone: 543-9348/685-1602;Office Hours: M W and F 9:30-10:30;TA:;Jari Kristensen,;jari@cs;Office EEB 331;Office Hours: T Th 9:00 - 1:00 pm ( TA's office hours has been changed to;match Prof. Somani's office hours, thus covering every day in the week and;providing a larger timewindow for consultations.);Class Messages; (Check this or your email frequently.);Lecture Overheads;Homeworks;Projects;Interesting Stuff;Attention;If you would like to request academic accommodations due to a disability, please;contact Disabled Student Services, 448 Schmitz, 543-8924(V/TDD). If you have;a letter from Disabled Student Services indicating you have a disability that requires;academic accommodations, please present the letter to me so we can discuss the;accommodations you might need for class.;About file formats: Most of the course;materials above are provided in three formats:;HTML:; HyperText Markup Language (HTML) is the document format handled by; WWW browsers, in fact you are currently looking viewing an HTML; document. Many of the handouts we've provided were originally LaTeX; documents that have been converted to HTML using; LaTeX2HTML,; which is why they can be a bit strange.; LaTeX:; Plain ASCII text including formating commands.; Simple things (e.g. assignments) are generally quite legible in; this format. For figures and complex math stuff, these are; hard-to-impossible to read.; PostScript:; The; Ghostscript Home Page; has free viewers (Mac, Windows, OS/2, Linux, ...);jari@cs.washington.edu;"
"CSE/EE 461, Spring 1996;CSE/EE 461: Intro. to Computer Communication NetworksSpring 1996;Instructor:;Richard Ladner,;ladner@cs;Lecture: MWF 8:30am - 9:20am in Sieg 325;Office Sieg 311;Phone: 543-9347;Office Hours: W and Th 11am - noon;TA:;William Chan,;wchan@cs;Office Hours: T 11:30am - 12:20pm in Sieg 225, Th 2:30pm - 3:20pm in Sieg 326.;Class Messages; (Check this or your email frequently.);Lecture Overheads;Homeworks;Projects;About file formats: Most of the course;materials above are provided in three formats:;HTML:; HyperText Markup Language (HTML) is the document format handled by; WWW browsers, in fact you are currently looking viewing an HTML; document. Many of the handouts we've provided were originally LaTeX; documents that have been converted to HTML using; LaTeX2HTML,; which is why they can be a bit strange.; LaTeX:; Plain ASCII text including formating commands.; Simple things (e.g. assignments) are generally quite legible in; this format. For figures and complex math stuff, these are; hard-to-impossible to read.; PostScript:; The; Ghostscript Home Page; has free viewers (Mac, Windows, OS/2, Linux, ...);ladner@cs.washington.edu;wchan@cs.washington.edu;"
"CSE467 Home Page;CSE467: Advanced Digital Design;Ted Kehl, Fall 1996;The Web pages for CSE467, Fall 1996, can be found;here.;ted@cs.washington.edu;"
"CSE467 Home Page;CSE467: Advanced Digital Design;Ted Kehl, Fall 1996;Welcome to the 467 Home Page!;Course Information;Time and Place: MWF 9:30-10:30 - Johnson 123; IMPORTANT ANNOUNCEMENTS Last Updated;Summary;Syllabus;Lab policies and hours;Staff:;Ted Kehl: instructor Office hrs 10:30-11:30 MWF;Mark Savoy, Tues Lab TA, savac@cs;Richard Chinn, Thurs Lab TA, richin@cs; Howard Chang, General TA, shchang@cs;Lab Assignments;FINAL PROJECT;Sample ABEL state machines;Sample .tf test fixtures;Lab 1: due Oct 15`; Lab 2:; Lab 3: TA option; Lab 4: TA option; Lab 5: TA option;Handouts;Combinational Logic I;Combinational Logic II;Sequential Logic I;Sequential Logic II;FPGAs I;FPGAs II;Memories;Communication;Other Information;Department of Computer Science and Engineering home page; Murphy's Law;Recent Dilbert Comics;A collection of WWW resources (care of Gaetano Borriello); List of VLSI links; ComprehensiveList of IC;Manufactures; National Semiconductor; Data Sheets; Motorola's Data Book Server; Philips Semiconducter's Data Book Server;; Micron Technology Data Sheets;The CSE467 Web:;Copyright 1995, 1996; Department of Computer Science and Engineering, University of Washington.;Portions of the CSE467 Web may be reprinted or adapted for academic nonprofit;purposes, providing the source is accurately quoted and duly credited.;ted@cs.washington.edu;"
"CSE471 --- Computer Design and Organization; CSE471 --- Computer Design and Organization; General Information;Meets: MWF 10:30-11:20, Loew 102;Instructor: Larry Snyder;Office Hours: MW 4:30-5:30 or by appointment.;E-mail address: snyder@cs;Office: Sieg 426B 543-9265;Assistant: Judy Watson (jwatson@cs), Sieg 426E, 543-0374.;TA: Robert Chen;Office Hours: Sieg 326A, 4:30-5:30 Tuesdays/Thursdays;E-mail address: chensg@cs; Catalog Description;CPU instruction addressing models, CPU structure and functions,;computer arithmetic and logic unit, register transfer level design,;hardware and microprogram control, memory hierarchy design and;organization, I/O and system components interconnection. Laboratory;project involves design and simulation of an instruction set;processor.;Prerequisite: CSE 370 and CSE 378.; Class notes; Monday, 30 Sep 96 (Postscript) Reading: 1.1-1.4; Wednesday, 2 Oct 96 (Postscript) Reading: 1.5-1.6; Friday, 4 Oct 96 (Postscript) Reading: 1.7-1.10; Monday, 7 Oct 96 (Postscript),; Review Sheet and; Answer Sheet.; Wednesday, 9 Oct 96 (Postscript); Friday, 11 Oct 96 (Postscript); Monday, 14 Oct 96 (Postscript),; Homework 1,; ALU in HTML, Reading: Skim Appendix A; Wednesday, 16 Oct 96 (Postscript); Friday, 18 Oct 96 (Color Postscript), Reading: 3.1-3.2; Monday, 21 Oct 96 (Postscript), Reading: 3.3-3.4; Wednesday, 23 Oct 96 (Postscript),; Homework 2, Reading: 4.1-4.2; Friday, 25 Oct 96 (Postscript), Reading: 4.3.1-2; Monday, 28 Oct 96 (Postscript),; Homework 3, Reading: Skim H&P, Chap 6.; Wednesday, 30 Oct 96 (Postscript); Friday, 1 Nov 96 (Postscript); Monday, 4 Nov 96 (Revised),; Review; Wednesday, 6 Nov 96 (Postscript),; Review Answers;Friday, 8 Nov 96 Midterm Fast Answers;Holiday Monday, 11 Nov 96; Wednesday, 13 Nov 96 (Postscript),; Homework 4, Reading: 4.6;Friday, 15 Nov 96 (Postscript);Monday, 18 Nov 96 (Postscript);Wednesday, 20 Nov 96 (Postscript),; Homework 5,6,7;Friday, 22 Nov 96 (Postscript);Monday, 25 Nov 96 (Postscript);Wednesday, 27 Nov 96 (Postscript);Holiday Friday, 29 Nov 96 (Postscript);Monday, 2 Dec 96 (Postscript);Wednesday, 4 Dec 96 (Postscript);Friday, 6 Dec 96 (Postscript);Monday, 9 Dec 96 (Postscript);Wednesday, 11 Dec 96 (Postscript); Lab Materials;The following files are available for the Verilog pipeline design:;Verilog simulation of MIPS pipeline, pipeline.v.;Additional modules for pipeline design, common.v.;Sample program, source form, test.s.;Sample program, program segment in ""binary"", prog.bin.;Sample program, data segment in ""binary"", data.bin.;Simple assembler for MIPS assembly language, asm.bin.;Man page for the assembler, man.; Previous Quarters; Fall 95; Fall 94;Verilog References;This is a free Postscript; Verilog reference card.;TA; TA@cs.washington.edu;"
"CSE 473 (Spring 1996) Home Page;CSE 473 (Spring 1996);INTRODUCTION TO ARTIFICIAL INTELLIGENCE; Instructor:; Steve Tanimoto, Department of Computer Science and Engineering, University of Washington,;Seattle, WA 98195.; TA:; Jeremy Baer;Meetings:; Mondays, Wednesdays and Fridays 2:30 PM to 3:20 AM, in Sieg Hall room 231.; Steve's Office Hours:; Tuesdays from 4:30 to 5:30 in Sieg 312.; Wednesdays from 11:00 to 12:00 in Sieg 312.; Jeremy's Office Hours:; Wednesdays from 3:30 to 4:20 in Sieg 326D.; Thursdays from 1:30 to 2:20 in Sieg 326D.; Course Newsgroup:;Newsgroup uw-cs.courses.cse473 has been created for CSE 473.;The newsgroup is accessable only through CSE machines.;Messages to the newsgroup can be posted by sending mail to post-cse473@cs;or by using a news interface such as Pnews or trn.; Course Mailing List: cse473; Mailing list archive (not implemented).; Schedule:; This is a tentative; schedule: of topics.; Number of Credits:; 3; Grading:; Homework 25%; Midterm exam 20%; Final exam 30%; Project 20%; Class participation 5%; Hardcopy Readings:; Required text:;The Elements of Artificial Intelligence Using Common Lisp, 2nd edition,;W. H. Freeman, 1995. (I've worked hard to create an AI textbook that is;self-contained, so you don't have to purchase a separate book on Lisp,;you don't have to buy a separate book on AI example programs, and you;don't have to purchase a separate book on the mathematical theory.); Online reference materials for Lisp:; What Lisp is.;;The Lisp FAQ provides the answers to many questions about Lisp and;its implementations.;;Common Lisp: The Language, 2nd edition is the standard reference;on Common Lisp. (It seems best if you access it via the table-of-contents;page, rather than by trying to download the entire HTML file or;postscript.); You can get the source code for;the Lisp programs from The Elements of Artificial Intelligence Using;Common Lisp, 2nd edition.; Here are some interesting links to info about how to use Lisp for;programming World-Wide Web applications.; Facilities:; In order to take advantage of the new Allegro Common Lisp for Windows;implementation of Lisp, with its excellent features for program;development and interface construction, we are using the;Intel Pentium PC laboratory in Sieg Hall.; There is a free version of Allegro Common Lisp that is;for Windows 95 and Windows NT. It can be;downloaded from franz.com on the Web.;If you have this kind of computer at home, with at least 8MB of RAM,;using this may be an attractive option for you.; Final examination:; The final exam for CSE 473 will be given;according to the UW schedule of final examinations.;It will be a closed-book, multiple-choice test.;Bring a mark-sense form with you to the test. Here is a;list of topics that you should know for the final.;Announcements; 25 March.; Welcome to this course and its course web!;This course is about artificial intelligence. It covers;both the mathematical theory of AI and the implementation;of AI techniques in Lisp. Topics include Lisp programming;techniques, knowledge representation, search, logical;reasoning, probabilistic reasoning, case-based reasoning,;planning, learning, language understanding, vision,;neural nets, and expert systems.;31 March.; The reading on CLOS is now linked into the Assignment 2 web page.; The course's newsgroup has been set up by the CSL staff.;""Newsgroup uw-cs.courses.cse473 has been created for CSE 473.;The newsgroup is accessable only through CSE machines.;Messages to the newsgroup can be posted by sending mail to post-cse473@cs;or by using a news interface such as Pnews or trn.""; 22 April.;;The mid-term examination will be given on Wednesday, May 1.; 22 April.; There will be a review session for the midterm exam.;The review will be held Tuesday, April 30 at 4:30 PM in;our regular meeting room.; 26 April.;;Note about Assignment 5: We will be continuing the programming;part of Assignment 5 after the midterm. For Monday, April 29,;turn in, on paper, the following: All your solutions to Part 1;(exercises), your state representation in Part 2, a screen;shot of your user interface as it is so far, a description of;how you are or are going to generate moves in your search program,;and current status of the program.; 15 May.; Workload Reduction Proposal (circulated via email) was approved.; 22 May.;Here is the schedule for the rest of the term:; 24 May (Friday) lecture on neural nets. Preliminary demos of;project. (Either give a preliminary demo right after class, or;turn in a 1-page progress report in class).; 27 May (Monday) Memorial Day holiday -- no class.; 28 May (Tuesday) Review session for Final Exam from 4:30-5:30 in;Sieg 231.; 29 May (Wednesday) lecture on expert systems.;Explanation of peer evaluation system for projects.; 31 May (Friday) Wrap-up. Demonstrations of projects, peer evaluation;of projects.; 4 June (Tuesday) 2:30-4:20. Final Exam in Sieg 231.;Bring a mark-sense form with you to the test.;Assignments;Assignment 1 due on Friday, March 29, in class.;Assignment 2 due on Friday, April 5, in class.;Assignment 3 due on Friday, April 12, in class.;Assignment 4 due on Monday, April 22, in class.;Assignment 5 due on Monday, April 29, in class.;Assignment 6 due on Monday, May 13, in class.;Project portions due on May 17, 24, and 31, in class.;tanimoto@cs.washington.edu;"
"CSE477 Home Page;CSE477: Digital System Design;Steve Burns, Spring 1996;Welcome to the 477 Home Page!;Course Information;Time and Place: MWF 1:30-2:30 - Loew 112; IMPORTANT ANNOUNCEMENTS Last Updated;Summary;Syllabus;Schedule;Lab policies and hours;Staff:;Steve; Burns: instructor;Kent Smith; TA;Casey Anderson; TA;Stephen Lee, Hardware Laboratory manager;;Office hours;Students;Lab Assignments;Lab 1;Lab 2;Lab 3;MC68HC11 Info;Nice Introduction to the 6811 by Fred Martin;Robotics Societies;Seattle Robotics Society;Portland Area Robotics Society;Other Information;Department of Computer Science and Engineering home page; Murphy's Law;Recent Dilbert Comics;A collection of WWW resources (care of Gaetano Borriello); Comprehensive List of Sources; National Semiconductor; Data Sheets; Motorola's Data Book Server; Philips Semiconducter's Data Book Server;The CSE477 Web:;Copyright 1995, 1996; Department of Computer Science and Engineering, University of Washington.;Portions of the CSE477 Web may be reprinted or adapted for academic nonprofit;purposes, providing the source is accurately quoted and duly credited.;burns@cs.washington.edu;"
"CSE501 Home page;CSE 501: Implementation of Programming Languages;Winter Quarter, 1996;Important Course Information;Meeting times; M, W, F from 1:30 to 2:20 in MEB 235; Instructor; Craig;Chambers (chambers@cs), office hours: T, Th 11-12;(starting second week), Sieg 309.; TA; Vass Litvinov (vass@cs), office hours: We 11:00-12:00,; Fr 11:30-12:30, Sieg 423 / a cubicle on the 4th floor.;Archives;Slides from lecture are available here.;Handouts are available here.;Reading assignments are available here.;The full reading list for the class is available here.;Homework assignments are available here.;Messages sent to the cs501@cs mailing list are archived;here.;Last year's midterm exam & answers are available here.;Last year's final exam & answers are available here. (Note that this test was closed;book & 2 hrs, which affected the kind of questions that were;asked.);This year's midterm exam is available here.;Sample solutions are here.;This year's final exam & answers are available here.;Cecil and Vortex Information;Handouts from tutorials;the Cecil language tutorial;the Vortex compiler tutorial;How to Use the Vortex C/C++ Front-end;a list of compiler files of; interest;dead-assign-elim.cecil; -- a simple example of an IDFA;cfg-traversal-interface.cecil -- the CFG traversal framework;Vortex RTL Textual Description; Grammar;Cecil reference documentation;Documentation is available both in HTML and PostScript formats:;The Cecil language reference manual (postscript version);How to Use the Vortex Compiler (postscript version);The Cecil Standard Library reference manual (postscript version);Other Resources;The previous quarter's Web page, including all the old slides, etc.,;is available here.;;More information about compiler and language research can be found on;Mark Leone's programming language research page.;chambers@cs.washington.edu;"
"CSE501 Home page;CSE 501: Implementation of Programming Languages;Important Course Information;Meeting times; M, W, F from 2:30 to 3:20 in Sieg 226; Instructor; Craig Chambers (chambers@cs), office hours: T, Th 11-12, Sieg 309.; TAs; Jeff Dean (jdean@cs) and;Dave Grove (grove@cs), office hours: M, F from 10:30 to 11:30. Come find us in Chateau 110 and we'll go to the Chateau conference room.;Archives;Slides from lecture are available here.;Slides from the Cecil language turorial are available;here.;Handouts are available here.;Reading assignments are available here.;The full reading list for the class is available here.;Messages sent to the cs501@cs mailing list are archived here.;Project;The course project is to implement some sort of program analysis and;transformation in the Vortex compiler. Vortex is an optimizing;compiler for object-oriented languages, and is written in Cecil.;;More information about the Vortex compiler can be found on the Cecil;project home page.;;Some Cecil manuals can be found; here.;Other Resources;More information about compiler and language research can be found on;Mark Leone's programming language research page.;jdean@cs.washington.edu;"
"CSE 505 Home Page;CSE 505: Concepts of Programming Languages;Autumn 1996 / MWF 10:30-11:20 / Loew 113.;Instructor: David Notkin; (notkin@cs);office hours: Tu 2:30-3:30PM, F 1:00-2:00PM, Sieg 414 (and by;appointment);TA: Kurt Partridge;(kepart@cs);office hours: Th 12:00-1:00, 4th Floor Cubicles;Course Handouts; Introductory handout html, postscript; Assignments; Readings;Mailing List and Threaded Archives;We will be using the mailing list for administrative and instructional;purposes. If you wish to refer to a previously sent message, see the threaded mailing list archives.;Send mail to the list at:;cse505@cs.washington.edu. To subscribe to the list, send email;to majordomo@cs.washington.edu with the single line in the message body;(not the subject):;subscribe cse505;General Programming Language Research Resources; Yahoo's page; Mark Leone's excellent;Programming Languages Research pages;Programming language critiques;Gary Leaven's language self-study page;Functional Languages Resources;MIT's Scheme home page;CMU's Standard ML page;A Gentle Introduction to ML;Haskell FAQ; Pages on the lambda calculus from Washington University; Some more lambda calculus pages from Monash University;Object-Oriented Languages Resources; University of Geneva's object-oriented programming info page; UW's own Cecil project; Dylan pages at Carnegie Mellon and Apple Computer.;Questions? Send us mail.;"
301 Moved Permanently;Moved Permanently;The document has moved here.;
"CSE 521, Design and Analysis of Algorithms;CSE 521, Design and Analysis of Algorithms; Winter 1996; Instructor:;; Richard Anderson,;; anderson@cs.washington.edu; Lectures; TTh 10:30 am - 11:50 am in Seig 231; Office Hours; Monday, 11:00 am - 11:50 am, other times by appointment; Teaching Assistant:; William Chan ,;; wchan@cs.washington.edu; Office Hours; Monday 1:30 pm - 2:20 pm and Wednesday 1:00 pm - 1:50 pm; In Chateau conference room (or in a Sieg 4th floor cubicle; if somebody else is using the conference room); Course Information;Prerequisite: I am going to be assuming that you have already had an;undergraduate course in algorithms. If I am wrong, let me know as soon as;possible.;Lecture Log;Suggested Reading;Textbook Errata List; Project; Yes, 521 really does have a project! For a preview, check out;Eric Anderson's;applet.; Assignments and Other Handouts;Written homework sets will generally be due on Tuesdays in class.;Background quiz (post script); Homework Sets:; Homework 1; and solution; Homework 2; and solution; Homework 3; and solution; Homework 4; and solution; Homework 5; and solution; Homework 6; Homework 7; and solution; Homework 8; Homework 9;Midterm Exam: Cancelled, due to lack of interest.; Final Exam: I have been told that it is on Monday, March 11 -;I should probably verify the time. The exam will be a two hour, closed book,;in class exam that covers all of the material from the class. The exam will;consist of short answer and problem solving questions.;Bureaucratic stuff;Grading Based upon homework, exams, project and class participation.;Working together on homework It is okay to discuss homework;problems with your classmates, but you must write your solutions up;independently. (The Gilligan's Island rule could be invoked: between;any discussion of the homework, and writing up a solution, you must;watch at least half an hour of Gilligan's Island. The theory is that;an episode of Gilligan is equivalent to a reboot, so anything that;survives was learned and understood.);anderson@cs.washington.edu;wchan@cs.washington.edu;"
"CSE 524, Parallel Algorithms;CSE 524, Parallel Algorithms; Spring 1995; General Information;Meets: TTh 9:00-10:30, Sieg 225;Instructor: Richard;Anderson;Office Hours: By appointment;E-mail address: anderson@cs;Office: Sieg 410; Homework and Exams; Catalog;Description;Design and analysis of parallel algorithms: fundamental parallel algorithms;for sorting, arithmetic, matrix and graph problems, and additional selected;topics. Emphasis on general techniques and approaches used for developing;fast and efficient parallel algorithms and on limitations to their;efficacy. Prerequisite: CSE 521 (or equivalent). CSE Majors only.; Homework Assignments and Notes; Syllabus; Homework 1 Due Thursday, April 6.; Homework 2 plus some rambling comments;about the course. Due Thursday, April 20.; Lecture Transparencies, April 11 Code and analysis;for list ranking.; Old lecture notes;on connected components (this algorithm;is simpler and correcter than Section 5.1.3.) LaTeX;version; Pointers to papers about pointers References;for EREW and CREW Connectivity and the Ullman-Yannakakis paper.; Homework 3 Due Tuesday, May 2.; Union-Find Paper .ps or .dvi; Homework 4 Due Thursday, May 18.; Certified Write-All Paper .ps or;.dvi This implies the existence of;a more efficient consensus algorithm based upon swap - although it is not likely;something you are going to see inside your next supercomputer.; Homework 5 Due Thursday, May 25.; Asynchronous P-RAM references - Martel et al. FOCS 1990, and; Buss et al. (Manuscript) .; Notes on memory models .; Real Description;As a special topics course, the content is up to the whim of the instructor.;A more descriptive title for this year's course would be: A theory of shared;memory parallel computing, or maybe, topics in the theory of SMPC.;The course will start with a collection of basic algorithms, and then we;will spend some time on models of computation. The;syllabus gives a list of topics which could be covered.;My use of the term ""shared memory"" is to indicate that we will not be looking;at topics which pertain to specific interconnection topologies. We;will consider some situations where the cost of memory access is;non-uniform.;The course will be a theory course in the sense that we will not;consider particular real machines, we will prove some theorems, and;you will not be expected to log on to a parallel machine. However,;topics may be motivated by practical considerations. Our goal in;developing parallel algorithms will be to come up with algorithms;which could conceivably be efficient on some parallel machines.;I am expecting that there will be three or four problem sets,;containing a mix of routine and challenging problems. I am not going;to require a project, (but I will be happy if students do outside;work on course related topics).;The text for the course will be ""An Introduction to Parallel;Algorithms"" by Ja Ja. This is a nice book, although I will not be;following it very closely. If you are feeling exceptionally cheap, you;could probably get by without purchasing a copy. My original plan,;when I volunteered to teach the course a year ago, was that the text;would be ""A Theory of Shared Memory Parallel Computing"" by Anderson.;However, this book is progressing about as fast as Volume 7 of the Art;of Computer Programming, so I chose the Ja Ja book instead.;I am going to be quite flexible on how this course is taught. My;choice of topics will be influenced by what is considered interesting;or uninteresting. There is also a choice as to teach this course as;either a traditional lecture course, or to work in some research;content. I have a number of open problems in mind which could turn;into very nice research results. I could present my half baked ideas;on some of these, provided that others have the interest and;energy to think about them.;anderson@cs.washington.edu;"
"CSE 531 Home Page; CSE 531: Automata, Computability, and Complexity;;The 531 web pages have moved:;Current Quarter;Autumn 1991;Autumn 1994;Portions of the CSE 531 Web may be reprinted or adapted for;academic nonprofit purposes, providing the source is accurately;quoted and duly credited. The CSE 531 Web: Copyright 1996,;Department of Computer Science and Engineering, University of;Washington.; Comments to:;;cse531-webmaster@cs.washington.edu;;(Last Update:;; 10/21/96;);"
": text/html;CSE 531 Home Page, Fall '91;CSE 531: Automata;Autumn 1991; Instructor: Paul Beame;Welcome to the 531 Home Page!;This is the World Wide Web (""the Web"" for short) hypermedia document;for CSE 531.; Exams:; Quiz 1: Postscript; Quiz 2: Postscript; Final: Postscript or; Latex;beame@cs.washington.edu;"
"CSE 531 Fall '96; CSE 531: Automata, Computability, and Complexity;; Larry Ruzzo, Fall 1996;; TuTh 10:30-11:50, 224 Sieg;;StaffNameEmailPhoneOffice Hours;Instructor:;Larry Ruzzo;ruzzo@cs543-6298Tu 2:30-3:20 F 1:00-2:20Sieg 415;TA:;Nitin Sharma;nitin@cs MW 3:30-4:20Sieg 326A;Class E-mail:; (Last update:;;; 10/21/96 at 09PM.);A log of all messages sent out to the class e-mail list;(cse531@cs.washington.edu).;; Textbook Errata;Handouts;Administrivia;Homework;Midterm;LaTeX Source:;Course Organization;Syllabus;Collaboration; 1; 2; 3; 4; 5;Midterm; Acrobat:;Course Organization;Syllabus;Collaboration; 1; 2; 3; 4; 5;Midterm;PostScript:;Course Organization;Syllabus;Collaboration; 1; 2; 3; 4; 5;Midterm;About file formats: Most of the;course materials above are provided in three formats:;LaTeX:; Plain ASCII text including formating commands.; Simple things (e.g. assignments) are generally quite legible in; this format. For figures and complex math stuff, these are; hard-to-impossible to read.; Adobe Acrobat :; The latest & greatest. A free viewer is available on; some of the department's unix systems (""acroread""), or is; perhaps aavailable from Adobe's; Acrobat and the Web Page.;;PostScript:; Use ghostview, or see the; Ghostscript Home Page; for free viewers (Mac, Windows, OS/2, Linux, ...);;At this time, Acrobat is supported on fewer systems, but is;preferable if you can use it -- files are smaller, rendering is;faster and more legible, and it can print (which Mac Ghostscript;can't, for example).;Old Course Webs:;Autumn 1991;Autumn 1994;Portions of the CSE 531 Web may be reprinted or adapted for;academic nonprofit purposes, providing the source is accurately;quoted and duly credited. The CSE 531 Web: Copyright 1996,;Department of Computer Science and Engineering, University of;Washington.; Comments to:;;cse531-webmaster@cs.washington.edu;;(Last Update:;; 11/26/96;);"
"CSE 543 Home Page;CSE 543:;Computer System;Performance Modeling;Spring 1996;Your Hosts:;Ed Lazowska;and;Mary;Vernon;Welcome to the home page for CSE 543, Computer System Performance;Modeling.;CSE 543 meets Mondays, Wednesdays and Fridays from 1:30-2:20;in Loew Hall 115.;Office hours;Tentative topic schedule;Comings and goings;Assignments;Project information;MAP (queueing network solution; package);Email;Other information is available about:;The May 1996;ACM SIGMETRICS Conference on Measurement and Modeling of Computer;Systems;UW Department of Computer Science & Engineering;lazowska@cs.washington.edu;"
"CSE 548 Home Page (W 96);CSE 548: Computer Systems Architecture;Winter 1996;Instructor;Susan; Eggers;; , eggers@cs.washington.edu, Sieg 308, 543-2118; Office Hours: TuTh 11 - 12;TA;Joshua Redstone; , redstone@cs.washington.edu, Sieg 233, 543-7798; Office Hours: M 2:30 - 3:20, W 4:00 - 4:50 in Sieg 326a; Course information;Course Overview (Postscript);Schedule (continuously updated) (Postscript);Lecture Notes;Problem Sets;Previous Tests;Architecture History (Postscript);Specmark Ratings (Postscript);Other information; Tools;;; Shade - an Instuction Set simulator for the SPARC V8;; Atom - a system for building analysis tools on the; Alpha 21064;; Tullsen's 21164 Simulator - An execution-driven,; instruction-level simulator that simulates a superscalar; architecture very close to the 21164.; Etch - a binary rewriter to; analyze Pentium code.;; Alpha Hardware Monitors; Multiflow - Compiler for the Alpha;; Pixie - just User's Manual from 1991(Postscript); Dinero - A 'uniprocessor cache simulator'; Local Machines;; Alphas; Pentiums; PowerPCs; SPARCs; Applications;; Multiprocessor; Uniprocessor;; SPEC benchmarks;Other neat pages; CPU Info Center - info on current/future processors;"
"CSE 551 Home Page;CSE 551: Operating Systems; Instructor; Hank Levy, Spring;1996.; TA; Frederic Pighin; Meeting times; Tue, Thu. 10:30-11:50 in EEB 113.; Instructor office hours; TBA; TA office hours; Mon, Fri. 2:30-3:30 in Chateau conference room.; Number of units; 3; Welcome to the 551 Home Page.;This is the World Wide Web (""the Web"" for short) hypermedia document for;CSE 551 and contains information about the class. Keep in mind that this;document is not static, and that new information (especially class;messages) will be added frequently. If you have any problems with this;document, send mail to;pighin@cs.;Announcements; April 4; The first assignment is ready. It;is due on Thu. April 11.;Course Information; Course mail; Assignments; The Project;levy@cs.washington.edu;"
"CSE 557 Home Page;CSE 557: Computer Graphics;Autumn Quarter 1995;Welcome to the CSE 557 Home Page!;This is the World Wide Web hypermedia document for CSE 557, which;contains a wealth of information about the class. Keep in mind that;this document is not static, and that new information will be added;frequently.;If you have any problems with this document, send mail to derose@cs.;Click here for help.;Available information:;Your professor and TAs;Course syllabus;Lecture notes;Written homework assignments and solutions from last year;Project handouts;Project grading policy;Old tests;Cool images from last year's 557;Additional information:;Getting into the class;The SGI Instructional Lab;Using the Indys;MVis home; page (visitor and room scheduling);The; Computer Science and Engineering Department,;The;; Computer Science degree program (offered through the College; of Arts and Sciences),; The;; Computer Engineering degree program (offered through the College; of Engineering),;and;Mosaic Help:;Help is available on the following topics:; Basic information about Mosaic.; Information about the HyperText Markup Language;(HTML); Uniform Resource Locators;(URL); How to read the web from home using;Lynx,;a character-based web browser;"
"`;CSE 567 Home Page (A 96);CSE 567: Principles of Digital Systems Design;Carl Ebeling, Fall 1996;Welcome to the 567 Home Page!;Course Information;Time and Place: MWF 1:30-2:20 - Loew 201; IMPORTANT ANNOUNCEMENTS;Summary;Syllabus;Text books;Staff:; Carl Ebeling: instructor; ebeling@cs; Office Hours: Wednesday 2:30; Friday 11:30 (Sieg 215); Paul Franklin TA; paul@cs; Office Hours: Monday 3:30; Thursday 1:30 (Sieg 424); Ken Hines TA; hineskj@cs; Office Hours: Tuesday 1:30; Wednesday 3:30 [Friday, Oct. 25, 12:00] (Sieg 424); Larry; McMurchie: Research Staff and CAD Tools Guru; larry@cs;Documentation for simulation and; synthesis;How to design for the Pamette; board. (Mostly complete, still under construction.); Students;Working in groups;Homework Assignments;A note on doing homework.; Homework 1: due;Friday, Oct. 11, beginning of class.; Homework 2: Handed out in class, due Oct. 18, beginning of class.; Homework 3: due Monday,;Oct. 28, beginning of class.; Homework 4: due Wednesday,;Nov. 6, beginning of class.; Homework 5: due Friday,;Nov. 15, beginning of class.; Homework 6: due Monday,;Dec. 15, beginning of class.;Handouts;Other Information;Department of Computer Science and Engineering home page;;EE/CS Mother Site; List of VLSI links; ComprehensiveList of IC;Manufactures;Murphy's Law;Recent Dilbert Comics;The CSE567 Web:;Copyright 1995, 1996; Department of Computer Science and Engineering, University of Washington.;Portions of the CSE567 Web may be reprinted or adapted for academic nonprofit;purposes, providing the source is accurately quoted and duly credited.;ebeling@cs.washington.edu;"
"CSE 573 Index Page;CSE 573 - Artificial Intelligence;Fall Quarter, 1996;Artificial intelligence (AI) poses two of the most fundamental and;challenging questions in computer science: can we build intelligent;machines? How? This course addresses these questions by providing an;in-depth introduction to selected topics in AI including agent;architectures, knowledge representation, search, planning, machine;learning, reasoning about uncertainty, and AI methodology.;Staff:;Dan Weldweld@cs;Sieg 408543-9196Hours, TBA;Marc Friedmanfriedman@cs;Sieg 429543-5129Hours, TBA;Nick Kushmericknick@cs;Sieg 428685-2723Hours, TBA;Outline of Topics;Reading Assignments;Assignments & Exams;Grading;Resources;The Class Mailing;List; see also the archive of past messages;"
"CSE 574 Uncertainty and Decision Making; CSE 574 Uncertainty and Decision Making in Artificial Intelligence ---; Winter 1996; Professor:;; Steve Hanks,; hanks@cs.;; Office: Sieg 210, 3-4784; Office hours whenever I'm around, or by appointment.;; Email addresses:;Mail to; cse574@cs.washington.edu goes to all class members.;Send mail to; cse574-request@cs.washington.edu;;to get put on the list.; Reading material:; Pearl: Probabilistic Reasoning in Intelligent Systems;This is the ""required"" text for the class, and we will read several;chapters. You can probably get by without buying it if you're strapped;for cash, though it's a nice reference book.; Shafer and Pearl: Readings in Uncertain Reasoning;This is a nice collection of foundational papers on reasoning and;uncertainty, and we will read several selections. A copy will be;available in the GRAIL library.; E.T. Jaynes: Probability;Theory: The Logic of Science.;Fragmentary edition of July 1995.;This is an extremely interesting technical and historical look at the foundations;of probability theory, statistics, and decision theory. Definitely worth;looking at for the reference list and historical perspective alone! The;math can be heavy going in places, but it's beautifully written.; Neapolitan: Probabilistic Reasoning in Expert Systems, Theory and;Algorithms;A significant overlap with the Pearl book, so a good;secondary source for information about graphical models and propagation;algorithms. This is available from the Math Research library.; Other papers to be arranged.;Course summary:;Here is a summary of the topics we covered and the readings,;in HTML or;Postscript.;;hanks@cs.washington.edu (Last Update: 06/20/96);"
"CSE/EE 576 Home Page;CSE/EE 576: Image Understanding;Welcome to the 576 Home Page!;This is the World Wide Web (""the Web"" for short) hypermedia document;for CSE/EE 576 and contains information about the;class. Keep in mind that this document is not static, and that new;information (especially class messages) will be added frequently.;If you have any problems with this document, send mail to; mock@cs.;Copyright Notice: The material in this course web is subject;to copyright. While it may be viewed by the public,;it should not be installed at any web site other;than the one at the University of Washington.;Assignments;The first assignment is to read Chapter 1 of the course notes and do;exercise 5.;The second assignment is due Wednesday, April 5.;Read Chapter 2 of the course notes and do exercises 1-7.;Next, determine the most convenient way to;run KHOROS and CANTATA for you. In CSE it runs on Suns such as;Lillith.;Edit your local workstation's .login file to contain;xhost +lillith;Then add to you .cshrc file on the Suns the following:; setenv KHOROS_HOME /usr/local/khoros; setenv MANPATH /usr/local/khoros/man; set path=($KHOROS_HOME/bin $path);After an rlogin onto Lillith with your rhost assignments;and DISPLAY environment variable set up appropriately, type;cantata at the Unix prompt. In EE, the machine ""george"" has;KHOROS and CANTATA installed on it.;Also go to our course home page on the WWW;http://www.cs.washington.edu/education/courses/576/index.html;and follow the links to the KHOROS/CANTATA tutorial. Go to its;course outline, to ""experiments"" and do at least the first two;topics (""Image information"" and ""Spatial Resolution"").;The ideal way to take the tutorial is to read the web pages;and experiment with KHOROS in another X window.;There is nothing to turn in for this part of the assignment.;The third assignment is to read the article by Lin, Huertas, and;Nevatia on pp.62-69 of the CVPR'94 proceedings, and also to;look at the article by Wolff on pp.369-376.;The fourth assignment is due Monday, April 17. In this assignment,;we make a comparison of three image-processing software environments:;KHOROS, MSVC/C++ & ""Image"", and MATLAB Image Processing Toolbox.;The objects of the assignment;are (1) to gain some experience with each environment,;(2) to begin to get a feel for the strengths and weaknesses of;each of these environments, and (3) to explore the use of;convolution in noise suppression and edge detection.;In each environment: (a) select a monochrome test image.;(b) apply the Sobel operation to the test;image. (c) apply a moving average filter to the test image.;(d) apply a 3 by 3 laplacian to the test image.;(e) simulate gaussian smoothing with larger standard-deviation;gaussians by iteratively applying the moving average filter.;(f) apply the 3 by 3 laplacian to each gaussian-smoothed image.;(g) describe the results obtained in terms of changes in appearance;to objects and contours in the test image.;(h) describe the following aspects of the implementation:;what menu selections, direct manipulations, or programming you;had to do to perform the experiments; how fast the operations ran;;and level of learning effort required on your part.;Announcements;The final examination will be on Monday, June 5 from 2:30 to 4:20PM;in our regular class meeting room. The exam will cover a combination;of pre-midterm and post-midterm material.;Here is a list of topics to study.;Reminder: the class approved Sunday, June 4 from 1:30-2:30;as the time for the final-exam review meeting. The plan is to meet in;Sieg 422.;Outlines for selected class periods are available here:;Friday, 28 April.;Monday, 1 May.;Wednesday, 3 May.;Monday, 8 May.;Friday, 12 May.;Monday, 15 May.;Wednesday, 17 May.;Friday, 19 May.;Monday, 22 May.;Wednesday, 24 May.;Copies of the overhead transparencies for the May 22 and 24 lectures on;neural nets are available at the Engineering Library Copy Center (2nd floor);as CSE/EE 576 packet number 2 (""Trainable Classifiers"").;Friday, 26 May.;Students in 576 are permitted to get a temporary copy of;MATLAB for their own use in the course. This will require;that you fill out a form and sign a contract.;Let me know if you are interested.;Term projects are an important part of;the course. These are to be started during the week of April 24.;Here are some corrections to the course notes.;On Friday, April 7, we were introduced to the Pentium laboratory, including;the MSVC/C++ software development environment.;Here is Evan McLain's document;explaining how to add a new transform to the Image application.;Here is;Current status of the KHOROS installation on the Suns.;It contains the most recent information about getting started with;Khoros and the accompanying DIP course.;Please read this.;No class on Friday, March 31 or Monday, April 3.;;Most students already have a computer account that can access;KHOROS and CANTATA. If you do not, contact Renee Reed on;Thursday or Friday to make an arrangement to pick up your;account login name and password so that you can use it;over the weekend and early next week. Renee's hours are;limited, so plan ahead. Her email address is reed@cs, and;she is in part of Sieg 127 (in a back office).;Sieg 127 is kept locked, so you will either need to knock or;have a prior arrangement to meet her.;Many of the account application cards were not signed. We will;have to take care of that next week.;Selected Lecture Slides; Monday, March 27.; Wednesday, March 29.;Information Resources for Image Understanding; An Online Intro to Image Processing with KHOROS/CANTATA; The Delft Univ. Pattern Recognition Information Page.; The Computer Vision Home Page (stored at CMU).;Other information; Home page for the;Department of Computer Science and Engineering;;Online version of the Computer Science undergraduate brochure;;Online version of the Computer Engineering undergraduate brochure;Mosaic Help:;If you're running Mosaic on a Mac, you can find some help items;under the Mac Balloon Help menu, and on the MacMosaic Home Page item;under the Navigate menu, and; here.;(Last Update: 31 May 1995);"
"CSE 581 Home Page;CSE 581: Parallel Computation in Image Processing;Welcome to the 581 Home Page!;This is the World Wide Web (""the Web"" for short) hypermedia document;for CSE 581 and contains information about the;class. Keep in mind that this document is not static, and that new;information will be added from time to time.;Schedule Information;On October 31, November 7, and 9, class will begin a half-hour;earlier than normal. I.e., we will start at 8:30 on these days.;On November 1, we will meet at 9:00 and have a guest speaker,;Prof. Ze-Nian Li of Simon Fraser University in Burnaby, B.C., Canada.;Tuesday, November 14: no class.;November 16 at 9:00. Dr. Bharath Modayur will be our guest speaker,;and the title of his presentation is,;""Efficient parallel object recognition on SIMD and MIMD machines"".;Tuesday, November 21. Class will begin at 8:30 AM.;Topics: Completion of discussion of pyramid algorithms -- scale-invariant;operators, top-down algorithms, and segmentation through hierarchical;relaxation (using the ISODATA approach of Burt, Hong and Rosenfeld).;Introduction to embedding and virtual processing.;Overview of neural network architectures.;algorithms,;Tuesday, November 28. Class will begin at 8:30 AM.;Topics: Completion of overview of neural network architectures.;Embedding of neural networks in meshes and pyramids.;Brief treatment of iconic/symbolic computation.;Thursday, November 30. Class will begin at 8:30 AM.;Topic: Parallel image analysis for digital libraries.;Here is the;demo schedule.;Finding term project topics;During the week of October 12-18 students should be actively;exploring one or more topics for the term project.;Written descriptions of topics should be handed in;on Tuesday, October 24. A template for the writeups;is available;here.;Resources;PVM (Parallel Virtual;Machine) is a software layear that permits a user program to run on a;virual machine made up of a heterogeneous collection of one or more;workstations. This is a convenient way to implement and study;distributed algorithms.;Intel SSD Technical;Publications include documentation for the Intel Paragon;parallel computer system.;The;ZPL language is a good language in which to implement;2-D array-oriented algorithms on the Intel Paragon.;Various;vendors of supercomputers and parallel machines.;Some info on;the MasPar, from the National Supercomputer Center in Sweden.;Some online information for the MasPar MP-2 is at the;University of Tennessee.;This resource was found by Neal Friedman. He reports that;""they've also got some Paragon documents."";Here are some errors in and corrections;to the course notes.;Copyright Notice: The material in this course web is subject;to copyright. While it may be viewed by the public,;it should not be installed at any web site other;than the one at the University of Washington.;Term projects are an important part of;the course. These should be started during the week of October 16.;The review session for the final is schedule for Friday, December 1,;4:30-6:00 in 422 Sieg Hall.;The final exam is scheduled for Wednesday, December 13 from 10:30 to 12:20;in our normal class meeting room. The exam is closed-book.;Term projects are due at or before 4:30 PM, Thursday, December 14.;(Last Update: 10 October 1995);"
"CSE 590B: Graphics Seminar;C S E 5 9 0 B : ;G R A P H I C S ;S E M I N A R;Spring 1996;Numerical Methods in Graphics;April 3;Matrix Computations I;Intro: Definitions, Properties, Inversion (Brad C.);Solving Linear Systems (Eric);April 10;Matrix Computations II;Eigenvalues &amp Eigenvectors (Dan F.);Singular Value Decomposition (Joel);April 17;Root Finding/Nonlinear Equations (Corey, Shuichi);April 24;Optimization;Intro and Unconstrained Optimization (Kari);Constrained and Global Optimization (Kevin);May 1;Linear and Quadratic Programming;Linear Programming (Chuck/Ronen);Linear &amp Quadratic Programming: Examples (Daniel);May 8;Data Fitting;Intro and Conclusion (Mike);Linear Regression and Calibration Example (Brad W.);May 15;Ordinary Differential Equations; Intro, Methods, Papers (Adam);More Methods &amp Papers (Joanna);May 22;Discretization Methods;Finite Elements &amp Radiosity (Fred); PDEs &amp Finite Differences (Jim);May 29;Interval Arithmetic (Troy, Jonathan);Last modified: Wed Apr 3 18:08:02 PST 1996;"
"CSE 590BI, Winter 1996;CSE 590BI, Winter 1996 Algorithms in Molecular Biology;Richard Karp, Larry Ruzzo, Martin Tompa;Class Bboard:; (Last update:;;; 08/06/96 at 07PM.);Handouts:;Administrative;Lecture Notes;(Drafts);Homework;HTML:;Syllabus;Schedule;;;; Acrobat:;Title/TOC;Syllabus;Schedule;1;2;3;4;5;6;7;8;9;10;17;18;11;12;13;14;15;16;19;20;HW 1;HW 2;PostScript:;Title/TOC;Syllabus;Schedule;1;2;3;4;5;6;7;8;9;10;17;18;11;12;13;14;15;16;19;20;HW 1;HW 2;;Slides:;;;10;;;About file formats: The;course materials above may be provided in any of several formats:;HTML:; Usual Web format. This loads fast and is usually readable,; but many parts will be generated by automatic translations; from LaTeX, and the translation may not be very faithful to; the format of the original.;;Adobe Acrobat :; The latest & greatest.; Get a free viewer from Adobe's; Acrobat and the Web Page.;;PostScript:; The; Ghostscript Home Page; has free viewers (Mac, Windows, OS/2, Linux, ...);;At this time, Acrobat is supported on fewer systems, but is;preferable if you can use it -- files are smaller, rendering is;faster and more legible, and it can print (which Mac Ghostscript;can't, for example).;ruzzo@cs.washington.edu;(Last Update: 04/08/96);"
"CSE 590D All Quarters;CSE 590D: Special Topics;Steven Tanimoto, instructor;CSE 590D (Autumn 1995): Transcript-Based Education/WWW.;CSE 590D (Winter 1996): Mathematics Experiences Through Image Processing.;CSE 590D (Spring 1996): Mathematics Experiences Through Image Processing.;CSE 590D (Autumn 1996): Technology for Collaborative Learning.;Copyright Notice: The material in this course web is subject;to copyright. While it may be viewed by the public,;it should not be installed at any web site other;than the one at the University of Washington.;This graduate seminar explores a variety of topics related to the use;of computers in education. Specific topics and activities vary;from quarter to quarter.;(Last Update: 30 September 1996);tanimoto@cs.washington.edu;"
"CSE 590D Home Page (Autumn 1995);CSE 590D (Autumn 1995): Transcript-Based Education/WWW;Welcome to the CSE 590D Home Page!;This is the World Wide Web (""the Web"" for short) hypermedia document;for CSE 590D and contains information about the;class. Keep in mind that this document is not static, and that new;information will be added from time to time.;Copyright Notice: The material in this course web is subject;to copyright. While it may be viewed by the public,;it should not be installed at any web site other;than the one at the University of Washington.;Reading for October 10 -- G. McCalla: ""The Central Importance;of Student Modelling in Intelligent Tutoring."";Reading for October 17 --;(presented by Sandi Youngquist);Meeting of October 23 -- Discussion with Paul Barton-Davis about;Internet services.;Reading for October 31 -- C. Laborde and J-M Laborde:;""Problem Solving in Geometry: From Microworlds to;Intelligent Computer Environments"" (presented by Tessa Lau);Reading for November 7 -- B. Bartels: ""Promoting mathematics;connections with concept mapping"";(plus presentation by Gary Anderson);No meeting November 14 --;Reading for November 21 --;The readings for this meeting are all online (on the WWW).;The first paper combines some degree of ""vision"" (a little);with some degree of technology (nothing particularly ambitious,;but a description of the state of the art);The second paper is a non-technical piece that promotes the;theme of learners taking responsibility for their education --;something that will be increasingly important in the future.;The two choices for the third reading are papers that are more;sophisticated than either of the first two. The paper ""Beyond;Browsing"" elaborates on the possibility of group annotation of;WWW materials. The paper ""The DEC Web Toolkit"" describes in;technical terms a layer of Internet infrastructure that could;make it possible to have ""smart distributed tutorial"" applications;that do more than what Mosaic or Netscape can achieve.;Please read both 1 and 2 and either of the options for 3.;1. Advanced Educational Uses of the World-Wide Web;http://www.igd.fhg.de/www/www95/proceedings/papers/89/paper.html; (presentor: Jeremy Baer);2. Empowering Students in the Information Age;http://www.ncsa.uiuc.edu/SDG/IT94/Proceedings/Educ/ward/ward.html; (presentor: Marla Baker);3. Either; Beyond Browsing: Shared Comments, SOAPs,; Trails, and On-line Communities;http://www.igd.fhg.de/www/www95/proceedings/papers/88/TR/WWW95.html; (presentor: John Dietz); or; The DCE Web Toolkit: Enhancing WWW Protocols; With Lower-Layer Services;"
"CSE 590D Home Page Autumn 1996);CSE 590D (Autumn 1996): Technology for Collaborative Learning;Welcome to the CSE 590D Home Page!;Copyright Notice: The material in this course web is subject;to copyright. While it may be viewed by the public,;it should not be installed at any web site other;than the one at the University of Washington.;General description for Autumn 1996; Computer technology, the Internet, and new methodologies;for teaching and learning are currently coming together in;new ways. This seminar will explore a few of them.; We will read a number of papers on technology for;collaborative learning. Each participating student will;take responsibility for making a presentation to the group on one of;these papers. We will cover a subset of;these papers.; We will also explore some of the possible applications of;AI and visualization techniques to the analysis of evidence of;student learning in online contexts.;Meetings are currently scheduled for Tuesdays 2:30-3:20.;However, we may decide to move the time to better fit into;people's schedules.;Visits to the Meany Middle School and the Washington Middle School;may be scheduled, depending on the interests of the participating;students.;(Last Update: 25 September 1996, S. Tanimoto);"
"CSE 590g, Architecture Lunch;CSE 590g - Architecture Lunch;Course organizer:;Jean-Loup;Baer;Meeting time:;Tuesdays, 12:30pm to 1:20pm, in MOR 226;CSE590G, aka ""architecture lunch"", will continue this quarter with;almost the same format as previous years,;i.e., selection of papers to be discussed;at the beginning of the quarter, distribution on week n of;the paper to;be read during the week and discussed at week (n+1). There might;be a few formal presentations of work in progress by;esteemed members of the ""lunch"". Mostly;we'll have (hopefully heated) discussions;on papers from the literature.;The only difference between this quarter and previous quarters;is that we'll start by reading the position papers from;participants of a recent NSF Workshop on;Critical issues in Computer Architecture Research.;You can get a copy here;Reading these positions papers will lead us to one or more;themes of papers to read this quarter.;With many thanks to Ruth Anderson, Molly Brown, Ori Gershony,;and Matthai Philipose a tabular summary of;the Gurus positions can be found;here;For those of you who are new, our usual format is for one of the;students to lead the discussion of the papers, either informally;or with slides. Credit for the course is variable: 2 credits if;you present, 1 if you just read.;The first meeting (organization meeting);will be Tuesday October 1 at 12:30 in;MOR 226;On Tuesday Oct 22, we will read:;Value locality and Load value prediction by Lipasti, Wilkerson and Shen, ASPLOS VII pp 138-147.;All ASPLOS-VII papers are on line. Follow the links from:;ASPLOS-advance;program;I have put a short;bibliography of PIM (processor in memory);on line. I'd appreciate volunteers for the;Saulsbury, Burger and M-machine papers.;On Tuesday Oct 29, we'll read;Ashley Saulsbury, Fong Pong, and Andreas Nowatzyk;""Missing the Memory Wall: The Case for Processor/Memory Integration"";ISCA 1996 pp 90-101;On Tuesday Nov 5, we'll read;M.Fillo, S.Keckler, W.Dally et al.;""The M-machine multicomputer"";Micro 28 1995 (available on the net: follow the;M-machine;link. );On Tuesday Nov 12, we'll read;Doug Burger, Stefanos Kaxiras, and James R. Goodman;""DataScalar Architectures and the SPSD Execution Model"";University of Wisconsin-Madison Computer Sciences Department;Technical Report 1317, July 1996.;available on the net;On Tuesday Nov 19, we'll read;""Intelligent RAM (IRAM): Chips that remember and compute"";by Patterson, Anderson, Cardwell, Fromm, Keeton, Kozyrakis, Thomas;and Yelick. The paper is available;here;We are fortunate that one of the authors, Prof. Tom Anderson,;will present the paper.;To subscribe to the CSE 590g mailing list, send email to the;majordomo mailing list at ""majordomo@cs""; the mail's contents should;include the line ""subscribe cse590g"". Leave the ""Subject:"" line;blank. You should shortly receive a message back saying ""welcome"".;baer@cs.washington.edu;"
CSE 590h Home Page;CSE 590h Home Page; The Spring 1995 offering of CSE 590h.;An experimental graduate course on human-computer interaction.;borning@cs.washington.edu;
"CSE 590k, Compiler Seminar;CSE 590k - Compiler Seminar;Course organizers:;Susan Eggers;and Craig;Chambers;Meeting time:;Wednesdays 4:00pm to 4:50pm. Officially, we're in Loew 220, but;really we meet on the second floor of the HUB Atrium.;Schedule;Week 1 (1/10):;""MemSpy: Analyzing Memory System Bottlenecks in Programs,"" by Margaret;Martonosi, Anoop Gupta, and Thomas Anderson. (Anderson);Week 2 (1/17):;""A General Approach for Run-Time Specialization and Its Application To;C,"" by Charles Consel and Francois Noel. (Lee);Week 3 (1/24):;""A Practical Data Flow Framework for Array Reference Analysis and Its;Use in Optimizations,"" by Evelyn Duesterwald, Rajiv Gupta, and Mary;Lou Soffa. (Lo);Week 4 (1/31):;""Value Dependence Graphs: Representation Without Taxation,"" by Daniel;Weise,Roger Crew, Michael Ernst, and Bjarne Steensgaard.;(Litvinov);Week 5 (2/7):;""Iterated Register Coalescing,"" by Lal George and Andrew Appel.;(Garrett);Week 6 (2/14):;""Generating Machine Specific Optimizing Compilers,"" by Roger Hoover;and Kenneth Zadeck. (Dean and Grant);Week 7 (2/21):;""The Paradigm Compiler for Distributed-Memory Multicomputers,"" by;Privthviraj Banerjee, et al. (Lewis);Week 8 (2/28):;""Minimum Cost Interprocedural Register Allocation,"" by Steven;Kurlander and Charles Fischer. (Secosky);Week 9 (3/6):;""Data Specialization,"" by Todd Knoblock and Erik Ruf. (Grove);Week 10 (3/13):;""Lazy Strength Reduction,"" by Jens Knoop, Oliver Ruthing, and;Bernhard Steffen. (Mock and Tullsen);To subscribe to the CSE 590k mailing list, send email to;""majordomo@cs""; the mail's contents should include the line ""subscribe;cse590k"". Leave the ""Subject:"" line blank. You should shortly;receive a message back saying ""welcome."";melody@cs.washington.edu;"
"CSE 590 O; CSE 590 O - Parallel Programming Environments;Larry Snyder;Autumn Quarter 1996;Mondays, 3:30-4:20 pm, Loew 220;;Welcome to the CSE 590 O Home Page!;This quarter we will be reading selected papers from recent IPPS, PPoPP, ICS, Supercomputing, ICPP, and LCPC. Below is;a tenative schedule for the quarter. The atmosphere is casual and;will hopefully ignite some lively discussion.;Everyone attending the seminar will be expected to present one of the;papers. There are still spots open, so hurry and sign up!;Please send mail to majordomo@cs with;""subscribe cse590o"" in the body of the message to subscribe;to the class mailing list.;date;paper;presentor;09/30; Compiling MATLAB Programs to SCALAPACK: Exploiting Task; and Data Parallelism;Ramaswamy, Hodges IV, Banerjee (IPPS '96); FALCON: A MATLAB Interactive Restructuring Compiler;DeRose, Gallivan, Gallopoulos, Marsolf, and Padua; (LCPC '95);E;10/07; Compiling Portable Message-Driven Programs;Ramkumar, Forbes, Kale (ICPP '95);Sung;10/14; Cross-loop reuse Analysis and its Application to; Cache Optimizations;Cooper, Kennedy, McIntosh (LCPC '96);Ruth;10/21;Global; Communication Analysis and Optimization;Chakarabarti, Gupta, Choi (PLDI '96);Sean;10/28; An Integerated Compilation and Performance Analysis Environment; for Data Parallel Programs;Adve, et al. (SC '95);AJ;11/04; Input/Output Characteristics of Scalable Parallel Applications;Crandall, Aydt, Chien, Reed (SC '95);Jason;11/11;holiday;11/18; pC++/streams: A Library for I/O on Complex Distributed; Data Structures;Gotwalls, Srinivas, Gannon (PPoPP '95);Brad;11/25; A Model and Compilation Strategy for Out-of-Core Data Parallel; Programs;Bordawekar, Choudahary, Kennedy, Koelbel, Paleczny (PPoPP '95);12/02;Local Iteration Set Computation for Block-Cyclic Distributions;Midkiff (ICPP '95);12/09; On the Utility of Threads for Data Parallel Programming;Fahringer, Haines, Mehrotra (ICS '96);Eric;12/16; Cilk: An Efficient Multithreaded Runtime System;Blumofe, Joerg, Kuszmaul, Leiserson, Randall,; Zhou (PPoPP '95);; Sung-Eun Choi; Last modified: Tuesday 30 September 1996;"
"CSE 590S (Systems Seminar);Preliminaries;If you're not already on the uw-systems mailing list,;you need to be, because that's where various crucial bits of;information (e.g., ``this week's seminar is cancelled'') will be;sent. To get yourself on this list, send mail to;uw-systems-request with the line subscribe uw-systems;in the message body.;Quarterly Webs; Spring 95; Summer 95; Autumn 95; Winter 96; Autumn 96;"
"CSE 590S (Summer 95);This Quarter;We meet on Fridays at 3:30 in Loew 113. This quarter we;will read final papers that will appear in the upcoming;ACM Symposium on Operating Systems Principles (SOSP). Please read;the papers before the meeting so that we can have;an interactive discussion.;This Quarter's Schedule;Oct. 6: Implementing;Global Memory Management in a Workstation;Cluster. (Presenter: Feeley);Oct. 13: Logged Virtual Memory. (Presenters: Savage, Lim);Oct. 20: The HP;AutoRAID Hierarchical Storage System. (Presenter: Wilkes);Oct. 27:;Serverless Network File Systems. (Presenters: Franklin, Montgomery, Tiwary);Nov. 3: Hypervisor Based Fault Tolerance. (Presenters: Chan,;Philipose,Wolman);Nov. 10: Exploiting Weak Connectivity for Mobile File Access. (Presenters: Voelker, Litvinov);Nov. 17: Performance of Cache Coherence in Stackable Filing. (Presenters: Sriram, Fiuczynski);Dec. 1: The;Impact of Architectural Trends on Operating System Performance. (Presenters: Anderson, Romer); Return to top of page;"
"CSE 590 ZP: High Performance Scientific Computing in ZPL;;;CSE 590 ZP;High Performance Scientific Computing in ZPL;Larry Snyder and the ZPL Team;Autumn Quarter 1996;Wednesday, 2:30-3:30 PM;Sieg 422 (Oct. 2, 1996), Loew 111 (all other days);Welcome to the CSE 590 ZP Home Page!;Please send mail to majordomo@cs with;""subscribe cse590zpl"" in the body of the message to subscribe;to the class mailing list.;Students may also be interested in joining the zpl-users;mailing list. This mailing list is used to distribute information;about compiler and libraray releases and other ZPL related;information. To be added to the mailing list, send mail to majordomo@cs with;""subscribe zpl-users"" in the body of the message.;Description;ZPL is a new scientific;programming language suitable for computations previously written in;Fortran, C, etc. ZPL is an array language that dramatically;simplifies programming by eliminating nuisance looping and indexing.;ZPL runs fast on modern machines, including parallel supercomputers,;allowing programmers to develop code on their workstations and;trivially migrate them to the largest parallel machines simply by;recompiling. ZPL was developed at UW, and is just being released to;the scientific computing community.;CSE590-ZP is a class designed for scientists and engineers who are;NOT computer scientists, but who want to learn how to use modern;languages and supercomputers effectively for scientific;computation. The class will cover the following topics:; The state-of-the-art in high performance computing.; ZPL syntax and semantics.; Algorithms exploiting high performance parallel machines.; WYSIWYG Performance -- writing fast programs easily.; Developing ZPL programs from workstation to supercomputer.; How well does your program perform? i.e. doing more ""science""; with a faster program.; Prototyping scientific computations in MATLAB and ZPL.;Text Book;None. The class will rely on materials on the web. Documents can be found on;in the ZPL web pages.;Specifically, we will follow closely the ZPL;Programming Guide (new version as of 10/03/96).;Prerequisites;Familiarity with some scientific computation e.g. Fortran, C or;MATLAB programming, on a UNIX platform will be assumed.;The class is variable (1-3) credit, CR/NC or audit. Students will;write, debug and run a ZPL program selected from their technical;discipline. Suitable computations range from whole applications to;kernels (inner loops) of a scientific computation.;Other Useful Information;Course Syllabus, including lecture notes.;How to apply for an NCSA block grant account (for UW faculty, staff and students only);How to compile ZPL programs using the remote;ZPL compiler;Other Important Links;; Sung-Eun Choi; Last modified: Wednesday 9 October 1996;"
"CSE 370 Home Page (Autumn 96);CSE 370: Introduction to Digital Design;Autumn Quarter 1996;Gaetano Borriello and Corey Anderson;Welcome to the CSE 370 Home Page!;This is the home page for the CSE 370 web which contains a whole bunch of;useful information about the class. Keep in mind that this document is not;static, and that new information (especially class announcements and;messages) will be added frequently. If you have any problems with this;document or the CSE 370 web, in general, send mail to;cse370-webmaster@cs.;Class Announcements:;Notices from your instructor, TA, and/or system administrators.;(Last update:; 12/10/96 at 12AM.);Class E-mail Archive: Messages;sent to cse370@cs.washington.edu.;(Last update:; 12/10/96 at 12AM.);Send e-mail to: the class,;your instructor,;your TA,;both the instructor and TA,;or everyone.;Course administration:;Goals and syllabus;Meeting Times;;Lectures: MWF 8:30-9:20am, EEB 108; Final Exam: Monday, December 16, 8:30-10:20am, EEB108;;Workload and grading expectations;PC laboratory and software tools;Policies on collaboration and cheating;Announcements and e-mail addresses;Overall schedule of lecture topics;Instructor: Gaetano Borriello (gaetano@cs); Office hours: WTh 12:30-1:20 in Sieg 212;TA: Corey Anderson (corin@cs); Office hours: M 2:30-3:20, TTh 8:30-9:20 in Sieg 326a;Weekly assignments.;Bi-weekly quizzes and final exam.;Lectures:;Online versions of the slides used in lectures.;Textbook: Contemporary Logic Design, R. H. Katz, Benjamin-Cummings/Addison-Wesley 1994.;;Web maintained by the author, R. H. Katz.; Web maintained by the publisher, Benjamin-Cummings/Addison-Wesley.;;Notes on topics of interest:;;Evolution of implementation; technologies;Computer-aided design (CAD); tools for logic design;Synario; Feedback:;Tell us what you think about how things are going (even anonymously, if you so desire).;Questions for course evaluation:;To be completed on last day of class.;Links to previous quarters of CSE 370.;Portions of the CSE 370 Web may be reprinted or adapted for academic;nonprofit purposes, providing the source is accurately quoted and;duly credited. The CSE 370 Web: Copyright 1996, Department of Computer;Science and Engineering, University of Washington.; Comments to: cse370-webmaster@cs.washington.edu (Last Update:;; 12/10/96;);"
301 Moved Permanently;Moved Permanently;The document has moved here.;
301 Moved Permanently;Moved Permanently;The document has moved here.;
"CSE 573 Index Page;CSE 573 - Artificial Intelligence;Fall Quarter, 1996;Artificial intelligence (AI) poses two of the most fundamental and;challenging questions in computer science: can we build intelligent;machines? How? This course addresses these questions by providing an;in-depth introduction to selected topics in AI including agent;architectures, knowledge representation, search, planning, machine;learning, reasoning about uncertainty, and AI methodology.;Staff:;Dan Weldweld@cs;Sieg 408543-9196Hours, TBA;Marc Friedmanfriedman@cs;Sieg 429543-5129Hours, TBA;Nick Kushmericknick@cs;Sieg 428685-2723Hours, TBA;Outline of Topics;Project;Reading Assignments;Assignments & Exams;Grading;Resources;The Class Mailing;List; see also the archive of past messages;"
"Andrew Berman's Home Page;Andrew P. Berman;aberman@cs.washington.edu;Computer Science & Engineering Department,;University of Washington, FR-35,;Seattle, WA 98195 USA;Papers; Berman, Andrew; Bourassa, Virgil; Selberg, Erik. TRON: Process-Specific;File Protection for the UNIX Operating System in both;postscript and;HTML.;Proceedings of the 1995 Winter USENIX Conference.; Berman, Andrew. A New Data Structure for Fast Approximate Matching in; postscript format.; Berman, Andrew; Shapiro, Linda: Efficient Image Retrieval with Multiple Distance Measures.; Available in Postscript format. To appear in SPIE 97.; Special Links;My wife, Debbie.;Debbie and I have a beautiful daughter, Melanie.; Miscellaneous;Don't eat the Poison Donuts!;How Stupid Is Stupid;my bookmarks;"
"Adam Finkelstein;-; Adam Finkelstein; adam@cs.washington.edu;Department of Computer Science;University of Washington;Seattle, Washington USA;Before I started drinking 8 cups of coffee a day, my hair was limp and;lacked body.;After six years of living the good life as a graduate student, I;finally finished my doctorate in;; computer graphics.;For the fall quarter I will do a post doc here at the UW.;Early in 1997 I will join the;Computer Science Department at;Princeton University.;From 1987 to 1990, I was a software engineer at;; TIBCO; (formerly Teknekron Software Systems);in Palo Alto; I wrote software for people who trade stock.;Before that, I was an undergraduate student at;; Swarthmore College;(class of 87) where I studied physics, occasionally.;;A; recent research project has to do with finding specific images in a;large database of images.;Since then, we've been working on something called;;""multiresolution video"".;Here are a few photos.;;I play ultimate frisbee on a team called;Umatata.;;To get my address or phone number, look at my;"".plan"" file.;I ran across this photocopy of a fax of a photocopy of a fax of ... of the;hilarious menu from Seattle's least-visited coffee house,;Caffe Lardo.;;A recent chilly night visit to Snoqualmie Pass made for an excellent view of;Comet Hyakutake.;Here;are some great pictures taken by my friend Marcus.;Here are some cool images that I made for fun:;glass sculpture;dithering mona;JFK-MM;Web Gothic;"
"James Ahrens's Home Page; James Ahrens's Home Page;; Address: Computer Science & Engineering Department; University of Washington -- Box 352350; Seattle, WA 98195; Email: ahrens@cs.washington.edu; Phone: (206) 543-3368; Research Interests; Visualization, Parallel and Distributed Computing, Scientific Database Management; Projects;; University of Washington --- Database Environment for Vision Research; Los Alamos National Laboratory --- ACL Visualization Project; Publications;James P. Ahrens and Charles D. Hansen, Cost-Effective Data-Parallel Load Balancing , International Conference on Parallel Processing, August 1995.;Load balancing algorithms typically improve a program's performance on;unbalanced datasets, but degrade its performance on balanced datasets,;because unnecessary load redistributions occur. This paper presents a; cost-effective data-parallel load balancing algorithm which;performs load redistributions only when the possible savings outweigh;the redistribution costs. Experiments with a data-parallel polygon;renderer show a performance improvement of up to a factor of 34 on;unbalanced datasets and a performance loss of only 27 percent on;balanced datasets when using this algorithm.;Linda G. Shapiro, Steven L. Tanimoto, James F. Brinkley, James P. Ahrens,; Rex M. Jakobovits and Lara M. Lewis, A Visual Database System for Data and Experiment Management in Model-Based Computer Vision, Proceedings of the Second CAD-Based Vision Workshop, February 1994.;This paper presents the design of a visual database system for data and experiment management. Our system was designed as a general scientific database system, but motivated by and intended for use in model-based computer vision. We provide a unified data model, a highly graphical user interface, an advanced query facility and an interactive laboratory notebook. The system aids in scientific experimentation and promote data sharing in the computer vision community.;Frank A. Ortega, Charles D. Hansen and James P. Ahrens, Fast Data Parallel Polygon Rendering , Supercomputing, November 1993.;This paper describes a data parallel method for polygon rendering on a massively parallel machine. This method, based on a simple shading model, is targeted for applications which require very fast rendering for extremely large sets of polygons. Such sets are found in many scientific visualization applications. The renderer can handle arbitrarily complex polygons which need not be meshed. Issues involving load balancing are addressed and a data parallel load balancing algorithm is presented. This rendering toolkit enables a scientist to display 3D shaded polygons directly from a parallel machine avoiding the transmission of huge amounts of data to a post-processing rendering system.;James P. Ahrens and Charles D. Hansen,;Cost-Effective Data-Parallel Load Balancing, University of;Washington, Department of Computer Science and Engineering, TR;#95-04-02, April 1995.;A longer version of the ICPP paper which also describes a fast data-parallel;load redistribution algorithm.;;Last modified: 2/22/96;"
"Database Environment for Vision Research; Database Environment for Vision Research; Overview;The Database Environment for Vision Research was;designed as a general scientific database system, but motivated by and;intended for use in model-based computer vision. We provide a unified;data model, a highly graphical user interface, an advanced query;facility and an interactive laboratory notebook. The Database;Environment for Vision Research aids in scientific experimentation and;promotes data sharing in the computer vision community.;In DEVR, entities are stored in hierarchical, relational data;structures. The schema for each entity contains a name, a set of;properties, a set of parts, a set of attributed relations among the;parts and a set of graphic definitions which describe how to build;instance-specific visualizations.; We are studying many different image database research topics including:; Visual Interfaces; Multi-Level Queries; Experiment Management; People; Principal Investigators; Linda Shapiro; Steven Tanimoto; Jim Brinkley; Graduate Students; James Ahrens; Rex Jakobovits; Lara Lewis; Publications; Linda G. Shapiro, Steven L. Tanimoto, James F. Brinkley, James P. Ahrens,; Rex M. Jakobovits and Lara M. Lewis,;A Visual Database System for Data and Experiment Management in;Model-Based Computer Vision, Proceedings of the Second;CAD-Based Vision Workshop, February 1994. Presents an overview of the DEVR project.; Lara Lewis, Linda Shapiro,;Steven Tanimoto, Flexible;Data Organization with Visualization Support for a Visual Database;System , IS&T / SPIE Symposium on Electronic Imaging: Science;and Technology , February 1995.; Rex Jakobovits, Linda Shapiro, Steven Tanimoto, Implementing Multi-level Queries in a Database Environment for Vision Research , IS&T / SPIE Symposium on Electronic Imaging: Science and Technology , February 1995.;;email: ahrens@cs.washington.edu;Last modified: 2/29/96;"
"AJ's Page; A.J. Bernheim; ajb@cs.washington.edu;I've just started computer science graduate school at the;University of Washington;, so this page is still under construction.;I just graduated from;Williams College with a BA in; computer science;and math .;;When I'm not in front of a computer I'm playing;ultimate frisbee.;Autumn Quarter Classes; 505 Programming;Languages; 531 Automata; 567 Principles of;Digital Systems Design; 590B; Computer Graphics Seminar; 590O; Parallel Programming Environments;Outdoor Related Links; The National Parks; the WOC Home Page; GORP a guide;to outdoor recreation;Fun Links; Christian's and Scott's; Interactive Top Ten List; Dr. Fun; a;big ole pile of Cool Links; A blast from the past with; Scooby-Doo;Educational Links; A great reference for Women Undergrads in Computer Science; Peterson's Education Center ,; a source of information about graduate schools and other educational; opportunities!; Information about the CRA Distributed Mentorship Project.;The CRA Mentorship Project allows women undergraduates to spend a summer;working on research with a female mentor. I had a great experience and highly;recommend this program!;Back to the UW CS Home Page;Last modified 9/27/96;"
"Richard Anderson's Home Page; Richard Anderson, Associate Professor, graduated with a B.A. in;Mathematics from Reed College in 1981,;and a Ph.D. in Computer Science from Stanford;in 1985. He joined the University of Washington in 1986, after a;one-year Postdoc at the Mathematical Science;Research Institute in;Berkeley, CA. In 1987 he received an NSF Presidential Young;Investigator award. He spent the 1993-1994 academic year;as a visiting professor at the;Indian Institute of Science, in Bangalore, India.;Richard Anderson's main research interests are in the theory and implementation;of algorithms, including parallel algorithms, computational geometry, and;scientific applications.;Work:; Computer Science & Engineering Department,; University of Washington, Box 352350,; Seattle, WA 98195, USA;+1 (206) 543-1695;FAX (206) 543-2969; Teaching; Some papers and work in progress; Research Projects; Qualifying Evaluation Projects; Travel: notes from my year visiting the;Indian Institute of Science.; Resume; Travelling Tourist Project; Pictures; Recent Talks;anderson@cs.washington.edu;"
"AnHai Doan's HomePage;AnHai Doan; This page is being reconstructed. Please revisit soon.;Hi, I was born and brought up in Vietnam. After finishing high school in 1987, I;went to Hungary to study Computer Science. I graduated from Kossuth Lajos University of Arts and;Sciences, Debrecen, Hungary, with a B.S. in 1993, and received a;M.S. -- also in Computer Science -- from the University of Wisconsin-Milwaukee in;1995. Starting Fall 1996, I am in the Ph.D. program at the Department of Computer Science and;Engineering, University of;Washington-Seattle.;My research interests are mostly in Artificial Intelligence. I am;currently investigating decision making under;uncertainty, decision-theoretic planning, Markov decision processes,;and qualitative decision theory. Non-academic interests include reading, traveling,;and listening to music (mostly jazz and blues).;An interesting thing about my first name, AnHai (meaning ""calm sea"" in;Vietnamese): It is made by combining the last syllable of the name of;my mother's birthplace, NgheAn, and the first syllable of the name of;my father's birthplace, HaiPhong. This shows how creative my folks;were. Or so I thought up to the birth of my younger brother, when they;simply switched the two syllables and gave him the name;HaiAn. Hmm...;Contents; Research Interests; Probabilistic Planning; Knowledge Representation; Recent Papers; Research Library; Curriculum Vitae; Research Interests; Education; Employment History; Awards and Honors; Publications; Teaching; CSE 373 Data Structures and; Algorithms If you are taking this course, you should check out;TA Information (TA's office hours, locations, etc).; Personal Interests; Comtemporary Vietnamese Affairs; Literature; Writing; Music; Paintings; Foreign Languages; Traveling; General Purpose Library; Life Snapshots;anhai@cs.washington.edu"
"Not a girl named Brian; A man named Brian;BOINGee BOINGee BOINGee...;Brian Michalowski;Department of Computer Science and Engineering;Mail Stop 352350;University of Washington;Seattle, WA 98195-2350;Office location: 428 Sieg;Office phone: (206) 685-2723;Currently taking: LING 461; CSE 531; CSE 567;Currently co-editing: Mossy Bits;Thank you for visiting this page. You are visitor number; This page is worst viewed using Headscape;Whenever; I'm a second-year CS grad;student at UW who's actually a liberal artist interested in;linguistics. Confused? Good. You're getting to know me already.;My ultrahotlist - my favorite few Web sites of;all time.; Search the web or look up some online references if you're looking for;something my glorified hotlist doesn't;have. Or use URouLette;to go to a random URL in the Web.;Find out about me - past institutions (few of;which were mental), rï¿½sumï¿½, personal info, quote file, favorite songs;and poems, fictitious thrash band, purity test, and original works.; How to;keep in touch - finger info, mail info,;guestbook, and PGP info;Pages;from a few friends; The idea for including ASL;fingerspelling snapshots was blatantly stolen from Brad Chamberlain.;Brian Michalowski / Dept. of CSE (Complete Sanity;Eradication?) / bam@cs.washington.edu;"
"Paul Beame;Paul Beame;Paul Beame is an Associate Professor in the;Department of Computer Science & Engineering;at the;University of Washington.;Paul received his B.Sc. in Mathematics in 1981, an M.Sc. in Computer Science;in 1982, and Ph.D. in Computer Science in 1987,;all from the University of Toronto.;He was a Post-doctoral Research Associate at M.I.T. for the 1986-87 academic;year and joined the University of Washington in Autumn 1987.;In 1988 he received an NSF Presidential;Young Investigator Award.;Paul's research is concerned primarily with computational;complexity and the theoretical aspects of parallel;and distributed computing.;His recent research has concentrated on connections between computational;complexity and proof theory, in particular, on the complexity of proofs in;propositional proof systems.;Paul enjoys squash and softball and other sports where enthusiasm can;compensate for a lack of talent.; Some Recent Papers; Quals Projects;beame@cs.washington.edu;"
"David Becker;David Becker;Contact info |;X marks my spot.; Stuff I do; SPIN; Much of my time goes to making;SPIN;a real, in-use, operating system.;I have responsibility for the low level code we borrow from OSF,;the device model, device drvier support, the build environment, code management,;and keeping our development platforms functioning. Someday I will get;to do performance measurement and optimization.; Sport; I've tried a bunch.;Ultimate frisbee is my favorite.; All-conference triple jump (Minnesota Athletic Conference, Bethel College '88); Ultimate Frisbee (UNC IM Champions '93); Volleyball (UNC IM Mens Grad/Fac Champions '93); Team sports I play:;ultimate;softball;volleyball;basketball;broomball;football;soccer;team-handball; and I also play;racquetball;golf;tennis; done this too:;bridge;camping;canoeing;disc-golf;foosball;hiking;paintball;ski;snorkeling;snowboard;track;wallyball;water-skiing;weightlifting;whitewater rafting;horseback riding;mountain biking;in-line skating; Interests ( the library); Economic topics particularly interest me:;Free banking,;Anti-trust,;Currency; SSTO RLVs. DC-X; Theology; 19th centuray railroads. How to boot a locomotive; .;;"
"Brian Bershad; Brian N. Bershad; bershad@cs.washington.edu;Work:; Computer Science & Engineering Department,; University of Washington, FR-35,; Seattle, WA 98195, USA;+1 (206) 543-6707;FAX (206) 543-2969;Home:;4240 124th Street NE.; Seattle, WA 98125, USA; Brian Bershad , Assistant Professor, has been at the University of;Washington since 1986. After receiving his PhD from the University of;Washington in 1990, he took a brief respite from Seattle between 1990;and 1993 to experiment with post-industrial culture in the Northeast.;In 1993, he returned to the Northwest for the coffee.;Bershad does research in operating systems, distributed systems,;networking, parallel systems, and architecture. A lot of his work has;appeared in TOCS, SOSP, ASPLOS and ISCA, although he can't seem to get a;SIGMETRICS paper published to save his life.;Besides working, Bershad runs, plays squash, and hangs out on the;stairmaster.; Projects include; SPIN -- Extensible;Operating Systems; Mobile Computing .; Memory management for operating systems and architectures.; The Midway Project. (at;Carnegie Mellon); Parallel;Networking for Scalable I/O; Rocky2 The;sequel.; Etch -- x86 binary instrumentation and optimization;Courses (Winter 96); CS&E 451.; Looking for a masters or quals project?;Click here for a list of projects you;might do for a masters degree, a quals project, or just for fun.; Some recent papers;;A Trace-driven Comparison of Algorithms for;Parallel Prefetching and Caching;Tracy Kimbrel, Andrew Tomkins, R. Hugo Patterson, Brian Bershad, Pei Cao,;Edward W. Felten, Garth A. Gibson, Anna R. Karlin, and Kai Li.;1996 ACM SIGOPS/USENIX Association Symposium on;Operating System Design and Implemenation.;October 96.; Dynamic Binding for Extensible;Systems Przemyslaw Pardyak and Brian N. Bershad. OSDI II.;1996 ACM SIGOPS/USENIX Association Symposium on;Operating System Design and Implemenation.;October 96.;;The Structure and Performance of Interpreters;Theodore H. Romer, Dennis Lee, Geoffrey M. Voelker, Alec Wolman,;Wayne A. Wong, Jean-Loup Baer, Brian N. Bershad and Henry M. Levy.;ASPLOS VII. October 96.;;Fast, Effective Dynamic;Compilation, Conference on Programming Language Design and Implementation;J. Auslander, M. Philipose, C. Chambers, S.J. Eggers and B.N. Bershad. May 1996.;;An Extensible Protocol Architecture for Application-Specific Networking;Marc E. Fiuczynski and Brian N. Bershad;;Writing an Operating System Using Modula-3;Emin Gun Sirer, Stefan Savage, Przemyslaw Pardyak, Greg DeFouw,;Mary Ann Alapat,;Brian Bershad,;Appeared in the Workshop on Compiler Support for System Software,;February 1996.;; Language Support for Extensible Operating Systems ,;Wilson Hsieh, Marc Fiuczynski, Charles Garrett, Stefan Savage,;David Becker, Brian Bershad,;Appeared in the Workshop on Compiler Support for System Software,;February 1996.;Safe Dynamic Linking in an Extensible Operating System; Emin Gun Sirer, Marc Fiuczynski, Przemyslaw Pardyak, Brian Bershad, Appeared in the; Workshop on Compiler Support for System Software, February 1996.;Automatic Dynamic Compilation Support for Event Dispatching in Extensible Systems;C. Chambers, S.J. Eggers, J. Auslander, M. Philipose, M. Mock and P. Pardyak.;Workshop on Compiler Support for Systems Software, February 1996.; Extensibility,;Safety and Performance in the SPIN Operating System Bershad et.al. SOSP96.;;Reducing TLB and Memory Overhead Using Online;Superpage Promotion. Romer, Ohlrich, Karlin and Bershad. ISCA 95.; Write Detection for a Distributed Shared;Memory. Zekauskas, Sawdon and Bershad. This paper appeared;in the 1994 OSDI Conference.; Dynamic Page Mapping Policies for Cache Conflict;Resolution on Standard Hardware.Romer, Lee, Bershad and Chen.;This paper appeared in the 1994 OSDI Conference.; Mobisaic. Voelker, Bershad. This paper appeared in;the 1994 Mobile Computing Workshop.;;Issues in extensible operating systems. Savage, Bershad.; Avoiding Conflict Misses Dynamically in Large Direct-Mapped;Caches. Bershad, Chen, Lee and Romer ASPLOS VI.;;SPIN -- An Extensible Microkernel for;Application-specific Operating System Services. Bershad, et. al. UW;Technical Report.;;Efficient Packet Demultiplexing for Multiple Endpoints and Large Messages.;Yuhara, Bershad, Maeda and Moss. Winter USENIX 94.;;The Impact of Operating System Structure on Memory System Performance.; Chen and Bershad. SOSP 93.;;Protocol Service Decomposition for High Performance Networking.; Maeda and Bershad. SOSP 93.;;Practical Considerations for Non-Blocking Concurrent Objects.;Bershad. DCS 93.;;Fast Interrupt Priority Management in Operating System Kernels.;USENIX Microkernels Workshop. 1993.;;The Midway Distributed Shared Memory System;Bershad, Zekauskas and Sawdon. IEEE Compcon 93.; Local Area Mobile Computing on Stock Hardware and;Mostly Stock Software;Watson and Bershad. USENIX MOBLIC 93.;;Consistency Management for Virtually Indexed Caches.; Wheeler and Bershad. ASPLOS 92.;;Fast Mutual Exclusion for Uniprocessors.;Bershad, Redell and Ellis. ASPLOS 92.;; Using the Mach Communication Primitives in X11;Ginsburg, Baron and Bershad. MACHNIX 92.;;Using Microbenchmarks to Evaluate System Performance;Draves, Bershad and Forin. WWOS IV. 1992.;;Networking Performance for Microkernels.;Maeda and Bershad. WWOS IV. 1992.;;The Increasing Irrelevance of IPC Performance for Micro-kernel Based Operating Systems. .;Bershad. USENIX Microkernels Workshop. 1991.;;An I/O System for Mach.;Forin, Golub and Bershad. MACHNIX 91.;;Using Continuations to Implement Thread Management and Communication in;Operating Systems.;Draves, Bershad, Rashid and Dean. SOSP 91.; Other information; ARPA-related information; Rain-City Hash House Harriers Related Information; A;relative was once abducted by an alien.;"
"Bob Doorenbos' Home Page;Bob Doorenbos' Home Page;Department of Computer Science and Engineering;University of Washington;Box 352350;Seattle,; WA 98195;Office: 423 Sieg Hall; (206) 543-3368; bobd@cs.washington.edu;;FAX (206) 543-2969;Currently working at:;Netbot Inc.;4530 Union Bay Place NE, Suite 208;Seattle,; WA 98105;Voice (206) 522-7800 ext. 109; FAX (206) 522-7800 ext. 114; Daily web pages:; Comedy:; Dilbert Strips,; Mr. Boffo,; David Letterman's Top Ten List; Geeky news:; News.com,; ZDNet Anchordesk,; ZD Magazines; Other good stuff:; Shortcut to today's; Cool Tool; Research:; Current: Postdoc working with; Oren Etzioni,; Steve; Hanks, and; Dan Weld on the; Softbot project (see also AI at U-W); In particular:; ShopBot,; an internet shopping agent.; Previous: The Soar; project; My; Thesis (1.7 meg); AI, CS, and science web sites:; AI Collections:; U-W AI Pointers,; CMU AI Repository,; Canada NRC KSL AI Pointers,; ML&amp CBR Home Pages; Organizations:; ACM,; SIGART,; AAAI,; Computing Research Association; Journals and Conferences:; JAIR,; Computational Intelligence,; Machine Learning,; IJCAI; SPEC data:; SPEC Organization,; current spectable; Java links:; Sun,; Gamelan,; The; Java Developer,; JavaNotes,; UW; jump page,; UW; CSE 590S,; Local copy of Sun's java tutorial; Perl links:; Adam Rifkin's; Perl links,; Perl5; manual,; www.perl.com; Miscellaneous:; On-line CS tech reports,; CS Dept. Front Doors & Gophers; Science:; Scientific American,; Sigma Xi/American Scientist; Miscellaneous other links:; Web Meta-Searching:; MetaCrawler,; SavvySearch; Web Searching:; Alta Vista,; Lycos,; Inktomi,; Open Text,; InfoSeek,; Excite,; Web Crawler,; HotBot; Web Directories (hierarchical or more selective):; Yahoo,; Magellan,; a2z,; PointCom,; Top of the Web; Lists of Search Engines:; Guide to Searching the Net; Other Online Searches:; FTP search; Telephone Directories:; World Yellow Pages Network,; Big Yellow,; 555-1212.com,; Switchboard White Pages,; List of Other Directories; News:; CNN,; CNNfn,; NewsHour,; Washington Post,; USA Today,; Reuters Headlines (from Yahoo),; News Page (from The Social Cafe),; US News and World Report,; Boston Globe,; C-SPAN,; Seattle Times; Views:; Slate,; Feed,; Salon,; Atlantic Monthly,; Harper's; Sports:; ESPN Sports Zone; U.S. Government:; FedWorld Index,; White House,; Congress,; IRS,; NSF,; ARPA; The Federal Budget Deficit:; U.S. National Debt Clock,; The Concord Coalition,; Try Your Hand at Balancing the Budget,; Bipartisan Commission on Entitlement and Tax Reform,; The Budget; American Universities; Web Museums; Links from my past life in;Pittsburgh at;CMU:; Upcoming;birthdays; CMU-SCS;home page,;personal home pages, and;fun page;bobd@cs.washington.edu;"
"Alan Borning's home page;Alan Borning's home page;I am a professor in the;Department of Computer Science and Engineering at the University of Washington. My principal;research interests are constraint-based languages and systems,;object-oriented languages, logic programming languages, human-computer;interaction, and computers and society.;Current research activities;UW;Constraints Page: contains links to recent papers, and to public-domain;source code for constraint satisfaction algorithms.;UW Media,;Technology, and Democracy Group;UW students: also see;ideas for quals;projects.;Teaching;Here are web pages for courses I've taught recently:;; CSE 341: Programming Languages (Autumn 1995);; CSE 505: Concepts of Programming Languages (Autumn 1994);; CSE 500: Computers and Society (Winter 1996);; CSE 590H: Human-Computer Interaction (Spring 1995);Other Information;History ... I grew up in Idaho, and graduated from Reed College in 1971;with a B.A. in mathematics. I did graduate work in computer science at;Stanford University, receiving an M.S. degree in 1974 and a Ph.D. in 1979.;My dissertation research, which was done in association with Xerox Palo;Alto Research Center, concerned a constraint-oriented simulation;laboratory. After receiving my PhD, I spent a year as an NSF post-doctoral;fellow at the Department of Artificial Intelligence at the University of;Edinburgh in Scotland, working on mechanics problem solving and symbolic;algebra. I joined the Computer Science Department at UW in 1980, and;except for a sabbatical spent at Xerox EuroPARC in Cambridge, England, have;been here since.;Address:; Dept. of Computer Science and Engineering; University of Washington; Box 352350; Seattle, WA 98195-2350; USA;Phone: (206) 543-6678;Fax: (206) 543-2969;Email: borning@cs.washington.edu;WWW: http://www.cs.washington.edu/homes/borning;"
"Brad's Home Page;Brad Chamberlain;Photo Credit: Mike Perkowitz;Things you probably couldn't care less about.;(office, address, etc.);Things I work on;Things I like;Things I have added to the web (a subset of;the above); brad@cs.washington.edu;"
"Brendan's Home Page;Brendan Mumey;I am a Ph.D. student in the;Department of Computer Science;at the;University of Washington.;I entered in the fall of 1992 and expect to graduate around the fall of 1996.;Contact Information;E-mail: brendan@cs.washington.edu;For my address, etc. click here.;Curriculum Vitae;In;html;or;postscript;format.;Academic interests;I would call myself an applied;theoretical computer scientist.;My current work is in;computational biology.;At the moment I am looking at the problem of;physical mapping; building a rough map of the location of landmarks in;a genome. Generally speaking I am interested in using CS theory and math to;solve reasonably practical problems. I have also done some work in;computational astrophysics with the;HPCC/ESS group;here at UW.;Online papers;B. Mumey. A powerful clone overlap test.;html,;postscript;(Poster presentation at ISMB'96 conference.);B. Mumey. Some computational aspects of physical mapping with probes.;html,;postscript;(Survey paper written to fulfill my PhD candidacy requirement.);B. Mumey. Finding clusters quickly in parallel.;html,;postscript.;(Presented at the 1994 DIMACS challenge.);M. Klawe and B. Mumey. Upper and lower bounds on constructing;alphabetic binary trees.;html,;postscript.;(Presented at the 1993 SODA conference. Also in the Nov-95 SIAM J. of;Discrete Mathematics.);Note: The html versions were produced with latex2html and contain;some errors. They should be readable for the most part.;Recreation;Hiking,cycling,;skiing,;climbing,;and;drinking coffee;to name a few. I used to do some sailing;and hope to do some more sometime.;I like to play bridge.;Some older photos:;first gallery,;second gallery.;My bookmarks;"
"Lauren Bricker;Lauren Bricker;Computer Science & Engineering Department,;University of Washington, FR-35,;Seattle, WA 98195 USA;Click here if you need a clue.;Research Info; My research interest is primarly graphical user;interfaces, although I am a self-proclaimed graphics groupie. I'm;I'm currently working with Steve;Tanimoto on the Mathematics;Experiences Through Image Processing (METIP) project. The goal of;this project is interest junior high school kids in mathematics using;exploratory rather than rote learning methods. In particular, I'm;interested in developing Computer Supported;Collaborative Learning (CSCL) user interfaces that can be used in;this, as well as other, projects.;Workin' lawk a dawg; Ark Interface;A fairly extensive resume;School daze;This quarter;590D;Other quarters;Human-Computer Interaction course from Spring quarter 1995;And writeups for hw1, hw2, and the final project writeup;What am I doing in a;systems; course?;A very interesting course in Computers in;Society; Oh so exciting hobbies I used to enjoy in a not-so-busy life;Sports;Cooking;Pottery (I even have my own studio in the garage, not that it's been used in 5 years...);Other fun stuff;Because Ron asked for it;Addresses;; bricker@cs.washington.edu; Last modified: Monday 5 June 1995;"
"Adam Carlson;Adam Carlson;<carlson@cs.washington.edu>;Computer Science & Engineering Department;University of Washington;Box 352350;Seattle, WA 98195-2350 USA;;This page is under construction, in fact, I've done almost nothing with it.;You can take a look at classes I've taken or;TAed, research I've been involved in, and some fun stuff.;For finger information:;carlson@cs.washington.edu;To send mail:;Adam Carlson <carlson@cs.washington.edu>;"
"Andrew Certain's Home Page; Andrew Certain;certain@cs.washington.edu; 9/5/96 - Server is fixed! Give it a try.; Note: This page is only interesting if you follow the directions, download the;viewer and look at the models.;I am currently working with Tony;Derose, David Salesin, Werner Stuetzle, Tom DuChamp, and Jovan Popovic on the 3D-Scanning;project. I am currently building a viewer which you can download here (requires SGI;graphics workstation).;Our paper is here.;Once you have the viewer, you can use it to look at our models,;once you have modified Netscape in this way. (It should;also work with other browsers if you modify them in a similar way).;Computer Science & Engineering Department,;University of Washington, 352350,;Seattle, WA 98195-2350 USA;"
"Pai Chou;Pai Chou;Hi! Welcome to my homepage. I am a grad student in computer;science at the U of Washington.;We are in Seattle. The picture on the right is me on the first day of;school in the Fall quarter, 1996. Ross thinks it's scary.;School Related Info;The; Chinook project;My Fall 1996 schedule;My list of Publications;CODES 97:; Int'l Workshop on hW/SW Codesign;Personal;Personal info about me.;I am from Taiwan,;not Greece.;Resume;Food;I enjoy cooking. Some people say I should open a restaurant. Some of;people's favorite dishes include stir-fried rice noodles and my BBQ beef;skewers. My recipes are now on-line.;Toys;Being a computer geek, I have computers;and cool toys.;Taiwanese;I am also promoting the use of the Taiwanese;language. I am currently developing computer tools for Taiwanese. Be sure;to check out my new experimental on-line Taiwanese;dictionary. Though not absolutely required, these pages are best viewed;if you install Chinese character fonts.;If you are using a Java-enabled browser like Netscape, you should be;able to see my ""Java-oke"" (TM) applet, with a yellow ball;bouncing;over Barney the purple dynosaur.;Last updated Tue Oct 1 11:49:54 PDT 1996;Email: chou@cs.washington.edu;"
"Corey Anderson;Corey Anderson;Things that have interested me lately...;Setting up my home; page.;Researching color perception and automatically; correcting for induced color.;Competing in the Programmer Of The; Month contest; Searching for info about the; LocalTalk; PC Adapter.;; Setting up Linux; Playing with Wavelets; ACM International Collegiate Programming Contest; Pacific Regional Contest, Problems, and Results; 1995 Final Problems and Results (html version); Previous years' Final Problems (PS version); Duke's Internet Programming Contest;My rÃ©sumÃ© is; now online. It is recent as of August 1996.; Reviewing computer graphics text and; reference books, just for fun.;Things that I have done...;Graduate from the; Univserity of Washington and Highline Community College.; Self-tuning FPGA (Fall 1994);Helping Polly; organize and run the CSE department's; contribution to the Engineering Open House 1996.; (April 1996);Managing the UW's; ACM chapter's treasury. (Spring 1995 - Spring 1996);Under developement (read: not done)!; Macintosh programming;Searching for a good Internet Service; Provider;Cool things I've found...; Usage statistics of CS Dep't Web; Lurker's Guide to Babylon 5; Sunsite's Linux Archive;The; Dilbert Zone;My Mom's home; page;My brother's; home page;Useful links...;Peek inside our; X-term labs; HTML reference; HTML 3.0's new features or what Netscape will let you do.; Computer Science and Engineering Department home page; University of Washinton home page; UWTV; CS Lab Tech notes;My Autumn '96 schedule...;Monday;Tuesday;Wednesday;Thursday;Friday;8:30;CSE 370 (TA);CSE 370 OH;CSE 370 (TA);CSE 370 OH;CSE 370 (TA);9:00;CSE 370 (TA);CSE 370 OH;CSE 370 (TA);CSE 370 OH;CSE 370 (TA);9:30;CSE 590IT;CSE 370 Meeting;10:00;CSE 590IT;CSE 370 Meeting;10:30;Math 441;CSE 531;Math 441;CSE 531;Math 441;11:00;Math 441;CSE 531;Math 441;CSE 531;Math 441;11:30;CSE 531;CSE 531;12:00;12:30;1:00;1:30;CSE; 567;CSE 567;CSE 567;2:00;CSE 567;CSE 567;CSE 567;2:30;CSE 370 OH;3:00;CSE 370 OH;3:30;CSE 519;CSE 590B;CSE 520;4:00;CSE 519;CSE 590B;CSE 520;4:30;CSE 519;CSE 590B;CSE 520;5:00;CSE 520;5:30;corin@cs.washington.edu;"
"The Craig Web Experience;Craig S. Kaplan;Current location:;PhD student, Department of;Computer Science, University;of Washington, Seattle, Washington.;Well, here I am. The other UW. This WWW page is just a copy;of my other home;page at the University of Waterloo.;When I have some more time, I'll modify this page to be more appropriate to;my current situation.;One enjoyable experience I had near the end of being an undergraduate;was the grad ball. Here are some photos from;the ball.;That second enjoyable experience occured Saturday, May 25th, 1996. I;addressed the convocation as valedictorian. I cannot express how honoured;I felt that such a wonderful graduating class should choose to have me;represent them in this way. Incidentally, for those of you who didn't know,;my parents found out I was valedictorian about ten minutes before the start;of the ceremony. My mom says she'll never forgive me.;The text of my valedictorian address can be found here,;for anyone who's curious.;You are visitor number:;Last updated Fri Sep 27 15:54 PDT 1996;cskaplan@cs.washington.edu;"
"Cody Kwok's Home Page;Welcome!;Hi, I am Cody Chung Tin Kwok, aka;ctkwok@cs.washington.edu;I'm a UW;CSE;graduate student ,;working with;Dan Weld;and;Oren Etzioni;on;planning and;software agents.;Work; The Ingram softbot;AI;UW AI; Contact information;Leisure; [sanctuary];Nausicaa of Valley of Wind;Laputa Castle in the Sky;Hyper Future Vision Gunnm; Me;Nausicaa of the Valley of Wind;Cody Kwok Last modified May 25;"
"Darren C. Cronquist;;Darren C. Cronquist;darrenc@cs.washington.edu;Department of Computer Science & Engineering;University of Washington; Box 352350;Seattle, WA 98195-2350 USA; Welcome to my home page! Last updated: 6/21/96;Employment Information I currently plan to complete my;Ph.D. in 1997.;HTML;Postscript;Resume;Resume;Curriculum Vita;Curriculum Vita;Personal Information The rest of my homepage is currently under;construction!;"
"David Christianson;60 seconds till midnight...60 seconds till NOWHERE, BABY!;David Christianson;dbc1@cs.washington.edu;Computer Science & Engineering Department,;University of Washington,; Box 352350;Seattle, WA 98195 USA; Current Work;In my spare time I am a third year graduate student here at;the UW.;I'm interested in;AI;and planning, but I've gotten into user interfaces and maybe even graphics;as well. I'm currently studying Knowledge Representation, goal-directed;behavior, mixed-initiative planning, activity recognition, and buzzword;acquisition in the context of human-computer interaction.;Some of my recent work has been to prototype useful/intelligent interfaces for Bob;Doorenbos' ShopBot.;Rather than try to build our own interface, our plan is to somehow;integrate with the interfaces of various on-line stores by building a;""Shopping Assistant."" One simple assistant we've built is a Mac application;that automatically reads and parses shopping baskets in order to determine;what products the user is interested in.;I have also collaborated with Sean Anderson, Li-Wei He, Dan Weld,;David Salesin, and Michael Cohen to develop a simple interactive movie;that demonstrates automatic camera planning.;As an Apple Intern, I worked with Dan Russell to mix planning technology;into the Mac user experience.;I am also a co-developer/perpetrator of PDB, a graphical debugger for the;UCPOP family of planners(I'm not just a programmer...I'm also a client).;The number of people whose lives it has touched grows each and every day.;The manual is;here.;I spent my undergraduate career at the;University of Chicago,;carboloading at Harold's Chicken and assisting in the;Animate Agent Lab.;Publications;Christianson, Anderson, Wei-he, Salesin, Weld, and Cohen.;Declarative Camera Control for Automatic Cinematography.;To appear at AAAI 96.;Firby, R.J., Christianson, D., and McDougal, T.;Fast Local Mapping to Support Navigation and Object Localization.;1992 Symposium: Sensor Fusion V. Boston, MA, November 1992.;Where to Find Dave(when not at the IMA);I do most of my work in the;Chateau's;cynical office, with;Frederic,;William,;Darren,;Adam,;Dan,;and our glorious leader Juan.; Important Thing;One of my favorite activities is to practice judo.;I recently competed in the Senior Nationals.; Sibling on the WWW;My sister;just graduated from the School of Information and Library Studies at the University of Michigan.; Just Surfing...;The cutting edge in Web Research - The Information Supercollider.;Really feel like slacking? Mirsky can help.;Watch the heroes of your Gen X youth duel to the death at The WWWF Grudge Match .;Fame and fortune! Check out my Response of the Week.;Check out the Games Domain.;Or, just go straight to DoomGate .;So he says to me, ""Evil's OK in my book, how about yours?"" - The Tick .; Dave Christianson;"
"Home Page for Dave Johnson; David B. Johnson;dbj@cs.washington.edu;Computer Science & Engineering Department,;University of Washington,Box 352350;Seattle, WA 98195 USA;;Research Interests; Navigational assistance for hypertext readers;Projects and Activities;; Racquetball;; Golf;; Basketball;; Softball;; WWW Tutorials;; WWW Scripts;;To see how this all fits together, take the;Racquetball Quiz.;To see how the quiz was created, take a look at the;Create an Assessment Page form.;Give it a try.;;"
"Home Page of David Dion;;David Dion;ddion@cs.washington.edu; Personal;Yeah right, like I'd put anything personal here. Okay, maybe a; little.; Academics; Current Research:;For the past year I have been working with;Brian Bershad.;My primary responsibility is the construction of a UNIX server for the;SPIN;operating system. SPIN is an operating system on which applications;can achieve impressive performance by dynamically extending the kernel.;Safety and protection are maintained at the language level, as SPIN and;its extensions are written in;Modula-3.;The user-level SPIN UNIX server is a slight variant of a DEC OSF/1 Unix;server, which thinks it is running on Mach. SPIN dynamically linked;extensions are used to intercept OSF/1 system calls and to emulate a;Mach kernel environment.;Previous Research: SPIN is not the first extensible system I have;worked on. In my undergraduate;studies at Notre Dame I helped;implement user-level memory management for an extensible communications;subsystem.; Web Stuff;I'm afraid I don't have the time to sit around and surf the Web,;so I wouldn't claim to know about all the cool stuff out there. I;promise to do more surfing as soon as I have Netscape-enhanced;this page (don't hold your breath). Meanwhile, these are some of the;sites I visit occasionally for work and for distraction.;University of Washington; Computer Science and Engineering: the reason I'm in Seattle.;University of Washington:; UW homepage, featuring an up-to-date view of campus weather; conditions.; SPIN: what occupies the vast majority of my time.; Modula-3: the language I use for most of my programming these; days.;GDB Debugging; Manual: how I've solved countless problems.;University of Notre Dame: my; undergraduate institution.;Notre Dame; Bands: my undergraduate life.;Notre Dame Trumpet Section:; more of my undergraduate life.;CSE; Racquetball Ladder: my main outlet for athletics.;ESPN Sportzone: how I; stay in touch with the sports world.;USA Today: how I stay in; touch with the rest of the world.;Dilbert:; how I learn about the real world.;Restaurants:; fine Seattle eateries, as recommended by others in computer; science here; at UW.;Movies:; Seattle regional movie listings.;Transportation: an; on-line guide to Seattle's excellent public transportation system.;Current; Traffic Conditions: current status of Seattle's infamous; traffic.;Seattle Mariners: the; first Major League Baseball team with a web page.;L. L. Bean: the only shopping; Web page I will visit.;David Dion; Last modified: Monday 1 April 1996;"
"Derrick's Index; W. Derrick Weathersby;da' bulls;superSonics;I'm pursuing a;PhD;in Computer Science here;at the University of Washington,;Seattle. The beautiful campus of the University lies in the heart of;Seattle,;offering many diversions which graduate students often fall prey, thereby;extending the time of the average graduate student career.;Practical Experience and Interests;Significant Projects and Skills;my data sheet; shared X-server project; data parallel array language and compiler; host-to-pc, LU6.2 (token-ring) communication protocol development; data base design and administration; system administration; network administration and tools; security;Research Experience and Interests;My research centers around parallel and distributed computing. The challenges;presented by the fields are ones of performance, portability and convenience.;Performance is typically the foremost goal in running in a parallel or;distributed environment, however, portability suffers. Finally, these;environments offer extra challenges due to asynchronous, independent events.;It is a daunting task to develop systems for parallel and distributed;environments. These are the issues I address.;Group Project; My UW Research Page; SPAA '94 paper on Collective; Communications; Generals topic (Collective Comm);Dissertation Topic; tool integration software engineering project;Academic Achievements;Instructor: UW extension college, Advanced C summer 1993;Curriculum design for Advanced C++ course for new certificate program; at UW extension college;Instructor: UW extension college, Advanced C++ Fall 1993;Teaching Assistant: Started undergraduate tutoring for women and minority;students, Department of Computer Science and Engineering;Outstanding Teaching Assistant Award for College of Engineering, 1994;Personal Interests; CNN Interactive OR CNN;Financial;A Newslet would be here if you had Java;W. Derrick Weathersby;derrick@cs.washington.edu;Tue May 3 9:47:00 PDT 1994;"
"Dan's Home Page;Welcome to Dan Fasulo's Home Page; dfasulo@cs.washington.edu;Third-year graduate student,;Department of Computer Science, University of Washington.;Graduate (B.A.) of Williams;College in Computer;Science and;Applied Mathematics, Class of 1994.;NOTE: this portrait may contain slight inaccuracies.;Finding Dan; Home; 2820 Eastlake Ave. E; Seattle, WA 98102; (206) 325-3404; Work; Department of Computer Science;and Engineering; University of;Washington, FR-35; Seattle, WA;98195 USA; (206) 616-1853; OFFICE:;Chateau; 112; EMAIL:;dfasulo@cs.washington.edu;Academic Interests; Computer Graphics; Computational Biology;;Personal Interests; Science fiction and fantasy, written and otherwise. In; fact, I should probably be honest and identify the above illustration.; It's Merlin, the son of Corwin (pictured; here), who is a favorite fictional; character of mine from Roger; Zelazny's Chronicles of Amber. The image was taken from the; Amber DRPG published by Phage Press, which I would recommend to anyone; who likes the books. Also, I recommend the TV series Babylon 5.;; Creative writing, both fiction and poetry (no, there will be; absolutely no links here to any of my work!).;; Athletics. In no particular order:;; Tennis; Tae; Kwon Do; Distance running;; Role-playing.;; Random other things, depending on the day. Cats.;Random Other Things...; Go to the homepage of my friend and fellow Williams Alumnus; Sean Sandys.; Look! Up on the Web! It's a woman! It's; a dog! No, it's former CSE grad student; Wendy; Belluomini dressed up as Dogbert!;; A lot of people have asked me if Theory is a worthwhile area; of research, or whether it's too abstract to be useful.;; Here is a better explanation of the goals and future of; Theory than I've ever given them.;dfasulo@cs.washington.edu;"
"Martin Dickey (Home Page);Martin Dickey;Computer Science & Engineering;University of Washington;Welcome to my home page;;Weekly schedule;Narrative resume;Blurb;CSE/ENGR 142;Autumn 1996;Favorite Seattle coffee houses;Favorite Internet site;My sister's book;""Spirograph"" Java script by Anu Garg.;Play with it!; dickey@cs.washington.edu;Updated Tuesday, September 03, 1996;"
"Dennis Lee; Dennis Lee;My primary interest is in high performance;computer architecture;and I've been doing research;with very smart people like;Jean-Loup Baer,;Brian Bershad,;Brad Calder,;Brad Chen,;Alan Eustace,;Dirk Grunwald ,;and;Ted Romer.; Some recent papers; Energy Management Issues for Computer Systems .; My generals paper.;Instruction Cache Fetch Policies for Speculative Execution.;Lee, Baer, Calder, and Grunwald. ISCA '95, pp.357-367.;Dynamic Page Mapping Policies for Cache Conflict Resolution;on Standard Hardware.;Romer, Lee, Bershad, and Chen. OSDI, pp.255-266.;Avoiding Conflict Misses Dynamically in Large Direct-Mapped;Caches. Bershad, Lee, Romer, and Chen. ASPLOS VI, pp. 158-170.;Instruction Cache Effects of Different Code Reordering Algorithms.;My Ph.D. Qualifying Project Report, University of Washington.; How to Contact Me; Work:;Computer Science & Engineering Department;University of Washington,; Box 352350;Seattle, WA 98195, USA; Office: Sieg 222; (206) 543 7119; FAX (206) 543 2969; dlee@cs.washington.edu; Home:; 7513 25th Ave NE;; Seattle, WA 98115, USA; (206)523-9592;;; Web Index;Here's a pointer to my hotlist.;Here are two very good entry points to Web exploration:; Yahoo , the Yellow Pages for the; Internet; Lycos , a really good web search engine;For a Seattle guide, click here.; On voting;Millions of sensible people are too high-minded to concede that;politics is almost always the choice of the lesser evil. ""Tweedledum;and Tweedledee,"" they say, ""I will not vote."" Having abstained, they;are presented with a President who appoints the people who are going to;rummage around in their lives for the next four years. Consider all;the people who sat home in a stew in 1968 rather than vote for Hubert;Humphrey. They showed Humphrey. Those people who taught Hubert;Humphrey a lesson will still be enjoying the Nixon Supreme Court when;Tricia and Julie begin to find silver threads among the gold and the;black.;- Russel Baker, ""Ford without Flummery""; On commitment; Until a man is committed there is hesitancy, the chance; to draw back, always ineffectiveness. Concerning all; acts of initiative there is one elemental truth the; ignorance of which kills countless ideas and splendid plans:; That the moment a man definitely commits himself, then; Providence moves too. All sorts of things occur to; help him that would never otherwise have occurred.; A whole stream of events issues from the decision, raising; in his favor all manner of unforeseen incidents and; meetings and material assistance and magic which he could; not have dreamed would have come his way. Whatever you can; do or dream you can, begin it now.;-Goethe;dlee@cs.washington.edu;"
"Yet Another Unnecessary Home Page;Ceci n'est pas une home page.;(Well, it's not much of one, anyway.);I'm not sure how to casually mention my name on my own home page, but;I feel strongly that it should be here, so here it is (in bold, no;less): Doug Zongker.;where you can go from here: (not an exhaustive list);the usual:;research, publications, etc.;classes;how to contact me;the unusual:;Toxic Custard Workshop Files;The Mentos Gallery;visit the information supercollider;the useless:;today's date (""wasting time with cron"");my CD player database (""wasting time with CGI"");testing grounds (caveat user);<sarcasm> Boy have you got lucky browsing the web today --- a;virtual (pun intended) treasure trove of information, some of which;may be actually useful. (Really!) </sarcasm>;I'm a first-year grad student in the Computer Science & Engineering;department at the University of;Washington. I graduated in May 1996 from Michigan State University, where I;majored in computer science and;minored in math.;dubious honors;Junior Apprentice Keeper of the Brotherhood of the Crouton of Death.;Carte Pizzicato International Fan Club Member 000 0000 5760.;Bryan's Worst Executive Vice-President in Charge of the Emergency Backup Clicker.;...cruising down the information highway in;high gear...;actually, you're sitting on your butt;staring at a computer screen.;This tasteful background was stolen from the US Department of Labor homepage, where;my sister works (the Department, not the homepage).;;Doug Zongker (dougz@cs.washington.edu);[ home | research | classes | contact ];last edited at;14:53 on Thursday, 14 November 1996;(151; hits);"
"Dylan McNamee; Dylan James McNamee;;dylan@cs.washington.edu;Computer Science & Engineering Department,;University of Washington, FR-35,;Seattle, WA 98195 USA;;Here is some personal information.;What I do:;My research has concentrated on the interaction between applications;and operating systems. I implemented an operating system mechanism;that allowed applications to implement their own page replacement;policy when the kernel's policy caused them to perform poorly.;After that, I helped implement ""scheduler activations"" in the Mach;operating system. Scheduler activations are a mechanism that;help user-level threads systems interact properly with the kernel;thread scheduler.;These experiences lead me to work with the;SPIN project; folks, who are building a new operating system architecture;that generalizes the idea of application-tailorable operating systems.;My current work carries on the research started in the;Opal project. My thesis is investigating the interaction between;Object-oriented databases (OODBs) and operating system virtual memory.;This work is demonstrating that significant improvements in;performance can be achived using commodity operating systems,;but in a different way than is currently done. Additional improvements;can come from modifying the operating system slightly to better;serve OODBs.;Papers;CV;590S course web;Geoff Voelker and I built this web for the Winter 96 quarter of the 590S;systems seminar, which was dedicated to Java. I gave a lecture;introducing the Java language and environment. Here are the;slides I used.;"
"E Christopher Lewis - Home Page;E CHRISTOPHER LEWIS;graduate student; Dept. of Computer Science; and Engineering;University of Washington; Box 352350;Seattle,; WA 98195-2350; USA; 206/616-1848; 206/543-2969 fax;echris@cs.washington.edu;Hello. Glad you could make it. I am a graduate student. I work on the ZPL Programming Language Project.;I am the TA for CSE;341. My office hours are tentatively 12:30 Monday and 9:30;Wednesday in Sieg 326a.;"
"Susan Eggers;Susan Eggers; http://www.cs.washington.edu/homes/eggers/; Department of Computer;Science and Engineering; University of Washington;, Box 352350; Seattle, WA;98195-2350 USA;Voice: (206) 543-2118;Fax: (206) 543-2969;email: eggers@cs.washington.edu;Office: 308 Sieg Hall;Research Interests:;Computer architecture and back-end compilation, with an emphasis on;experimental performance analysis. Current work is on issues in;compiler optimizations (dynamic compilation, shared data optimizations;and instruction scheduling) and processor design (multithreaded;architectures).;Current Research Projects:;;Compile-time algorithms to reduce false sharing;;Dynamic compilation;;Multithreaded architectures; SPIN;Previous Research:;;Cache coherency;;Code scheduling;;Compile-time prefetching on shared memory machines;;Miscellaneous;;Tools and workload;News About ASPLOS;;Program Committee;;Call for Papers;;The ASPLOS Homepage (for more information about ASPLOS);Looking for a Research Project?;Click;here for a list of projects you might do for a quals project, a;masters degree, or the beginning of a thesis.;Last updated, 2/28/96;"
"Emin Gun Sirer; Emin GÃ¼n Sirer;egs@cs.washington.edu;Department of Computer Science & Engineering,;University of Washington, Box 352350,;Seattle, WA 98195-2350 USA;;Background;I'm currently a third year graduate student at the University of Washington.;I grew up in Istanbul, Turkey, received my B.S.E in Computer Science from; Princeton University;in 1993 and am currently working towards a Ph.D. on the;SPIN;project with;Prof. Brian Bershad.;I spent the summer of '93 at;AT&T Bell Labs;working on the;Plan 9;operating system. I helped build a prototype 3-D display during the;summer of '91 at the NEC Research Center;in Princeton, New Jersey.;Most recently, during the summer of '96, I worked at;DEC SRC on the;Vesta 2 project.;Projects;My goal is to develop safe, adaptable and extensible operating systems.;I developed the threads, scheduling, synchronization, IPC, dynamic linking and;protection domain subsystems in SPIN. I also wrote the machine specific;aspects of the SPIN kernel, such as the system call and interrupt paths, and;some miscellaneous interfaces, such as alarms and mach compatibility support.;The novel;aspects of SPIN threads and scheduling are that they provide the means of;extending a kernel with arbitrary thread implementations and scheduling;policies. Dynamically linking the extensions into the kernel allows;us to achieve high-performance. The interface, called strands, is;designed to be safe and provide fault-isolation.;The novel aspect of the;SPIN protection domain interface is that it allows;isolation and safe fine-grain sharing at the same time. Extensions with;conflicting symbols can be simultaneously active in our system. Further,;extensions can hide some of their code and data such that they can be;assured that no one can possibly access them. The clincher is that extensions;that want to share code and data can do so with no dynamic protection;enforcement overhead.;I also implemented a high-performance;web server on top of the SPIN networking;stack. The main objectives in its design are reduced http latency and;minimal load.;I wrote a MIPS instruction set simulator a couple of years ago, called;MIPSI,;that was robust enough to simulate all the SPEC benchmarks and Standard ML of;New Jersey. It has been used both as an educational tool and as a research;platform. This page describes MIPSI's features;and availability.;Papers;Safe Dynamic Linking in an Extensible Operating System;WCSSS 1996. Describes the SPIN protection and namespace management mechanism.;;Writing an Operating System Using Modula-3;WCSSS 1996. Describes our experience with using Modula-3 to implement SPIN.;; Extensibility, Safety and; Performance in the SPIN Operating System;SOSP 1995. A design, implementation and performance paper.;; Protection is a Software Issue;HotOS 1995. A position paper comparing software and; hardware protection mechanisms.;;;SPIN - An Extensible Microkernel for Application-specific; Operating System Services;SIGOPS European Workshop 1994. Operating Systems Review version.;;;SPIN - An Extensible Microkernel for Application-specific; Operating System Services;University of Washington Technical Report UW-CSE-94-03-03, March 1994.;; Measuring Limits of Fine-grained Parallelism; Senior independent work, Princeton University, June 1993.;Talks;Language Support for Extensible Operating Systems;Slides from the presentation at the first Workshop for Compiler Support for Systems Software.; WCSSS 1996, in Tucson, Arizona.;Interests;Whenever I can find time and opportunity, I do some of the following:;sailing ~~~~~~ windsurfing;diving ~~~~~~~ skiing;biking;making outdoor clothing and;hiking.;I'm a big Bob Dylan fan.;;egs@cs.washington.edu;"
"Eric Anderson's Home Page;;Eric J. Anderson;Where to find me:; UW:; Sieg Hall 427; Department of Computer Science & Engineering; University of Washington; Box 352350; Seattle, WA 98195-2350; (206) 543-5118; Home (new!):; 1812 N. 38th Street; Seattle, WA 98103; (206) 632-8067; Why this page is no longer black; In honor of the recent (June 12);decision;in ACLU v. Reno, this page is no longer black. Mind you, the;decision is merely an interim step (you could read my;take on it), so I'm probably still committing a;felony.;(And so should we all, if we care about speech and freedom and the;marketplace of ideas.); Facts About Me;I'm a third-year graduate student in computer science. That means I;mostly panic about my quals project.;I'm also trying to write some papers with;Prof. Henry Greenside;of Duke University;(and recently finished a;master's thesis;by myself) on;steady-state solutions of a particular nonlinear biharmonic PDE.;Because the stability criterion for explicit methods is so restrictive;(a fourth power of the spatial resolution), implicit timestepping;methods such as backwards Euler are necessary. The numerical analysis;issues involve Newton's method for solving the implicit nonlinear;equations, sparse matrix solution methods for solving for the Newton;step, and some interplay between them.;And the pictures can be really spiffy.;I'm working on an n-body code for;astrophysics simulation. This work is in;support of a project on;data structures;by Prof. Richard Anderson;I'm working on a signal processing/computer music;project aiming at automatic;transcription from an acoustic signal. Prof.;Anna Karlin is;the musician who got me interested in this project.; Like everybody else, I've got a page of;applets. (This first link is just text and small graphics.);Like everybody else, I've got a page of;snapshots, mostly family. (I can now prove I've got all those brothers.); Finally, here's the weather in Seattle.;eric@cs.washington.edu;meanders@u.washington.edu;27 Sept 1996;"
"Oren Etzioni's Home Page;Oren Etzioni's Home Page;Department of Computer Science and Engineering; University of;Washington; Seattle,;Washington, 98195;Voice: (206) 685-3035;;E-mail: etzioni@cs.washington.edu;;FAX: (206) 543-2969.;Office: Sieg Hall, Room 209.;A brief bio;and photo.;Current Research; The;Internet Softbot enables a human user to state what he;or she wants accomplished. The Softbot disambiguates the request and;dynamically determines how and where to satisfy it.;The Softbot was one of the 5;finalists in the 1995 Discover;Awards for Technological Innovation in Computer Software.; The;MetaCrawler Softbot is a fielded Web service that enables you to search;multiple Web Indices in parallel, and provides sophisticated pruning;options. Try it!;c|net;recommends the MetaCrawler as the search service of choice!; The;Ahoy Softbot is a White Page service for the Web that locates;individual's home pages with high accuracy. Try it!; Brute;force learning: Brute can analyze 100,000 hypotheses a second, when;run on a SPARC-10.; Selected Publications;;Efficient Information Gathering on the Internet (FOCS '96);;Moving up the information food chain: deploying softbots on the;Web (AAAI '96); A;Scalable Comparison-Shopping Agent for the World-Wide Web;(Autonomous Agents '97); Multi-Service Search and; Comparison using the MetaCrawler in both; Postscript and; HTML, WWW '95.;; A Softbot-based interface to the internet.; CACM, July 1994.; Intelligent Agents on the Internet:; Fact, Fiction, and Forecast. IEEE Expert, August 1995.;; Intelligence without Robots (A Reply to Brooks).; AI Magazine, December 1993.;;Learning to understand information on the Internet. (IJCAI-95).;;Sound and Efficient Closed-World Reasoning for Planning (to;appear in AIJ).;;The First Law of Robotics (AAAI-94);;Additional Papers .; PhD Students Advised; Richard;Segal. Master's thesis: St. Bernard: The File;Retrieving Softbot, 1992.; Neal Lesh. Master's thesis: A Planner for a UNIX Softbot, 1993.; Keith Golden. Master's thesis: Planning for Universal;Quantification and Incomplete Information, 1994.; Terrance Goan. Master's thesis: Learning About Software Errors,;1994.; Mike;Perkowitz. Master's thesis: Learning to Understand Information on the; Internet, 1995.; Erik; Selberg. Master's thesis: Multi-Service Search and; Comparison using the MetaCrawler, 1995.; Oren Zamir and Jonathan Shakes.; Undergraduate Students Advised; Stephen Soderland, 1992, (PhD program, Umass Amherst).; Julie Roomy, 1993, (Hewlett-Packard).; Bruce Lesourd, 1993.; Robert Spiger, 1993, (Lockheed, AI research center).; William Alford, 1994, (PhD program, University of Wisconsin).; Greg Fitchenholtz, 1994, (Hewlett-Packard).; Guido Hunt, 1994.; Dymitr Mozdyniewicz, 1995, (Quark Inc.).; Machine Learning Resources;;The Machine Learning Database Repository;at UC Irvine.;;The Machine Learning Programs Repository at UC Irvine.; Knowledge Discovery Mine;containing information about knowledge discovery in databases.; Neuroprose;Archive containing recent papers relevant to neural networks.;;Machine Learning Information Services .;;University of Illinois Inductive Learning Group; StatLib containing data,;algorithms, and other information relevant to statistics.; Machine Learning;Toolbox (MLT) at GMD in Bonn, German.;;List of Usenet FAQs;Access Count Since Jan. 16, 1996:;;etzioni@cs.washington.edu;"
"Mike Feeley's Home Page;Mike Feeley;Computer Science & Engineering;University of Washington;Box 352350;Seattle, WA 98195-2350;feeley@cs.washington.edu;Phone: (206) 685-2675;FAX: (206) 543-2969;I am a sixth-year grad student; I am finishing up now and should be done soon.;My thesis concerns global memory management for workstation;clusters. I also work on the;Distributed Computing and; Opal;projects.;I'll be joining the faculty at the; University of British Columbia in;January 1997.;More information is available using these links:;Some of Our Papers;My Research Summary;CV;Southeast Idaho;Last modified: July 26, 1996;Mike Feeley;"
"Chris Fisher's home page;( no picture yet ); Chris Fisher;Department of Computer Science and Engineering;Box 352350; University of Washington; Seattle WA, 98195-2350;fisher@cs.washington.edu;Voice: (206) 685-3807;;FAX: (206) 543-2969;;e-mail: fisher@cs.washington.edu;Lab: Sieg Hall, Room 424 (LIS);My page is currently under construction!;Return to CS&E Home Page;"
"jim fix;me?;Department of Computer Science & Engineering;University of Washington, Box 352350;Seattle, WA 98195-2350;(206) 616-1848;C-109C Sieg Hall;fix@cs.washington.edu;Schedule;This quarter (autumn '96) I am not TAing any courses,;but rather working on my Generals Exam.;You can check out my schedule;to see what I'm up to. Otherwise, if I'm not around, I can probably;be found in the library or somewhere nice reading papers.;Research Activities;My main interest is in computer algorithms, specifically in the areas;of parallel computation and computational geometry.; publications; meanderings; Places to go;; Denny's;;$1.99, are you outta yer mind?;; Oh-so Vista!; Peas Kor; Some music sites;; The ""Chateau"" Gallery;; The C109-C Fund Drive;; Things to do;; The; ""What Alec Wolman might say""; server;; See; seven lost souls captured in HTML;; Listen to the phone booth, mofo;;People to see; About me;CJ!;Lucy's place; Paul ""The Peach"" Ruel;;;What I might look like at this very moment...;fix@cs.washington.edu;"
"Francesmary Modugno's Home Page;Francesmary Modugno's Home Page;Department of Computer Science and Engineering;University of Washington;Box 352350;Seattle,; WA 98195;Office: 212 Sieg Hall;Phone: (206) 543-8099;FAX: (206) 543-2969;E-mail: fm@cs.washington.edu; Research interests:;My main interest is human-computer interaction.;I am also interested in; end-user programming; formal modelling; software specification and verification; technology policy;I welcome the opportunity to collaborate on these and any related topics!; Current Research Projects:;Software Safety and the Human-Machine Interface; Previous Research:; Publications;available online; Summary of;my thesis research.; Formal models of real-time, concurrent and distributed systems; Parallel Algorthims; Professional Activities:;;CHI 96;;Basic Research Symposium;Co-chair;UIST 96 Demonstrations Co-Chair; Education:; Ph.D., Computer Science. Carnegie Mellon University. March 1995.; M.S., Computer Science. Carnegie Mellon University. August 1989.; A.B., Computer Science and Mathematics. Cornell University. May 1987.; Other Fun Activities:;I'll try just about anything once! My recent interests include;cycling, skiing, languages and cultures (currently Spanish, previously;Italian), vegetarian cooking, and my dog,; Ellery .; On-Line Greetings:; 1995 .;fm@cs.washington.edu;"
"George Forman's Home Page;George Forman's Home Page;I have received my Computer Science & Engineering Ph.D. here at the;University of Washington, and have moved down to Palo Alto to start work at;Hewlett-Packard Laboratories.; My new e-mail address is:;gforman@hpl.hp.com; Phone: 415-857-7835;Research Projects;Dissertation in the field of Mobile Computing-; try running the demos!; These pages are no longer maintained;ZPL Parallel Programming Language & Optimizing Compiler;Ariadne: scalable pattern-matching parallel trace debugger;Publications;Mobile Computing Hyperlink Library;Something Interesting;Free: handy software scripts I have written;A Word Puzzle;The Water Song;Change the Netscape animation;George H. Forman, gforman@hpl.hp.com;home page;mail;finger;map;weather;CS Dept.;UW (live picture); Generated: Wed Oct 2 11:17:52 PDT 1996;;"
Home Page: Marc Friedman; Marc Friedman's Home Page;;; Course web page for CSE 573; Who Am I?; Watercolors; Applets; Camping Checklists; Spanish-English Collaborative Dictionary; Poetry; Research; Some Favorite Quotes; Links to elsewhere;;OCCAM: an information-gathering agent.; Keith Golden.; Keith's Wordbot.; Our bike trip.;;Artificial Intelligence at UW.; Cody Kwok.; Dan Weld.;;The UCPOP planner a research tool that changed my life.; Works of Nietzsche;in English.; My Netscape bookmarks; file.; Every page should reference itself.;You are the;;visitor since Feb 4 '96;Marc Friedman;friedman@cs.washington.edu;
301 Moved Permanently;Moved Permanently;The document has moved here.;
"Georges Winkenbach;Georges Winkenbach;Department of Computer Science & Engineering;University of Washington;Box 352350;Seattle, WA 98195-2350;e-mail: georgew@cs.washington.edu;phone: (206) 526-0968;My interests are computer graphics and multimedia. My thesis work, done;under the supervision of professor;David Salesin,;deals with applying traditional pen-and-ink illustration techniques to the;automatic rendering of three-dimensional models. A few pen-and-ink images;created with our prototype rendering system can be found;here.; Other Links to Follow;Pen-and-ink image gallery.; Grail; : Graphics and Imaging Laboratory.; Department of Computer Science; and Engineering.; My wife's home page: Taweewan; Siwadune.;"
"Greg J. Badros; Welcome to my Home Page!!!;(Last updated 1-Oct-96);;Email: gjb@cs.washington.edu;Address:;8816 Nesbit Ave. N., Apt 303;Seattle, WA 98103-4067;; Hello, and welcome to my WWW homepage.;Please feel free to send feedback; to the above email address. This page is (and always will be, I;suppose) under construction so keep checking back for new and exciting;features.; I'm a recent graduate of Duke;University. I completed my B.S. degree as a double major in;computer science and mathematics in the spring of 1995. I am;currently employed part-time as a senior research scientist for;Transworld Numerics, Inc., a small company originally located in;Durham, NC, with its headquarters in Bermuda. I now work from my;apartment in Seattle,;Washington. I am also a full time graduate student in the computer;science and engineering department at the University of;Washington.;; Fall 1996 Courses;CSE 505 Home Page;CSE 531 Home Page;CSE 567 Home Page;CSE 590N, Software Engineering Seminar;CSE 590k, Compiler Seminar; Newer Stuff;Philosophy of Mathematics Course Notes;Misc. Patches (Zsh, Fvwm);My First-Place;(Best of Show) RedHat Desktop Configuration Competition Entry;Emacs Configuration README file;Emacs Configuration Archive file;ZShell Configuration README file;ZShell Configuration Archive file;A Chronicle (Duke University Newspaper) Article about Transworld;Numerics, Inc.;Spring 95 IEEE;National programming competition victory.; Vertices Winter 95;Issue (A Duke Magazine which contains my recent article on Genetic;Algorithms.);;Personal Links;;RÃ©sumÃ©.;;Data Date, my first business;;; Some sample art that I drew by;computer.;;; And some very simple 3-D (Magic Eye) art that I created.;;; Canterbury's 1993 Progressive Map;; Various random Pictures;;But life is definitely;not all work! I have many hobbies, including:;; Tennis;; Skiing, Especially at Jackson Hole , in Jackson, WY.;; Volleyball;;Juggling;; Piano Playing;;Mathematical games;(e.g.; Rubik's Cube );;Linux;(Freeware Unix);; Music, especially:;; Sarah;McLachlan; Billy Joel , or; Joel's Yahoo page (lists other links); R.E.M.;; Parliamentary Procedure;;NCAA Basketball;;And here are some other interesting links:;; Lycos Web; Search;;Duke Computer Science Home Page;;Duke University Home Page;;;The Chronicle:; The Duke Community's Daily Newspaper;; Univ. of; Washington Home Page - Unofficial;;Seattle;;Microsoft Corporation; World-Wide-Web Server;;Gateway Users Group;;;Historic; Computer Images;;HotJava;;Global Network Navigator Home Page;;PERL --; Practical Extraction and Report Language;;The C++; Virtual Library;;Inter-Language; Unification -- ILU;; Interesting Devices Connected to the Net;; Writing HTML, SGML, TEI, etc.;; The Seinfeld; Index Page;; Friends; Sitcom;Parts of this material are based upon work supported under a National Science Foundation Graduate Fellowship. Any opinions, findings, conclusions, or recommendations expressed in this publication are those of the author, and do not necessarily reflect the views of the National Science Foundation;;Greg J. Badros / U Washington Computer Science and Engineering / gjb@cs.washington.edu;"
"Greg Linden's Home Page;Greg Linden;My lovely wife;Corina is;currently in her third year of the graduate program in the;Political Science;here at;U of W.;I'm in my third year in the graduate program at the;Computer Science;Department at the University of;Washington, slaving away toward the lofty goal of my Ph.D.;;I completed his undergraduate;degree at the University of California at San Diego with an;odd double-major in Computer Science and Political Science.;I'm going on leave from graduate school in mid-December and I'm;actively looking for a position in software development. If you're interested, you can check out my;resume.;Java Applets:;WebView allows you to see the links to and from a page or;set of pages.;There are two new additions to the WebView family, AltaVistaWebView;and MetaWebView. Instead of entering a URL, you enter keywords for;AltaVista or Metacrawler and WebView hits the search service,;returning a graph displaying all the pages found by the search;services with the links between those pages.; The;Automated Travel Assistant emulates the dialog between a travel;agent and client, gradually eliciting your flight preferences while;allowing you to browse real flight data. It's a research prototype,;but it has quite a bit of functionality even at this early stage.;ATA and;WebView;have been highly rated by;Gamelan and;JARS.;ATA;was;rated ""Top 1% of Java applets"" by JARS, ""What's Cool"" by Gamelan, and;was a Gamelan staff pick.;WebView;was;rated ""Top 5% of Java applets"" by JARS, ""What's Cool"" by Gamelan, and;was a Gamelan staff pick.;;...and a Gamelan Staff Pick!;And;AltaVistaWebView;was one of the winners of the;Java Repository Java Contest!;My applets have also been published in two books:;A. Walsh, Foundations of Java, IDG Books, 1996;Le Meilleur de Java (The Best of Java), 1996;Here's my first Java applet, Linear Ballet.;Oops! You're not using a Java-capable browser. Sorry. No cool Java applets for you.;The source demonstrates using double-buffering to avoid flicker and using threads to give time to other running applets. The code certainly could be cleaner, though, so don't expect a work of art here.;;If you thought that was cool, you might have low enough standards;to be impressed by my;LGrammer or;Particle Tree; applets.;Both draw trees. The LGrammer trees look much more realistic than the;ParticleTree trees, but both are interesting.;I recently started a position as a;JARS judge, evaluating the Java applets that are submitted to the;JARS archive. Very interesting work.;In the summer of 1995, I developed Dawn of Civilization, a;demonstration application showing that planning techniques can;successfully be applied in entertainment software, for Myriad;Software.;At UCSD, I worked with Professor Rik Belew and Filippo Menzer on the; Latent;Energy Environments (LEE) project, a tool for developing;artificial life models and experimenting with artificial neural;network and evolutionary learning in software enviroments.;; Papers:;S. Hanks, N. Lesh, G. Linden, Eliciting User Preferences: The;Automated Travel Assitant, Submitted to User Modeling 1996.;S. Majeski, G. Linden, C. Linden, A. Spitzer, Modeling Localized;Interaction: Spatial Constraints in the Iterated Prisoner's Dilemma,;Association of Economic Scientists 1996.; A. Krishnamoorthy, R. Paturi, M. Blume, G. Linden, L. Liden,; S. Esener, Hardware;Tradeoffs for Boolean Concept Learning, World Congress on Neural;Networks, 1994, pg 551-559; G. Linden, Recurrent Neural Networks in the Iterated Prisoner's;Dilemma, 1994 [Unpublished Honor's Thesis];Adam Carlson,;Sujay Parekh, and I wrote a fun;ray tracer;as one of;the projects in;CS557 (graduate computer graphics). Here's some of the images...; The Headless Horseman; Closeup of the Headless Horseman; Chess Duel; Some Assembly Required; Spheres, an image with;reflection, transparency, shadows, distributed ray tracing, adaptive;sampling, and a mess of other cool things. The patterns on the;spheres are because they're both transparent and reflective, causing;the rays to reflect and refract multiple times both from the surface;and internally.;We also made a 90 second computer animation called ""The Strike"". The;animation was written using SGI Inventor and C code to manipulate the;3D models. The original SGI movie file was 70mb. We have made a;lower quality;27.5mb QuickTime movie; available and a;very low quality 6.5mb;QuickTime movie available. Sorry, it just doesn't compress any;further than this (at least with anything resembling reasonable quality).; Mac Programming Stuff; Dilbert; Cognitive Science at UCSD; CMU AI Repository; Artificial Life Info;I can be occasionally found at:; Chateau (a.k.a. Guggenheim Annex) 109A; Box 352350; Computer Science & Engineering; University of Washington, FR-35; Seattle, WA 98195-2350; (206) 616-1846; (206) 543-2969 (fax);; glinden@cs.washington.edu; Last modified:; 5/27/96;"
"Brian Kris Grant: Home Page;Brian's Home Away From Home;Work-Related Info;Work background;UW;Dynamic Compilation Group;UW Department of Computer;Science & Engineering;Personal Stuff;Personal background;My daughter, Isis;My trip to Singapore;My bookmarks;My PGP Public Key;Last updated October 3, 1996.;Brian Kris Grant (grant@cs.washington.edu);"
"Dave Grove; Dave Grove; Department of Computer Science & Engineering; University of Washington,; Box 352350; Seattle, WA 98195-2350 USA;Office:;Chateau Sieg 110.; Work;I spend most of my time playing with;Cecil.;Cecil is a new pure object-oriented langauge that we are using;as a vehicle for integrated research in the areas of language design,;programming environments, and optimizing compilers.; I also used to be one of the hordes of consultants hanging around;the fringes of the;SPIN;project. Now that I'm actually attempting to graduate sometime soonish, I;do this much less frequently.; Papers I've authored or co-authored.; Play; The day just wouldn't be complete without a Dilbert;fix. Here's a strip that;hits a little too close to home!;;I am currently managing an underacheiving;fantasy football team.; I used to spend my summers in New Hampshire, working with these guys at Wah-Tut-Ca Scout;Reservation (Greater;Lowell Council, BSA).;Here's a picture of a Wah-Tut-Ca;sunset, taken right from my cabin. Just for kicks, here's another one.; Every once in a while, the boys in my office do something silly.;Our;white water rafting trip was especially cool.; After spending a few months in Toronto, I drove back to;Seattle and took a number of detours along the way. Here are some;hihglights from the trip.;grove@cs.washington.edu;"
"Scott Hauck;Scott Hauck;hauck@cs.washington.edu;Computer Science & Engineering Department,;University of Washington, FR-35,;Seattle, WA 98195 USA;I'm a 5th year graduate student at the University of Washington.;I am currently working on Multi-FPGA Systems and Rapid-Prototyping of;Board-Level Designs, though;I am also interested in Asynchronous Circuits, FPGA Architectures, and;Parallelism. I should graduate in June of 1995.;Personal; Biography & Education; Experience; Publications; Curriculum Vitae;Research;;Asynchronous Circuits; Survey of current asynchronous design methodologies, as; well as the first FPGA for asynchronous circuits.;;Triptych/Montage FPGA Architectures; Development of the Triptych and Montage FPGA; architectures, architectures with improved densities over current; commercial FPGAs.;;Multi-FPGA Systems & Rapid-Prototyping; Development of the Springbok Rapid-Prototyping System for; Board-Level Designs, as well as partitioning, pin assignment,; and routing topology work for general multi-FPGA systems.;;The Chinook Project; A Hardware/Software Co-design, Co-synthesis, and Co-simulation; system for embedded applications.;;"
"Ian's Place; Ian's Place;This is me, Ian MacDuff.;Below is an ultrasound image of;Emma Elspeth MacDuff (name subject to change without notice),;my unborn daughter. She's 20 weeks from;conception here, with about 20 more weeks until she's ripe in;mid-December. The view is a profile. She's lying on her back looking;up. Her head on the right, the upper-half of her torso on the;left.;When I'm not busy obsessing about my impending;fatherhood, or my;Master's Thesis;(which is part of the;Chinook project), I pass my time by being as;silly as possible.;I also remember to eat my;SPAM! Do you?;Unfortunately, I also waste time with;HTML and browse around for interesting stuff using;WebCrawler.;Here's pointers to some other neat stuff:;Frogs;TV Nation;Penn & Teller;Music Lyrics;Ian MacDuff (;ian@cs.washington.edu);Dept. of Computer Science and Engineering, FR-35;Univ. of Washington;Seattle,;WA, 98195;USA;"
"Herve A. Jamrozik;Herve A. Jamrozik;I have been a postdoc at the University of Washington since September 1995.;Department of Computer Science and Engineering;University of Washington;Box 352350;Seattle,;WA;98195;Office: 433 Sieg Hall;Phone: (206) 685-2675;FAX: (206) 543-2969;E-mail:;jamrozik@cs.washington.edu; Research:;My main interests are in Distributed Systems, Object-Oriented Languages and Software Engineering.;Currently, I am working on Global Memoy Management in a workstation cluster with;;Hank Levy;;Mary Vernon;;Anna Karlin;;Mike Feeley;;Geoff Voelker;New high-speed networks greatly encourage the use of network memory as a cache for virtual memory and file pages, thereby reducing the need for disk access. Network nodes with memory-intensive applications can use the primary memory of lightly-loaded nodes as temporary backing store. This introduce a new level of the memory hierarchy: namely, a global memory cache that lies (logically) between local memory and disk.;Because pages are the fundamental transfer and access units in remote memory systems, page size is a key performance factor. Recently, page sizes of modern processors have been increasing in order to provide more TLB coverage and amortize disk access costs. Unfortunately, for high-speed networks, small transfers are needed to provide low latency. This trend in page size is thus at odds with the use of network memory on high-speed networks. We studied the use of subpages as a means of reducing transfer size and latency in a remote-memory environment.;Reducing Network Latency Using Subpages in a Global Memory Environment.;H.A. Jamrozik, M.J. Feeley, G.M. Voelker, J. Evans II, A.R. Karlin, H.M. Levy, and M.K. Vernon. In;Proceedings of the Seventh ACM Conference on Architectural Support for Programming Languages and Operating Systems,;October 1996.;[postscript];I did my thesis research on Debugging in an Distributed Object-Oriented System in 1993 at the;Universite Joseph Fourier,; Grenoble .;I was involved in the;GUIDE;project at the;Laboratoire Bull-IMAG;, part of the;IMAG;institut.;Fun:;There is a way to go to the ExTremE People &reg area. It's;Not here.;Visit the Louvre gallery;;Look at the maps of; France ,; Europe;and; World .;Some;family pictures.;Some;friends pictures.;jamrozik@cs.washington.edu;V1.1 Mai 6, 1996;V1.0 March 21, 1996;V0.1 December 28, 1995;"
"Jason Secosky - Home Page;Jason Secosky,;jasons@cs.washington.edu;Address:;Computer Science &;Engineering Department Sieg Hall C-109C;University of Washington Box;352350;Seattle, WA 98195 USA (206) 616-1848 (office) (206) 543-2969 (fax);Frequently used pages:;The ZPL Project;Seattle Weather Forecast - c/o The Weather Channel &reg;News and Observer;(NandO);Otter;Pops Home Page;Star Trek Voyager,;Presented by Paramount;Webcrawler Internet Search Tool;Alta Vista Internet Search Tool;c|net magazine;Â©Jason Secosky;Last Modified: Thursday May 23, 1996;"
"Jeremy Baer;Jeremy Baer;""I never let my schooling interfere with my education"";-Mark Twain;""We are such stuff as dreams are made on"";-William Shakespeare;I'm currently a graduate student in;Computer Science;at the;University of Washington.;My CS interests include artificial intelligence, human-computer;interaction, multimedia educational software, software engineering;tools, and computer generated music.;Here's some more personal/creative stuff.;Other cool places I spend some significant time at:;Pierian Spring Software;Oregon Museum of Science and Industry (OMSI); Pomona College;Here's a look at some current projects of mine:; Eight-Puzzle Java Applet;(a work in progress); Experimental Virtual Travel Applet; Copy Effects Demo Applet; Questioner Project; Static Layer Analysis for C Programs;Feeling stressed out? Here's a really silly little DA for the Macintosh that;I wrote years ago.; Download it if you'd like.;Metacrawler Web Search;Copyright (c) 1996 Jeremy Baer;jbaer@cs.washington.edu;"
Jeremy Buhler's Home Page;Jeremy Buhler's Home Page;Do not attempt to adjust your browser.; We are controlling transmission.;; Status:;First-year Ph.D. student; Institution:; University of Washington; Department:; Computer Science and Engineering; Office:;Sieg Hall 429; Office Phone:;(206)543-5129; Home Phone:;(206)729-1455; E-mail Address:;jbuhler@cs.washington.edu; Finger me at:; tako.cs.washington.edu;Important Stuff;Lecture notes on suffix trees (Postscript); (LaTeX);My research (coming soon);My course schedule;My PGP public key;Cyber-activism at the; Electronic Frontier Foundation;;Just for Grins;Recommended reading;My undergraduate alma mater:; Rice University;Quotable quotes;My cat's home page;We now return control of your browser to you.;Jeremy Buhler;(jbuhler@cs.washington.edu);Last Update: 10/18/96;
"Jeff Dean; Jeff Dean; Department of Computer Science & Engineering; University of Washington, FR-35; Seattle, WA 98195 USA;Office:;Chateau Sieg 110.;Here's the view from my office (or would be if those danged buildings weren't in the way):;Future Plans;I plan to graduate in summer, 1996, after which I'll be joining DEC's Western Research Laboratory in sunny Palo Alto. We've just bought a house in nearby Menlo Park.; Here is my curriculum vita (postscript). I also have a summary (postscript) of my research and teaching experience.;Projects;I work primarily on the;Cecil project.;Cecil is a new pure object-oriented langauge that we are using as a;vehicle for integrated research in the areas of language design,;programming environments, and optimizing compiler techniques. We;intend for our techniques to scale to large, real-world programs, and;to keep ourselves true to this goal, we're implementing the Vortex;compiler in Cecil. We currently have about 70,000 lines of Cecil code;in the compiler.;;Much of our work in this group involves tracking down compiler bugs.; I also hang out in the SPIN;project meetings. SPIN is an extensible operating system;microkernel which supports the dynamic adaptation of system interfaces;and implementations through direct application control, while still;maintaining system integrity and inter-application isolation.;During Spring quarter, I was one of the organizers for CSE 590K, the department's compiler seminar.;Research Interests;My research concerns the efficient implementation of;object-oriented languages through compiler optimization techniques.;In particular, I am exploring how whole-program analysis can be used;to improve performance, how it affects incremental compilation, and;how it interacts with other optimization techniques, especially;profile-guided optimization techniques. I am also interested in how;whole-program optimization affects language design: if it is assumed;that the compiler will have access to the entire program, then many;compromises made in existing language designs become unnecessary. I;am interested in applying the lessons learned in exploring whole;program optimization towards designing a new systems programming;language that is both flexible and efficient, based on an underlying;implementation that does whole program analysis.;To validate my research, I have been one of the three principal;designers and developers of Vortex, an optimizing compiler for;object-oriented languages. Vortex defines a language-independent;intermediate language for object-oriented languages that is;high-enough level to permit optimization of features such as message;sends, closures, and object creations. It also contains a unique way;of composing optimization passes so that they run in parallel,;obtaining better results than repeatedly running the passes;separately. For example, the compiler applies intraprocedural class;analysis, profile-guided receiver class prediction, inlining, alias;analysis, splitting, and CSE all at once, in a single combined pass.;Part of the work on Vortex has been to develop ways of structuring;optimization passes to permit this kind of composition while still;allowing the passes to be developed largely independently of each;other. We have a nice framework for specifying iterative data flow;analyses that permits clients to develop new optimization passes with;relatively little effort (for example, the Vortex dead assignment;elimination pass is approximately 50 lines of code).;Publications;Some recent papers I've authored or co-authored.;Personal;I love very spicy food (as they say, ""mild is a four letter word"") and Coke. I should probably kick my caffeine habit. Most of my enjoyable moments are spent with my wife Heidi and my daughter Victoria. I would really like to go here someday. My wife and I spent our honeymoon on Kauai during Hurricane Iniki.; I recently won a biplane ride from Galvin Flying here in Seattle (I guess I can't say ""I never win anything!"" anymore). My wife and I took the flight, which consisted of a 20 minute flight around and over downtown Seattle and Puget Sound in a Travel Air 1927 model biplane. I was feeling daring, but, sadly, their insurance coverage doesn't permit passengers to walk on the wing, so we just sat back and enjoyed the ride and the view. It would have been fantastic even if we'd had to pay for it. Highly recommended! If you're looking for something fun to do in Seattle, their number is 763-0350.; Here's my rather lengthy hotlist.;jdean@cs.washington.edu;"
"Jon Damon Reese's Home Page;Jon Damon Reese;Post-Doctoral Researcher; Safety-Critical Software Group;Department of Computer Science and Engineering;University of Washington;Box 352350;Seattle,; WA; 98195; Office:; 106 Chateau (Guggenheim Annex); Phone:; (206) 616-1844; FAX:; (206) 543-2969; E-mail:;jdreese@cs.washington.edu; Research;; I am interested in the problem of safety-critical; software. We are all aware of devices, systems, and; structures that can cause catastrophes when they fail. As; computer hardware becomes less expensive and as more expectations; are placed on software, computers are being placed in control of a; wider range of these applications. Software has advantages over; conventional technologies, e.g., flexibility.; But these advantages come at a price. Software behavior can be; very complex and unpredictable. Perhaps the best publicized example is; the Three Mile Island incident, in which operators had great; difficulty in diagnosing the state of the system during an emergency.; The requirements stage of software development is key to a project's; success, especially with respect to safety. For that reason,; my colleagues and I have concentrated on requirements, especially; the communication of requirements via a requirements specification.; To that end we have developed a state-based language called;;Requirements State Machine Language, or RSML.; We have validated the usefulness of this language by; specifying TCAS II,; an avionics system.; For my doctoral thesis I invented a hazard analysis procedure; based on the Hazard and Operability (HAZOP) study.; The most significant concept that this new procedure borrows from; HAZOP is that of a deviation, hence the name deviation; analysis. See below for a link to an HTML transcription of; the dissertation.; Current Projects; Deviation Analysis;; Write conference article summarizing deviation analysis.; Make deviation analysis software available to UW Safety-Critical; Software group.; Study the possibility of dynamic display and control of; deviation analysis searches. (With Siang Lin Loo);; RSML Tool Set;; Integrate deviation analysis software with RSML tool set.; (With Kurt Partridge); Make alpha version of RSML tool set publicly available.; (With Kurt Partridge and Sean Sandys);; RSML semantics;; Draft semantics document, including discussion of RSML variants; Develop example of improved semantics;; Academic History; Ph.D. (1996),; Information and Computer Science,; University of California, Irvine; Dissertation: Software Deviation Analysis;(Postscript); B.A. (1989), Computer Science/Linguistics,; Rice University.; Waxahachie High School (1985), Waxahachie, TX.; Publications; Nancy G. Leveson, Mats P.E. Heimdahl, Holly Hildreth, and Jon Reese.; Requirements Specification for Process-Control Systems.; IEEE Transactions on Software Engineering, SE-20(9),; September 1994.;(Postscript); Steven B. Dolins and Jon D. Reese.; A Curve Interpretation and Diagnostic Technique for Industrial Processes.; IEEE Transactions on Industry Applications, 28(1),; January/February 1992.; N.G. Leveson, M.P.E. Heimdahl, H. Hildreth, J.D. Reese, and R. Ortega.; Experiences Using Statecharts for a System Requirements Specification.; Sixth International Workshop on Software Specification and Design,; Como, Italy, October 1991.; Etc.;jdreese@cs.washington.edu;"
"Home page for Jack L. Lo;Jack L. Lo;jlo@cs.washington.edu;Department of Computer Science and Engineering,;University of Washington, Box 352350;Seattle, WA 98195-2350;This home page is currently under construction.; Research; Papers; Converting Thread-Level Parallelism Into Instruction-Level Parallelism via Simultaneous Multithreading (Abstract, Postscript);Jack L. Lo,;Susan J. Eggers,;Joel S. Emer,;Henry M. Levy,;Rebecca L. Stamm, and;Dean M. Tullsen;Submitted for publication, July 1996.; Exploiting Choice: Instruction Fetch and Issue on an Implementable Simultaneous Multithreading Processor (Abstract, Postscript);Dean M. Tullsen,;Susan J. Eggers,;Joel S. Emer,;Henry M. Levy,; Jack L. Lo, and Rebecca L. Stamm;;In Proceedings of the 23rd Annual International Symposium on Computer Architecture, Philadelphia, PA, May 1996.; Compilation Issues for a Simultaneous Multithreading Processor;(Postscript); Jack L. Lo,;Susan J. Eggers,;Henry M. Levy, and;Dean M. Tullsen;In Proceedings of the First SUIF Compiler Workshop, Stanford, CA, January 1996, p. 146-7.; Improving balanced scheduling with compiler optimizations that increase instruction-level parallelism (Abstract, Postscript); Jack L. Lo and Susan J. Eggers;In Proceedings of the ACM SIGPLAN '95 Conference on Programming Language Design and Implementation, La Jolla, California, June 1995, pages 151-162.; Comparing static and dynamic scheduling on superscalar processors; Jack L. Lo.;General Examination Written Report, May 31, 1995; Examining the interaction between balanced scheduling and other compiler optimizations; Jack L. Lo;Ph.D. Qualifying Examination Written Report, May 6, 1994;I'm currently working on architectural and compiler support for;;Simultaneous Multithreading (SMT).;My research interests also include static and dynamic scheduling for;superscalar and VLIW processors, instruction-level parallelism issues,;as well as compilation for multithreaded architectures. In particular,;I am investigating compilation issues for;Jack's Lo-down on WWW pages;Where to find me:;2371 Franklin Ave. E;Seattle, WA 98102;(206) 328-4648;or;Sieg Hall, Room 223;Phone: (206) 685-4087;FAX: (206) 543-2969; A couple pictures from our recent paintball experience; Picture 1; Picture 2;Yahoo;jlo@cs.washington.edu;"
"Joe Sherman's Home Page;Joe Sherman;joebob@cs.washington.edu;Department of Computer Science and Engineering;University of Washington;Box 352350;Seattle, WA 98195-2350 USA;My research interests are:;User Interface design;Information navigation and visualization;;Projects and Activities:;User Interfaces for . . .;An informal, local survey of Web use;Class project for CSE 590H;Creating an impressive Home Page;Quality time with Pam, Tim and Sarah;Softball;Stuff I might want to see:; Automatic suggestions via SEW page; Links to User Interface Research and related;topics; Directory of useful Web Pages;If your browser supports it, you can send mail to;joebob@cs.washington.edu.;"
"Joanna Power;joanna's page;Hi. I'm Joanna.;These are my cats:;academic interests;My main interest in computer science is graphics.;grad school at UW;neat stuff at my alma mater;cool graphics links from Jonathan Shade;graphics research at UW;duotone reproduction;My other main academic interest is biology, especially genetics and molecular;biology.;more alma mater;most recent site of gainful employment;publications;Joanna L. Power, Brad S. West, Eric J. Stollnitz, and David; H. Salesin. Reproducing color images as duotones. In; Proceedings of SIGGRAPH 96, pages 237-248. ACM, New; York, 1996.;real life;past homes;diversions;gender issues;status of women in computer science;NOW home page;Feminist Majority Online;ultimate frisbee;fun stuff;Froggy Page.;Sean's quotes;Brad's comics and music;Evan's jokes;Ed's page of pages;my hero;jpower@cs.washington.edu;"
Juan Alemany;Juan Alemany; My Home Page;
"Kari Pulli's Home Page;Kari Antero Pulli;I'm a third year graduate student in the Computer Science & Engineering;Department at the University of;Washington, working on my Ph.D.;I'm interested both in Computer Graphics, Computer Vision, and;Mathematics, and I'm trying to combine aspects from all these;disciplines in my research.;The professors in our department I work closest with are Tony;Derose (graphics) [he's actually not here any more, but left UW;for Pixar] and Linda;Shapiro (vision). Additionally I work with Werner Stuetzle and;John McDonald (statistics), Tom Duchamp (mathematics), and;Hugues Hoppe and Rick Szeliski (Microsoft research).;I did my quals project TRIBORS: Triplet-Based Object Recognition;System while working as an RA for Linda, my report is a Technical Report 95-01-01;of the Department of Computer Science & Engineering in the University;of Washington.;Currently I'm working on surface;reconstruction from range data. We have a multiple-baseline camera;system for obtaining data, we use subdivision surfaces and wavelet;analysis for surface geometry and reflectance functions.;;I just passed my General Examination, where the topic was Rigid;Registration of 3D data. Click here to find out more about it.;Some class projects from my 2nd year at UW;CSE 548, Computer Architecture;Systems, the class was taught by Susan;Eggers.;CSE 552, Distributed Computing, the;class was taught by Brian;Bershad.;CSE 576, Image Understanding, the;class was taught by Steven Tanimoto;.;I presented two Technical Sketches in SIGGRAPH '96. You can get;to my slides on;subdivision surfaces; and to my slides on;removing wavelets;.;Here's my r&eacutesum&eacute.;You can find me at:; UW:; Sieg Hall 423; Computer Science & Engineering; University of Washington,; Box 352350; Seattle, WA 98195-2350; (206) 543-3368; FAX: (206) 543-2969; email: kapu@cs.washington.edu; Home:; 4200 Union Bay Pl. NE #R230; Seattle, WA 98105; (206) 522-9809;; Folks:; Takavainiontie 1 B 6; 90560 OULU; Finland; 011-358-81-5542011;;;Kari Antero Pulli;;Last modified:;JUN 08, 1996;"
"Anna R. Karlin;Anna Rochelle Karlin;Associate Professor at the University of Washington since;July 1996.;Work:; Computer Science & Engineering Department,; University of Washington, FR-35,; Seattle, WA 98195, USA;+1 (206) 543-9344;FAX (206) 543-8331; Home page; Some papers;karlin@cs.washington.edu;"
Home page of Ka Yee Yeung;Home page of Ka Yee Yeung;Personal Info;My Picture;My Research;Telnet to other machines;Send Emails to me; Back to the CSE home page.;
"Kurt Partridge; KURT PARTRIDGE;; ACADEMIC INFORMATION; I am a graduate student in the; computer science department at the University of Washington. My; interests include software engineering, software specifications,; specification usability and readability, and applications of formal; methods to specifications. The UW; software safety web page describes my and others' work in these; areas.; I have also dabbled in user interface design, human computer; interaction, and Java programming.; RECENT PUBLICATIONS;Kurt E. Partridge.; BDDTCL: An Environment for Visualizing and Manipulating Binary Decision;Diagrams. Interactive Poster at CHI '96.;(HTML, Postscript). Poster Preview (Postscript).;Nancy Leveson, Ken Bauer, Mats Heimdahl, Wayne Ohlrich, Kurt Partridge,; Vivek Ratan, and Jon Reese.; A CAD Environment for Safety-Critical Software.; NASA Conference on Safety Through Quality 1995.; (Postscript);BACKGROUND; I started graduate school in 1992 after completing a B.S. in computer; science at UC Berkeley. Before that I lived a lovely suburban life in; Thousand Oaks, CA with my parents, sister, and a cat named Otis.;FUN; Right this way to Kurt's Humor Corner.;; Box 352350; University of Washington; Seattle, WA 98195 USA; Voice: (206) 685 4087; FAX: (206) 543 2969;kepart@cs.washington.edu;"
"Keith Golden's Home Page; Questa pagina Ã¨ anche in italiano; Keith Golden;Research;Softbots;Planning;KR;Selected publications;Curriculum;Vitae; Also in;postscript;Random Hacking;Wordbot;Collaborative Dictionaries;Likes; Bicycle Touring; Languages; Painting and photography; Nature; Coffee; ""Godless pinko stuff"";Dislikes; Suits; Lawyers; Cars; TV; Friends*;Ellen;Marc;Ruben & Lauren;Nick;Rich & Joanna;Vivek; Advisors; Oren Etzioni; Dan Weld; Keith;Golden, Department of;Computer Science &amp Engineering, University of Washington,;Seattle USA; kgolden@cs.washington.edu;;* Not a complete list!;"
"Kingsum Chow; Kingsum Chow;kingsum@cs.washington.edu;Computer Science & Engineering Department,;University of Washington, Box 352350,;Seattle, WA 98195 USA;This end of the Information Highway is always under construction.;Table of Contents;; Personal;; Research;; Upcoming Conferences;; Resume;; Current Schedule; Bridge; Glossary; Universities in Hong Kong;; Suggestions & Feedback;Research;My advisor is David Notkin.; Asynchronous Software Evolution; Software Development Tools;Papers on-line; ""Software Quality Management by Responsibility Driven Software Evolution"" (not ready yet); Kingsum Chow and David Notkin, Semi-Automatic Update of Applications in Response to Library Changes, Technical Report UW-CSE 96-03-01 (a revised version will appear in ICSM'96).; Kingsum Chow and David Notkin, ""Asynchronous Software Evolution"", Asia-Pacific Workshop on Software Engineering Research, March 21, 1996, Hong Kong.; Kingsum Chow, ""Program Transformation for;Asynchronous Software Maintenance"", Proceedings of ICSE-17;Workshop on Program Transformation for Software Evolution, William Griswold, editor,;The 17th International Conference on Software Engineering, April 24-28, 1995, Seattle,;Washington, USA.;Useful sites for PCCTS/Sorcerer;PCCTS Home Page; | PCCTS FTP page; | Terrence Parr; | Notes for PCCTS Newbies;Resume;Please;drop me a mail;to get my resume and specify text or postscript format.;Universities in Hong Kong;Chinese University of Hong Kong; | University of Hong Kong; | University of Science and Technology; | Hong Kong Polytechnic University; | City University of Hong Kong;Singapore Sites;Singapore Online (TM); | NUS World-Wide Web Server; | NUS Alumnus Web;Some Off Campus Friends;Tom Liew Yun Fook's Home Page; | Tak Yin Wang (new page); | Jiang, Weidong;U of W related;University of Washington: Style and Policy Manual for Theses and Dissertations; | UW Graduate School Webserver; | University Book Store;Investments;Free 20 Minute Delayed Quote Watch; | PC Quote Market Data and More; | Experimental Mutual Fund Charts; | On-Line Investment Center - Stocks, Commodities, Technical Analysis;Misc.;Read Chinese; | Hot List; | Thomas I. M. Ho; | China News Services; | Welcome to PBS ONLINE; | Hong Kong Movies; | Movies A; | Movies B; visits since Oct 11, 1995.;;; Kingsum Chow;; Last modified: $Date: 1996/05/13 23:51:07 $;"
"Kevin Bolding; Kevin Bolding;kwb@cs.washington.edu;Computer Science & Engineering Department;University of Washington; Box 352350;Seattle, WA 98195-2350 USA;; The juvenile sea squirt wanders through the sea searching for; a suitable rock or hunk of coral to cling to and make its; home for life. For this task it has a rudimentary nervous system.; When it finds its spot and takes root, it doesn't need its brain any; more so it eats it. It's rather like getting tenure.; - D.C. Dennett, Consciousness Explained; Research;I'm currently working on building a high-speed, low-latency;LAN from Chaotic Routers (see below). My previous research;has been on Chaotic;Routing, which is a form of non-minimal adaptive routing for;massively parallel multicomputers.; About me; Professional;I am an assistant professor of electrical engineering at;Seattle Pacific University. I'm also working part time as a research;associate at the University of;Washington. All significant papers I've written are in the archives of;the Chaotic Routing group.;I spend most of my time;teaching Electrical and Computer Engineering;at Seattle Pacific University.; Personal;Here are some photos I took of the comet;Hyakutake from Seattle.;No, the moustache isn't real.;In case you want to visit me at home, here is a map.;I have another home page;at SPU.;"
"Richard E. Ladner;Richard E. Ladner;Professor; Department of Computer Science & Engineering,; University of Washington, Box 352350,; Seattle, WA 98195, USA;e-mail: ladner@cs.washington.edu;phone: (206) 543-9347;FAX: (206) 543-2969;Office: Sieg Hall, Room 311;;Personal; Short Biography;Research; Publications; Ph.D. Students;Teaching;Computer Programming I (Fall Quarter 1996);Introduction to Computer Communication Networks (Spring Quarter 1996);Introduction to Formal Model in Computer Science (Winter Quarter 1996);Data Structures (Spring Quarter 1995);ladner@cs.washington.edu;"
"Larry McMurchie's home page;; Larry McMurchie;Department of Computer Science and Engineering; University of;Washington; Seattle,;Washington, 98195;Voice: (206) 685-0951;;FAX: (206) 543-2969;;e-mail: larry@cs.washington.edu;Office: Sieg Hall, Room 217;Current Research; Larry McMurchie, Director, NW Laboratory for Integrated;Systems, has a BA in Chemistry from Western Washington University;(1971) and a Ph.D. in Chemistry from the University of Washington. He;worked in the area of Quantum Chemistry during his graduate studies.;His primary focus was the numberical evaluation of a class of;integrals over Gaussian functions. He later applied this work to the;construction of large sparse Hamiltonian matrices. He is a coauthor;of a comprehensive package of computer programs (MELD) used in ab;initio calculations on small molecules.;;Since joining the staff of the Department of Computer Science and;Engineering, Larry has supervised the work of the technical staff of;the Laboratory for Integrated Systems. He was a coauthor or WireC, a;schematic capture system that allows designers to mix C code with;schematic symbols to creat a concise, parameterizable representation;of a design. Larry was also involved in the development and;commercialization of the MacTester, an integrated software/hardware;environment for the functional testing of chips, boards and;subsystems. Recently he has worked in the area of CAD for FPGAs and;has developed a general purpose performance-driven router for FPGAs.;;Northwest Laboratory for Integrated Systems,;;The MacTester: A Low-Cost VLSI Chip Tester;;Triptych: A New High-Density FPGA Architecture; Publications; Journal Articles ,;Upcoming Conferences;Return to CS&E Home Page;"
"Nancy Leveson's Home Page;Nancy Leveson;Department of Computer Science & Engineering;University of Washington;Box 352350 [express mail: Sieg Hall 114];Seattle, WA 98195-2350 USA; +1.206.685.1934; +1.206.543.2969 [FAX]; leveson@cs.washington.edu; Nancy Leveson, Professor, joined the faculty in 1993, coming from;California in search of rain. She received all her degrees, in math;and computer science, from UCLA (Ph.D., 1980) and spent her formative;years being a professor at the University of California, Irvine.;Professor Leveson started a new area of research, software safety, which is;concerned with the problems of building software for real-time systems;where failures can result in loss of life or property. One advantage of;this topic is that nobody questions its goals, except for a few misanthropes;(who don't matter anyway). She and her students have recently produced a;formal requirements specification for TCAS II, a real collision-avoidance;system required on all commercial aircraft in U.S. airspace. One of the;lessons she has learned from this project is never to do anything like it;again. The FAA seems pleased with it though and has adopted it as their;official specification. She and her students are currently working on;doing a safety analysis of the specified behavior of TCAS. She claims that;you should not read anything into the fact that she has been taking the train;a lot lately.;The Safety;Research Project is now also working on modeling and analysis of;automated highways, automobiles,;and various aerospace systems. Subtopics in this research area include;modeling and analysis of safety, specification, safe software design,;software fault tolerance, and verification and validation of safety.;Professor Leveson is Editor-in-Chief of IEEE Transactions on Software;Engineering, an elected member of the Board of Directors of the Computing;Research Association, a member of the National Research Council Commission;on Engineering and Technical Systems, and a member of the ACM Committee on;Computers and Public Policy. Recently she chaired a National Research;Council study evaluating the Space Shuttle software process. Dr. Leveson;is a Fellow of the ACM and was awarded the 1995 AIAA Information Systems;Award for contributions in space and aeronautics computer technology and;science for ""developing the field of software safety and for promoting;responsible software and system engineering practices where life and property;are at stake."";This year, Dr. Leveson's new book on software safety,;(Safeware: System Safety and Computers, Addison-Wesley, 1995) was;published. Recent papers are available via the web and a list of other papers is;also available. For a copy of my favorite paper (which was actually a keynote;address at the Int. Conf. on Software Engineering in Melbourne) titled;""High-Pressure Steam Engines and Computer Software"", click here.;Quals projects are available on the following topics: (1) applying hazard;analysis techniques to an aircraft collision avoidance system model written;in a state-machine-style language (called RSML), (2) determining ways to build;fault trees or other analyses from RSML models in general, (3) designing new;requirements specification languages (including specifying the human-computer;interface) and deriving general principles for designing such languages,;(4) applying hazard analysis to human-machine interface models, (5) modeling;the human-machine interface in control systems (e.g., an aircraft cockpit),;and (6) analyzing aircraft accident reports (involving mode awareness problems;and other general HCI issues) to derive information about safe design of;human-computer interaction.;Try finger (finger leveson@cs.washington.edu) for information about which;city (or airport) I am currently in and perhaps how to contact me.;"
"Hank Levy's Home Page; Henry M. Levy, Professor,;joined the faculty in 1983. Hank's current research;projects focus on operating systems,;on parallel and;distributed computing, on computer architecture (particularly;""Simultaneous Multithreading"" architectures);and on object-based languages and environments. A recent project;called Opal;deals with single-address space operating systems for;64-bit computer architectures. The;Etch project;is producing a tool for performance instrumentation and optimization of;x86 binary executables.;Levy is author of two books;and numerous papers on computer systems, including;``outstanding paper''selections from four consecutive;ACM Symposia on Operating Systems Principles. He;is former chair of ACM SIGOPS;(the Special Interest Group on;Operating Systems), and program chair for the;16th ACM Symposium on Operating Systems Principles, to;be held in 1997. He holds a B.S. from Carnegie-Mellon University;and an M.S. from the University of Washington.;Before coming to Washington, he was a Consulting Engineer with;Digital Equipment Corporation, where his work spanned the range;from operating systems to architectures for distributed systems;and workstations. Hank is a Fellow of the;Association for Computing Machinery;and recipient of a;Fulbright Research Scholar Award.;Eleven Master's students and nine Ph.D. students have survived;Levy's supervision; the Ph.D. students have;all escaped to academic positions or major research labs.;When not glued to his workstation, Hank can usually be;found skiing, biking, playing tennis, helping to lead the;department's infamous softball team (the;Smiling;Potatoes of Death), or sampling desserts at one of;Seattle's many dessert parlors.;Some Recent Publications;Reducing Network Latency Using Subpages in a Global Memory Environment.;H.A. Jamrozik, M.J. Feeley, G.M. Voelker, J. Evans II, A.R. Karlin, H.M. Levy, and M.K. Vernon. In;Proceedings of the Seventh ACM Conference on Architectural Support for Programming Languages and Operating Systems,;October 1996.;[postscript];;Implementing Global Memory Management in a Workstation Cluster.;Michael M. Feeley, William E. Morgan, Frederic H. Pighin, Anna R. Karlin,;Henry M. Levy, and Chandramohan A. Thekkath.;To appear in Proc. of the 15th ACM Symposium on Operating Systems Principles;, December 1995.;;Simultaneous Multithreading: Maximizing On-Chip Parallelism.;Dean Tullsen, Susan Eggers, and Henry Levy.;In. Proc. of the 22nd Annual International Symposium;on Computer Architecture, June 1995.;;Exploiting Choice: Instruction Fetch and Issue on an Implementable;Simultaneous Multithreading Processor. Dean Tullsen,;Susan Eggers, Joen Emer, Henry Levy, Jack Lo, and Rebecca Stamm. In Proc.;of the 23rd International Symposium on Computer Architecture,;May 1996.;;Sharing and Protection in a Single-Address-Space Operating System.;Jeffrey S. Chase, Henry M. Levy, Michael J. Feeley, and Edward;D. Lazowska. ACM Transactions on Computer Systems, 12(4),;November 1994.;;Integrating Coherency and Recoverability in Distributed Systems.;Michael J. Feeley, Jeffrey S. Chase, Vivek R. Narasayya,;and Henry M. Levy. In Proc. of the First Symposium on;Operating Systems Design and Implementation, November 1994.;;Hardware and Software Support for Efficient Exception Handling.;C. Thekkath and H. Levy. Proc. of the 6th Int. Conf. on Arch.;Support for Prog. Languages and Operating Systems (ASPLOS),;October 1994.;;Separating Data and Control Transfer in Distributed Operating Systems. C. Thekkath, H. Levy, and E. Lazowska. Proc.;of the 6th Int. Conf. on Arch. Support for Prog.;Languages and Operating Systems (ASPLOS), October 1994.;levy@cs.washington.edu;"
"The OPAL Operating System Project;Opal;;The Opal project is exploring a new operating system structure, tuned;to the needs of complex applications, such as CAD/CAM, where a number;of cooperating programs manipulate a large shared persistent database;of objects. In Opal, all code and data exists with in a single, huge,;shared address space. The single address space enhances sharing and;cooperation, because addresses have a unique (for all time);interpretation. Thus, pointer-based data structures can be directly;communicated and shared between programs at any time, and can be;stored directly on secondary storage without the need for translation.;This structure is simplified by the availability of a large address;space, such as those provided by the DEC Alpha, MIPS R4000,;HP/PA-RISC, and IBM RS6000.;Protection in Opal is independent of the single address space;;each Opal thread executes within a protection domain;that defines which virtual pages it has the right to access.;The rights to access a page can be easily transmitted from one;process to another. The result is a much more flexible protection;structure, permitting different (and dynamically changing);protection options depending on the trust relationship;between cooperating parties. We believe that this organization can;improve both the structure and performance of complex, cooperating;applications.;An Opal prototype has been built for the DEC Alpha platform on top of;the Mach operating system.;Information Sources;List of Opal-related papers.;Faculty Members; Hank Levy; Ed Lazowska; Jeff Chase (Duke University);Current Graduate Students; Mike Feeley; Ashutosh Tiwary; Vivek Narasayya; Dylan McNamee;Related Information; Single;address space mailing list archive.;"
"Gus Lopez;Gus Lopez;lopez@cs.washington.edu;School:; 427 Sieg Hall;Department of Computer Science & Engineering,;University of Washington; Box 352350;Seattle, WA 98195-2350 USA; +1 206 543 5118;Home:; +1 206 522 4914;Fax:; +1 206 543 2969;I'm a PhD student at the University of Washington doing my dissertation;research on the design and implementation of constraint imperative (object-oriented);languages.;My curriculum vita.;Publications;Gus Lopez, Bjorn Freeman-Benson, and Alan Borning.;Kaleidoscope: A constraint imperative programming language.;In Brian Mayoh, Enn Tougu, and Jann Penjam, editors, Constraint;Programming. Springer-Verlag, 1993. NATO Advanced Study Institute;Series, Series F: Computer and System Sciences. Also published;as UW CSE Technical Report 93-09-04.;Gus Lopez, Bjorn Freeman-Benson, and Alan Borning.;Constraints and object identity. In;Proceedings of the 1994 European Conference on Object-Oriented Programming,;Bologna, Italy, July 1994.;Gus Lopez, Bjorn Freeman-Benson, and Alan Borning.;Implementing constraint imperative programming languages: the Kaleidoscope'93;virtual machine. In;Proceedings of the 1994 ACM Conference on Object-Oriented Programming;Systems, Languages, and Applications,;Portland, Oregon, October 1994.;OOPSLA'96 Tutorials;I'm also Tutorials Chair for the upcoming; OOPSLA'96 conference;in San Jose, California. The top people in object-oriented technologies and;software development will meet at, speak at, and run the OOPSLA'96 conference.;OOPSLA is well-known for the breadth, depth, and high quality of its;extensive tutorial program.;In previous years, OOPSLA tutorials;have covered all aspects of object-oriented technology from introductory;surveys to industrial software engineering practices and leading-edge academic;research topics. In response to requests from our past attendees, we;especially encourage proposals on engineering issues and advanced topics.;Anyone considering submitting a proposal for a tutorial should request;guidelines on tutorial submissions from the Tutorials Chair or via the;OOPSLA'96 Electronic Hotline. Electronic mail submissions of proposals;are encouraged and will be enthusiastically accepted. Tutorial proposals;without email addresses will not be accepted. Tutorial proposals are due;1 MARCH 1996, notification of acceptance will be about 1 MAY 1996, with;camera-ready notes due 9 AUGUST 1996.;Interesting links; Constraints; OOPSLA'96 Tutorials; Pam Green; Directions to Jimi Hendrix's grave; Star Wars Collectors Archive;"
"Omid's Home Page; Omid Madani; madani@cs.washington.edu;Computer Science & Engineering Department,;University of Washington, Box 352350,;Seattle, WA 98195-2350;;Chateau; Suite 109B;Hello to all the curious browsers. Welcome.;I am a fourth year graduate student at the UW CS department. I enjoy;theory the most, but I also like to keep in touch with other areas;including AI and graphics. More on my life and work: academics.; You may want to look at Islamic;Architecture in Isfahan (a 1995 GNN Best of the Net nominee),;one of the cities in my home country of Iran.;See ya!;;"
"Mike Perkowitz's Page; Mike Perkowitz;Newsflash:;Mike goes blond!;Areas:;research,;academia,;music,;creativity,;random;Favorites:;sheba,;voyeur,;written,;grooveneedle,;espresso;Resume;Mike Perkowitz (map@cs.washington.edu).;"
"Marc Langheinrich's Homepage;Marc Langheinrich's Homepage;Marc Langheinrich;UniversitÃ¤t Bielefeld University of Washington;Technische FakultÃ¤t Department of Computer Science;Email: imlanghe@techfak.uni-bielefeld.de Email: marclang@cs.washington.edu;About myself;I spent my last year at the Department of Computer Science here at the;University of Washington as a Visiting Graduate Student under the;Fulbright Program. Check out the following links for in-depth;information about me:; Resume; Projects; Short bio;Postal Address;As of September 5th, I will be back in Germany, finishing my Masters;at the University of Bielefeld. Please contact me at my German address.;HomeSchool;GermanyRingstraÃe 13;63477 Maintal;Phone:(+49) 0 6181 - 431747;Fax: (+49) 0 6181 - 48013;Paulusplatz 10;33602 Bielefeld;Phone:(+49) 0 521 - 171324;USA(until 8/96)5210 Woodlawn Ave. N.;Seattle, WA, 98103;Phone: (206) 632-6637;Sieg Hall, Rm 233;Phone: (206) 543-7798;(if your browser does not support tables, you can access;this data in a list format;Marc Langheinrich; The University of Washington, Department of Computer Science; Email: marclang@cs.washington.edu; WWW:;http://www.cs.washington.edu/homes/marclang/;"
"HOME;;;;Marla Baker marla@cs.washington.edu;;Chief Editor, Taz...;Department of Computer Science & Engineering;University of Washington; Box 352350;Seattle, WA 98195-2350 USA;;;;and his partner in crime, Bentley.;;Academic Interests;Graphical user interfaces, human-computer interaction, educational software,;Computer Supported Collaborative Learning (CSCL), computer graphics,;visualization techniques, and visual programming languages.;;Current Work;I am currently working with Steve;Tanimoto and;Lauren Bricker on the;CoImage project. We have devleoped some collaborative educational;activities in order to explore the use of cooperatively contolled objects.;The goal of my work is to investigate different ways that multiple users can;simultaneously share and manipulate a given object, and ways of assessing;their interactions.;I also work part-time at Ark Interface, a Packard Bell Company.;My Resume;;Publications;Baker, Marla J., and Stephen G. Eick, ""Space-Filling Software Visualization,""; The Journal of Visual Languages and Computing, June 1995, pp. 119-133.;Burnett, M., M. Baker, C. Bohus, P. Carlson, P. van Zee, and S. Yang,; ""Scaling Up Visual Programming Languages,"" IEEE Computer Special; Issue on Visual Programming, March 1995, pp. 45-54.;Burnett, Margaret M., and Marla J. Baker, ""A Classification System for; Visual Programming Languages,"" The Journal of Visual Languages and; Computing, September 1994, pp. 287-300.;Baker, Marla J., and Stephen G. Eick, ""A Visualization Tool for Large Software; Systems,"" Proceedings of The International Conference on Software; Engineering, Sorento, Italy, May 16-21, 1994.;Baker, Marla J., and Stephen G. Eick (Baker-1, Eick-11), ""Method And; Apparatus for Displaying Hierarchical Information of a Large Software; System,"" Patent application submitted October 22, 1993.;;Tutorial: Geometric Transformations on Images in the METIP programming environment.;Check out the web page for my office, Sieg 431.;Marla Baker (marla@cs.washington.edu);"
"Matthai Philipose's home page; Matthai Philipose;I'm working on the Dynamic Compilation Project. The dynamic compiler;is a beast that generates/optimizes code at runtime. In the short;term, I'm interested in figuring out how to produce good code;dynamically (i.e. at runtime) for modern processor architectures. On the applications side, I think interpreter-based;systems with real-time constraints, like the Hot Java web browser, can;benefit from selective runtime compilation. I'd like to wire up such a;system to a runtime compiler and see how it goes. I'm working with;Professors Susan Eggers;and Craig Chambers.;Work;Computer Science & Engineering Department;University of Washington;Box 352350;Seattle, WA 98195-2350;phone: (206) 616-1854;fax: (206) 543-2969;Home;4128 12th Ave NE;Apt 101;Seattle WA 98105-6334;USA;(206) 632-7472;Publications:;J. Auslander, M. Philipose, C. Chambers, S.J. Eggers and B.N. Bershad,;Fast,;Effective Dynamic Compilation, Conference on;Programming Language Design and Implementation, (May 1996).;C. Chambers, S.J. Eggers, J. Auslander, M. Philipose, M. Mock and;P. Pardyak,;Automatic;Dynamic Compilation Support for Event Dispatching in Extensible Systems,; Workshop on Compiler Support for Systems Software, (February;1996).;My bookmarks: stuff I use or play with frequently;Miscellaneous links: stuff of local importance;From the past...; Abu;Why was this page black ? Blue ribbon campaign;matthai@cs.washington.edu;"
"Neil McKenzie's Menu of Fine Dining; @;;Index to this web page; How to contact me; Future projects; Current projects; Past projects; Publication list; Personal information; Fun and games;;Contact information; Neil R. McKenzie; Mitsubishi Electric Research Laboratories; 201 Broadway, 8th floor; Cambridge, MA 02139; Phone: (617) 621-7531; Fax: (617) 621-7550; E-mail: mckenzie@merl.com;;Current projects;Gonna get my PhD, I'm a teenage lobotomy. -- The Ramones;I am living on the East Coast, about 3000 miles east of Seattle, and;working for MERL as noted above. I am currently involved with a project;concerning real-time volume rendering of medical data.;In my copious free time as an expatriate graduate student,;I am working on;chaotic routing;with faculty advisors; Carl Ebeling and; Larry Snyder.;Chaotic routing is a packet routing algorithm for mesh and torus;networks. My dissertation is on the design and implementation of the;Cranium message-passing interface that is compatible;with a network using chaotic routing.;;Past projects;I was a teaching assistant for;CSE 142 in Summer 1994.;I designed and implemented a chip tester called the; MacTester.;I was the maintainer for Carl's netlist graph isomorphism tool called;Gemini. In industry-speak it is known;as an LVS (Layout Vs. Schematic) tool. Gemini is available by FTP;;if you are interested, please send e-mail to Larry McMurchie;(larry@cs.washington.edu).;;Publications; Cranium: an Interface for Message Passing on Adaptive Packet;Routing Networks.;Proceedings of Parallel Computer Routing and;Communication Workshop, Seattle WA, May 1994.; Link to;MacTester home page; The Gemini User's Guide.;Last update: March 15, 1994.;; Personal information;;Angel and I married in 1991.;Here is a; picture of our house in Arlington, Massachusetts.;Before heading to the East Coast, we used to live;in the fashionable Seattle neighborhood of;Ballard.;Here is Angel's Creative Page,;which contains some examples of her computer artwork;created using Adobe Photoshop.;I owned;this car for 11 years. Now only;the memories remain.;I won a;T-shirt by correctly;guessing the answer to;Riddle du Jour on October 7, 1995.;This is the label that is placed on jars of; McKenzie Country Farm Honey produced by my;uncle Bob McKenzie in Edmonton, Alberta, Canada.;; For your amusement;Neil's hot links;Chairman;Ed's;hot links;Norm Gregory's bookmarks;(halcyon.com);Eugene Spafford's hot links (Purdue);Randy Pausch's;hot links (Virginia);Dan Wallach's;cool links (Princeton);Neil McKenzie;mckenzie@cs.washington.edu;Last update: July 27, 1996;"
"Marc E. Fiuczynski's Home Page; Marc E. Fiuczynski's Home Page; Marc E. Fiuczynski;mef@cs.washington.edu;Computer Science & Engineering Department,;University of Washington, FR-35,;Seattle, WA 98195 USA;;Background;I'm a graduate student at the University of Washington in the Department of Computer Science and Engineering. I grew;up in Germany (near Dï¿½sseldorf), and spent a few years in High;School in Princeton, NJ. I received a B.A. in Computer Science from;Rutgers University in 1992 and spent several summers at AT&T Bell Labs and the MITRE Corporation working on a range of;projects. I'm the sole proprietor of MEF Systems, a company;that I created in December 1993 to sell a distributed, fault tolerant,;IP network based telephone system that I built from scratch on a set;of VME chasis with 680x0 processors, using UniVoice telephone interface cards;and the VxWorks operating system.;Most of my time I spend hacking on SPIN, which is;a safe, adaptable and extensible operating system.;My primary contribution to SPIN is An Extensible Protocol Architecture for;Application-Specific Networking. Applications achieve compelling;performance improvements using our new structure, when compared to;similar applications running on DEC's commercial OSF/1 V3.2 platform.;For a demonstration of this work as it services HTTP requests contact;http://www-spin.cs.washington.edu.;Recent reports and papers; An Extensible Protocol Architecture for;Application-Specific Networking; A design and implementation and performance paper. Describes an;extensible protocol architecture that allows anyone to customize an;in-kernel protocol graph, which enables applications achieves better;performance compared to similar applications running on conventional;operating systems.;For a demonstration of this work as it services HTTP requests contact;http://www-spin.cs.washington.edu.;Appeared in the Proceedings of the 1996 Winter USENIX Technical;Conference; Extensibility,;Safety and Performance in the SPIN Operating System; A design, implementation and performance paper.; Appeared in the Proceedings of the Fifteenth ACM Symposium on Operating Systems Principles.; Language Support for Extensible Operating Systems; We've been pretty happy with M3, but we've had to deal with a few shortcomings in;order to use the language in a safe extensible operating system. This paper describes;how we've addressed those shortcomings.; Safe Dynamic Linking in an Extensible Operating System; Describes the dynamic linker we use to load code into the kernel. Key point is;the ability to create and manage linkable namespaces that describe interfaces and;collections of interfaces.; Protection is a Software Issue; A position paper comparing software and hardware protection mechanisms.; Proceedings of the Fifth IEEE Workshop on Hot Topics in Operating Systems.; Region Analysis: A Parallel Elimination Method for Data Flow Analysis; In IEEE 1995 Transactions on Software Engineering.;mef@cs.washington.edu;"
"Melanie Fulgham;Computer Science & Engineering Department,;University of Washington, FR-35,;Seattle, WA 98195 USA;I'm an a.b.d. graduate student at the University of Washington.;Research;My primary research interest is network routing both in multicomputer;and distributed networks.;My advisor is;Larry Snyder.;Here's a picture of Larry;hard at work.;Chaos; Chaos routing project -- the Chaos router is a deadlock-free,; probabilistically livelock-free, non-minimal,; fully adaptive router.;Triplex routing; The first non-minimal fully adaptive wormhole algorithm for tori; that uses deadlock-prevention to achieve deadlock-freedom;Simulation; Simulation of new and existing routing algorithms to learn; the strengths and weaknesses of various classes; of routing algorithms; e.g. non-minimal versus minimal; routing algorithms.;Routing methods and models; Development of new routing models to help predict; and compare the performance of new routers; in real parallel machines.;Deflection routing; Upper and lower bounds for practical (e.g. does not require; sorting) deflection routing; algorithms on the 2D mesh topology.;; mel@cs.washington.edu; Last modified: Wed Apr 24 17:12:00 PDT 1996;"
"Michael Ernst's home page;Michael Ernst;I am a graduate student in the University of Washington computer science department.;Previously, I have been a lecturer in the Rice;University computer science;department, a researcher in the Program;Analysis Group at Microsoft Research,;and a graduate student at the MIT Laboratory for Computer Science in the MIT EECS Department.;These WWW pages are not frequently updated.;My technical interests include:; compilation: static analysis, slicing,; debugging optimized code, serialization of parallel programs; I was program; chair for IR '95, the intermediate representation; workshop colocated with POPL; '95; intellectual property, particularly in computer; programs; other areas including game theory,; cryptography, philosophy, and denotational semantics;I maintain a list of resources;for conference and workshop organizers.;Occasionally I manage to slip away from work and carry on a real life.;Here are some links of possible;interest (including pages I maintain).;Michael Ernst;<mernst@cs.washington.edu&gt;"
"Markus Mock's Home Page; Markus Mock;mock@cs.washington.edu;Computer Science & Engineering Department,;University of Washington, FR-35,;Seattle, WA 98195 USA;;Welcome to Markus' home page.;; About myself;I moved from Karlsruhe, Germany;to Seattle in fall 94. For those interested in geography, Karlsruhe is;located in the southwest of Germany, in the state of Baden-WÃ¼rttemberg. I grew up in another;part of that state, in the district of; Biberach in Upper Swabia (Oberschwaben).;Before coming to the UW I studied Computer Science at the University of Karlsruhe from which;I obtained a ""Diplom"" (M.S.) in Computer Science in 1992.;I also spent one year at UMass as a Fulbright grantee.;My main research interests are parallel and distributed computing,;object-oriented systems and compilers. Currently I am working on; dynamic compilation.;Non-CS interests include Spanish and Latin American Culture,;travel , e.g. to;good books, e.g.;The Labyrinth of Solitude , chess;non-mainstream movies, eg Die;Angst des Torwarts beim Elfmeter (do you know;Handke?) and salsa or merengue dancing with;And, if there's still time left, I check out what else to do in Seattle.;More to come..;Publications;Separate List; Some links to other interesting stuff; Current Chess Event: Chess Olympiad Yerewan;Colloquia; OOPSLA 96 Volunteers Page; Mossy Bits, CSE Grad Journal;A link to the CSE590K home page; A link to the CSE543 Home Page;A link to the CSE590BI home page;A link to the CSE590S home page;Other CSE Courses;Other graduate students;Images of UW;Department of Electrical Engineering;You wouldn't expect, but they have a Red Square here (live view); Metacrawler Searching; Altavista Searching; Who? Where?; Deutsche Welle on RealAudio, live!;CS Stuff; Other cool links;And a quote: Consider the lilies of the field, how they grow:;they toil not, neither do they;spin; and yet I say unto you, that even Solomon in all his glory;was not arrayed like one of these. Matthew 6:28;This page has been accessed;;times since 3/28/96.;Last updated Tue Sep 17 11:34:14 PDT 1996;mock@cs.washington.edu;"
301 Moved Permanently;Moved Permanently;The document has moved here.;
"Vivek Narasayya: Home Page;Vivek R. Narasayya;nara@cs.washington.edu;Computer Science & Engineering Department,;University of Washington, FR-35,;Seattle, WA 98195 USA;Personal Information;Research Interests;Papers;"
"Himanshu Nautiyal's home page;Himanshu Nautiyal;This page is under heavy construction!;Himanshu Nautiyal;Dept of Computer Science & Engineering;Mail Stop 352350;University of Washington;Seattle, WA 98105;Office : 428 Sieg;Office phone: (206) 685-2723;The courses that I am taking in the autumn quarter:; CSE 567: Principles of Digital Systems Design; CSE 573: Artificial Intelligence I;finger nautiyal@cs.washington.edu;God's gifts to personkind; Douglas Adams; Terry Pratchett; Pelham Grenvile Wodehouse;The order is alphabetical in last names, no other is implied!;My favorite links (not all in place yet); All India Internet Radio; Search engines; India; Himanshu Nautiyal, the name; Friends; IIT Delhi, where I finished my B.Tech in 1995.; Astronomy; Skating; Computer Science; Aviation; Travel; Numismatics sounds so much more profound than ""coin collecting""; Cooking; Internet; Movies;"
"The Labyrinth of Mediocrity; w e l c o m e; to;; the; f a b u l o u s;``;Â·Â·Â· bemoaning hype with skeptical cynicism since 1994 Â·Â·Â·; ''; Research:; I'm currently working on the automatic;construction of wrappers for information resources; I'm also;interested in several other areas of artificial intelligence and;cognitive science.; Here are the papers with which I've been;involved.; I have some stuff available by anonymous FTP.; Here are some services I provides to the; ;Glbal; ;Infrmatin; ;Sperhighway:; A preliminary version of the Web Diverse-o-Meter is available.; Here's pictures of me and my hand shortly after surgery.; In need of a random number?; It's always handy to know the date and time or; day of the week.; My favorite color is now available on line!; If you get lost, you can easily return to this page.; 666, Ronald Wilson Reagan, etc.; Need the temperature?; Looking here with a Javascript-enabled browser; will automatically send me mail.; Great Republicans tell it like it is.;Miscellany:; Need to contact me?; My Web bookmarks.;Technology and society:; Aware of the bitter irony involved, I've nonetheless made;available Wendell Berry's guidelines for what constitutes;good technology.; A few of my comments about the WWW.;Nicholas Kushmerick,;UW;CS&E,;Seattle,;USA.;"
301 Moved Permanently;Moved Permanently;The document has moved here.;
"Wayne Ohlrich; Wayne Ohlrich;ohlrich@cs.washington.edu;Department of Computer Science & Engineering;University of Washington,;Box 352350;Seattle, WA 98195-2350;Office:; C110 Guggenheim Annex,;; ""The Chateau."";;; Publications and Research; Currently I am working with; Nancy Leveson; on model checking and automatic test generation from; specifications. In my spare time I have been working with; Brian Bershad,; Anna Karlin and; Ted Romer; doing memory performance analysis on the STD project (locally known as the; Severe TLB Damage project). Our group's paper will make its debut; at ISCA in Italy this summer.;;; Safety Research Home Page (Leveson).;; Memory Sytems Home Page;;ISCA `95.; T. Romer, W. Ohlrich, B. Bershad, A. Karlin:;Reducing TLB and Memory Overhead Using Online Superpage Promotion,;University Class information:;; UW Course Web;;; Personal Interests;; Just Fun and Games (Wayne's World of Wonder...).;;; The Information page; contains all sorts of useful links.;; The Seattle information; home page.;; The Investment page; contains investment information.;; Some Research; information that I have found useful.;;Page created October 1, 1994.; Last modified March 23, 1995.;"
"Ori Gershony; Ori Gershony;Ori Gershony (ori@cs.washington.edu);Graduate Student;Computer Science and Engineering;Department;University of Washington;Office: 233 Sieg; (206) 543-7798;Home: 4144 11th Ave. N.E. #10; Seattle, WA 98105; (206) 545-7586;Hi,;I'm a second year graduate student at the University of;Washington.;Before moving to Seattle, I lived in California for seven years: four;years at Berkeley and three years in Lancaster (northeast of Los Angeles).;I am originally from Israel, where I lived at Haifa, Bat-Yam and Holon.;For fun I like to practice Tae Kwon Do, play basketball, and go hiking.;This quarter I'm taking one class, a whole bunch of seminars, and am;TAing;CSE378 -- Computer Architecture. You can usually find me at my office;(233 Sieg) when I'm not in class. My office hours for CSE378 are;Monday 1:30-2:20 and Wednesday 3:30-4:20.;Potential employers are welcome to look at my; resume .;Here are a few;pictures I took last summer. Click; here to;see a cool t-shirt design that I made over the summer with a 3D graphics;program called Virtual Reality.;A few interesting links:; CNN;;Time Daily News Summary; New York Times; Riderlink -- Seattle;transportation options; Information about Israel; Computer Science and; Mathematics departments at the;University of California at Berkeley;Ori Gershony (;;ori@cs.washington.edu); accesses since 16 August 1996.;"
"Ross Ortega;Ross Ortega (the one wearing jeans);ortega@cs.washington.edu;Department of Computer Science & Engineering,;University of Washington, Box 352350,;Seattle, WA 98195 USA; ""If we knew what it was we were doing,;it would not be called research, would it?"" -- Albert Einstein;Welcome to my home page;After going to school and working in Boston for 7 years, I decided;to head west (really northwest). I came to UW in the fall of 1990 and will;be leaving sometime in 199x according to my advisor Gaetano Borriello.;Officially I have been working on the;Chinook project,;a CAD tool for real-time embedded controller systems.;Unofficially I have been brewing beer, learning to hack my Mac,;and trying to teach my German shepherd, Tequila, how to behave himself.;Professional section;;Chinook Project; My;resume/cv (128K .ps file); Education;;Experience;;Publications and Papers; Here are puppy pictures of Tequila;Tequila (color);Tequila2 (color);I am the office rep for Sieg 431;Check out the web page for 431; Links that I find interesting; Last updated;Thu Aug 1 17:48:44 PDT 1996;"
"Untitled Document (in B-flat Morris Minor);Don Pardo;Department of Computer Science; & Engineering;University of Washington;Box 352350;Seattle, Washington;98195;USA;pardo@cs.washington.edu;Note: if you show a blue ribbon;,;such as;<IMG;SRC=""http://www.eff.org/pub/Graphics/Icons/BlueRibbon/rib_trn_plain_sm.gif"" ALT="""">,;it is a way of showing quiet opposition to the free speech;prohibition in the U.S. National telecommunications bill.;(lIkewise, white letters on a black background.);Beth: ``Everybody needs a Pardo around sometimes.'';Pardo: ``Sometimes?'';Beth: ``There's only one, so we have to share him.'';Academic;Some papers;I've worked on or find particularly interesting.;Runtime Code Generation;(RTCG).;Instruction-set simulation and tracing tools.;UW home pages on;computer architecture;and;compilers.;Quick links to some other;people working with computers.;Classes.;UW thesis style;Non-Academic;Featured Items; Featured item of the month.; Weak Site of the Week; (NOW: doesn't blink anymore!);Regular Items;Bicycles;Businesses;Computers;Food;Humor;I'm famous! (Things related to me.);Legal and Ethical Weirdness;Linux Journal;Music;Goofy Politics;Science;; Thinking; (and; more,; and; yet more,; though unrelated stuff, about thinking).; Transportation;; Seattle movie listings.; And now -- The Seattle Film Festival!; (Dante sez: search it!); A truly gross story about; trepanation.; No privacy on the Web; -- sites may be logging your e-mail address; (or;; worse, taking data from your disks!); every time you; use them (consider; this).; Weather courtesey of MIT,; and; Seattle; in particular.; Also, weather courtesey of ?? (Newhouse Newspapers?).; Also, weather; courtesy of USA Yesterday; WWW stuff;pardo@cs.washington.edu;"
"Paul Franklin's Home Page;Paul Franklin's Home Page;I'm currently a graduate student at Univ. of Washington, in;the Department of Computer Science (officially CSE). My;office is 431 Sieg. I'm working with the RaPiD Project.;I used to say that I was a first-year student, but during the;summer after my second year, someone expressed concern about;this characterization.;Where am I? I'm usually somewhere in North Seattle, where I;live and go to school.;Yet another picture and one more (the best of the lot). One;of these days, I'll get around to scanning in some better ones.;A Norwegian poem I like;A collection of fortunes received by me & friends at local;Chinese restaurants.;Mundane Stuff;I hope some folks might find this stuff useful.;My hotlinks pages;Stuff I maintain;My schedule (if I've remembered to update it);Contacting me;I love to travel (but I don't necessarily tell everyone when I;do);Hiring me;Where did I come from?;I got my high-school diploma from Live Oak High School in;Morgan Hill, CA, where I was taught Prolog for the first time.;I graduated in Computer Science and Engineering from;UC Davis, where I was taught Prolog for the second time. (And;yes, I was taught Prolog once more at UW. I'm just glad I;didn't use it during my year at the University of Bergen.) I;also did research for a professor in the Electrical and;Computer Engineering department.;Fun Stuff;While I was at UC Davis, my partners in various CS-related;activities tended to be Matt, Chris, and James. (We even;got together recently, using Chris's marriage to Joanne as an;excuse; Chris's brother also made it;in the photo.);Throughout my undergraduate years, I kept biking more and more,;but never very far (Davis isn't that big, and it's flat).;During my year as an exchange student to the University of;Bergen, I biked hillier and longer routes, so when I returned;to Davis, I took up rollerblading, since biking around town was;now too easy.;My biking dropped off during the year I worked at Hewlett;Packard, but it returned with a vengeance when I moved to;Seattle. I've done the annual Seattle-to-Portland bike ride in;two days; I may do it in one some year. But that's only in;season (March/April-June). The rest of the year, I just;commute by bike and do lots of dancing, particularly Lindy;Hop.;Did you know that every HTML document should have a header line;that looks something like this:; <!DOCTYPE HTML PUBLIC ""-//IETF//DTD HTML//EN//2.0"">;"
"FrÃ©dÃ©ric Pighin;pighin@cs.washington.edu;Computer Science & Engineering Department,;University of Washington, FR-35,;Seattle, WA 98195 USA;; Clicking on the above picture should provide you a sample of my charming French accent. And here you'll get a more accurate picture of me.; Salut,;I'm a graduate student from France and I'm trying to survive to the graduate program in Computer Science and to the Northwest. My hometown is Nimes, which is well known for its remains of the Roman Empire (spurs of ancient yet glorious times) and is the driest city in France. I've spent my undergraduate studies in Paris (Universit&eacute Paris VI;and Institut National des TÃ©lÃ©communications ), which is a wonderful city if you are a tourist.;This quarter I'm TAing CSE 457, taught by Anna Karlin.;I'm one of the guys in c112, where I can be found much too often.;Hi Dani, here is my quals report.;As for the rest, I like British movies, the Monty Python, swimming, Nick Cave, Corto Maltese (an Italian comics), cats, Paris, Berlin, Venise, the Simpsons (2.7 M mpeg) .. and the rain when it's a surprise.;I like traditionnal french marine songs and try to collect them.;Otherwise, I'm working in graphics under Anna Karlin's supervision, although I was formerly studying system;here and got my name on a paper:;Implementing Global Memory Management in a Workstation Cluster.;Michael J. Feeley, William E. Morgan, Frederic H. Pighin, Anna R. Karlin,;Henry M. Levy, and Chandramohan A. Thekkath. In Proceedings of the;15th ACM Symposium on Operating Systems Principles, December;1995.;[postscript]; New: Live Action !;Here is a breath-taking picture of c112 door (refreshed every two minutes). And if you are very lucky you might even have a look at Darren or Juan, .. note that it might be dark here.;More live action with a picture of UW's Red Square (refreshed every five minutes), .. note that it might rain there.;"
"Ruth Anderson's Home Page; Ruth Anderson;rea@cs.washington.edu;;Computer Science & Engineering Department,;University of Washington, Box 352350,;Seattle, WA 98195-2350 USA;; WXYC 89.3; maps!; my brother;"
"HOME; Home of Josh;415;548;CS Home Page;Computer Science & Engineering Department,;University of Washington, Box 352350,;Seattle, WA 98195 USA;redstone@cs.washington.edu;;Joshua Redstone (redstone@cs.washington.edu);"
"Rex M. Jakobovits' Home Page; Rex M. Jakobovits;rex@cs.washington.edu;Computer Science & Engineering Department,;University of Washington, FR-35,;Seattle, WA 98195 USA;I'm;getting my PhD;here at the Computer Science Department;of the University of;Washington, in the wonderful city of Seattle;. Is it always raining here? See for yourself, with this;up-to-date weather;report, or sneak a peek at this live image from a video camera;mounted outside. The camera is pointed at our beautiful Drumheller Fountain. On a clear day, you;can catch a glimpse of;Mt. Rainier in all its glory (but this is probably not a clear;day, so here's a nice color picture).;My Research; So what am I doing here?; I'm developing the Web-Based Repository Manager, which is a programming toolkit for building multi-media consoles.; I'm constructing an image database as part of a;Structural Information Framework For Brain Mapping.; We're building a knowledge base to support the Digital Anatomist, an on-line interactive atlas of the human body.; I implemented a Database;Environment for Vision Research.; I'm a local expert on persistent;programming languages.;;;Interests; So what else am I doing here?; I'm the proud creator of the UW Internet;Racquetball Ladder.; I've taught Advanced C Programming for the UW Extension; I wrote some perl scripts to manage a rotisserie;baseball league. The standings are updated daily with stats from;USA-Today.; I'm raising a happy family of african;cichlids.; I visit my home town Honolulu every chance I get, and camp out in the magical Kalalau valley .; I dig the movies; I gamble on the stock market.; I run a darn good;fantasy football team.;A Newslet would be here if you had Java;Family Links; My;dad, Leon James, a professor of Psychology at the University of Hawaii who;is writing a book on;traffic psychology and fostering a lively online polemic about;Emanuel Swedenborg.; My step-mom;Diane Nahl, a professor of Library & Information Sciences, who;provides this;great index of online libraries and databases.; My mom, Judy Jakobovits, a realtor in Hawaii.; My uncle, Eddy Jakobovits, running a web site for Bioscience professionals.; My bookmarks;If you have Java, click-drag on the words below to make your own poem...;"
"Ted Romer; Ted Romer;Department of Computer Science & Engineering;University of Washington; Box 352350;Seattle, WA 98195;Home: (206) 527-0988;Office: (206) 616-1849;Fax: (206) 543-2969;romer@cs.washington.edu;Office:;Chateau Sieg 110.;Research Interests;I've been doing research on operating system support;for;high performance memory systems;with really smart people like;Brian Bershad,;Brad Chen,;Alan Eustace,;Anna Karlin,;Dennis Lee,;Wayne Ohlrich, and;Wayne Wong.;Three recent papers on this subject:;Reducing TLB and Memory Overhead Using Online;Superpage Promotion.;Romer, Ohlrich, Karlin and Bershad. ISCA '95, pp. 176-187.;Dynamic Page Mapping Policies for Cache Conflict Resolution;on Standard Hardware.;Romer, Lee, Bershad, and Chen. OSDI '94, pp. 255-266.;Avoiding Conflict Misses Dynamically in Large Direct-Mapped;Caches.;Bershad, Lee, Romer, and Chen. ASPLOS VI, pp. 158-170.;In addition, some friends and I have been studying the performance of;interpreters. You can learn more from the;Project Rocky;home page. We also wrote a paper together:;The Structure and Performance of Interpreters .;Romer, Lee, Voelker, Wolman, Wong, Baer, Bershad, and Levy.;ASPLOS VII, to appear.;Abstract,;postscript.;My Bibliography.;590lobo Reading List;Random Stuff;A map to my house.;Computer scientists with x-rays of their limbs on the web:; Ted Romer's knee after;arthroscopic surgery.; Mark Hill's wrist.;My friend Dylan;said his hair couldn't be cut with a Flowbee. We said it could. Being;experimental scientists, we conducted an experiment. You can judge the;results yourself.;After attending ISCA '95, I travelled in Europe and took some;pictures.; romer, v. tr. To eat;someone else's food, accompanied by sincere rationalization. For;example, ""You romered my lunch!"" ""But I thought you'd left;the country and it would go bad if I didn't eat it!"" Origin unknown.;;Edward Tufte's tips on public speaking .;My father edits the American Journal of Physics.;"
"Memory Systems Research at the University of Washington;Memory Systems Research;Department of Computer Science & Engineering;University of Washington, FR-35;Seattle, WA 98195;Welcome to the home page for Memory Systems Research at UW CSE.;Description;Our research group is investigating techniques that use the operating;system to improve memory system performance. All of our work shares;the following features:; We rely a combination of simple hardware support and operating; system modifications to monitor the dynamic behavior of applications.; These monitoring mechanisms incur a small overhead at runtime, but the; information they collect can be used to identify sources of memory; system delays such as cache misses and TLB misses.; By identifying and resolving these bottlenecks, we not only pay for; the overhead of the monitoring mechanisms, but also significantly; improve overall system performance.;In our most recent project, we explored policies that monitor;application memory reference patterns in order to identify and resolve;TLB performance problems. Poor TLB performance results when the TLB;is too small to cover the current application's working set. Several;modern architectures support superpages: pages whose size is a;multiple of the system's base page size. On such systems TLB;performance can be improved by using larger pages, but at the cost of;wasted memory due to internal fragmentation.;We simulated several policies that adapt the page size dynamically to;different regions of an application's address space, constructing;superpages by copying the component pages to a contiguous region of;memory. We developed a policy that monitors TLB misses, and balances;the potential benefit of having a superpage (a reduction in future TLB;misses) against the cost of constructing the superpage (an in-memory;copy). By constructing superpages only when and where TLB miss;patterns warrant, this policy attains the TLB performance of large;pages without their internal fragmentation.;For more details on this project, see our paper; Reducing TLB and Memory Overhead Using Online Superpage Promotion; (ISCA '95, to appear).;We're looking for someone to implement these algorithms -- this would make;a good quals or masters project.;Project Description.;People;Faculty:; Brian Bershad (bershad@cs.washington.edu); Anna Karlin (karlin@cs.washington.edu);Current Students:; Dennis Lee (dlee@cs.washington.edu); Wayne Ohlrich (ohlrich@cs.washington.edu); Ted Romer (romer@cs.washington.edu); Wayne Wong (waynew@cs.washington.edu);Papers; Reducing TLB and Memory Overhead Using Online Superpage Promotion .; Romer, Ohlrich, Karlin, and Bershad. ISCA '95, to appear.; Dynamic Page Mapping Policies for Cache Conflict Resolution on; Standard Hardware .; Romer, Lee, Bershad, and Chen. OSDI , pp. 255-266.; Avoiding Conflict Misses Dynamically in Large Direct-Mapped Caches .; Bershad, Lee, Romer, and Chen. ASPLOS VI, pp. 158-170.; A Comparison of the Memory Performance of the MIPS R3000 and DEC; Alpha 21064. Wong. Ph. D. Quals Project Report, University of; Washington.; Instruction Cache Effects of Different Code Reordering Algorithms.; Lee. Ph. D. Quals Project Report, University of Washington.; Memory Systems Bibliography;Ted Romer (romer@cs.washington.edu);"
"Project Rocky: The Architectural Performance of Interpreted; Languages; Project Rocky: The Architectural Performance of Interpreted; Languages;Project Description; Interpreted languages have become increasingly popular over the last; several years, due in part to the demands for portability, safety,; and ease of use. This project examines the performance of interpreted; languages and environments from several perspectives: interpretation; strategy, implementation, and processor/architecture utilization.; As a basis for our study, we have collected a set of benchmarks and; microbenchmarks which are implemented in several interpreted; languages -- Perl, Tcl, Java, and MIPSI. Using various; instrumentation and tracing techniques, we evaluate the performance; characteristics of those benchmarks in order to gain insight into; the similarities and differences in these languages and their; execution environments.;People;Faculty:; Jean-Loup Baer (baer@cs.washington.edu); Brian Bershad (bershad@cs.washington.edu); Henry Levy (levy@cs.washington.edu);Students:; Dennis Lee (dlee@cs.washington.edu); Ted Romer (romer@cs.washington.edu); Geoff Voelker (voelker@cs.washington.edu); Alec Wolman (wolman@cs.washington.edu); Wayne Wong (waynew@cs.washington.edu);Papers;Romer, Lee, Voelker, Wolman, Wong, Baer, Bershad, and Levy,;The Structure and Performance of Interpreters, ASPLOS VII, to appear.;Abstract;postscript;Java measurements on x86;Java source files for benchmarks;Tools;To collect information on the performance of x86 applications, we've;been building a binary rewriting tool called Etch. Etch is not yet;publicly available, but you can read about it on the Etch;home page.;Internal Documentation;Project internal documentation (available only to people from UW CSE).;Last updated July 24, 1996.;romer@cs.washington.edu;"
"Richard Rogers' Home Page; Richard Rogers;rrogers@cs.washington.edu;Computer Science & Engineering Department;University of Washington, FR-35;Seattle, WA 98195 USA;Office: Chateau Sieg 104; Phone: (206) 616-1843;Lab: Intelligent Systems Laboratry; Phone: (206) 685-7629;Research:;I have developed system software for the Systolic Cellular Array Machine (SCAM), a massively parallel image processing computer. The software includes a compiler, basic image processing and morphology libraries, and a simulator. You can obtain the software and papers about SCAM here.;I currently work on document layout extraction at the Intelligent Systems Lab. I am also helping to produce a document groundtruth database for the optical character recognition community.; Science Camps:;I am the Director of Computer Facilities at the Northwest Center For Environmental Education. NCEE offers a summer science camp for students of all ages in Washington's beautiful San Juan Islands.;I also work with the Science Splash! program at Seattle University. Splash! is a year-long National Science Foundation funded science program for 8th grade minority girls in the Seattle area.;Other Interests:;Corn snakes (Jessica, Ana, and Squishy, in order of increasing length);KUOW, UW's National Public Radio station;I bake the best pecan pie in Seattle;Last Modified: 08:53pm , February 20, 1996;"
301 Moved Permanently;Moved Permanently;The document has moved here.;
301 Moved Permanently;Moved Permanently;The document has moved here.;
"Mike's Home Page;;Mike Salisbury;salisbur@cs.washington.edu;Computer Science & Engineering Department,;University of Washington,; Box 352350,;Seattle, WA 98195-2350 USA;Office:;Chateau Sieg 110.;My Life;History;School;Home;Friends;Vita;Cool stuff on the net;"
"Stefan Savage; Stefan Savage;savage@cs.washington.edu;Work:; Computer Science & Engineering Department,; University of Washington, FR-35,; Seattle, WA 98195 USA;Home:;4223 5th Ave NE;Seattle, WA 98105 USA;After sampling the rich post-industrial culture of modern Pittsburgh;for six years, I caught a ride with the 1993 Bershad migration and I'm;now a gradual student of the first rank here at UW. My strong;background in 19th and 20th century American History provides me with;a firm, yet irrelevant, platform from which to ""trash talk"" my peers:;""Any fool can see that de Tocqeuville's statement,;'[Americans] find it a tiresome inconvenience to exercise;political rights which distract them from industry' is quite similar to;current microprocessor architectural trends favoring the needs of;application code over operating systems"";I work with Brian Bershad;and the rest of the merry band on;an operating system project called SPIN.;Projects;SPIN;SPIN is an extensible operating system omnifemtokernel which;supports the dynamic adaptation of system interfaces and;implementations through direct application control, while still;maintaining system integrity and inter-application isolation.;Things in Writing;SPIN papers;; Extensibility, Safety and Performance in the SPIN; Operating System; in ""Proceedings of the 15th ACM Symposium on Operating System; Principles (SOSP-15)"", pp. 267-284, Copper Mountain, CO,; December 1995.;Slides from the talk.;; Language Support for Extensible Operating Systems; in ""Proceedings of the First Workshop on Compiler; Support for System Software (WCSSS)"", Tucson, AZ, Feb 1996.;; Writing an Operating System with Modula-3; in ""Proceedings of the First Workshop on Compiler; Support for System Software (WCSSS)"", Tucson, AZ, Feb 1996.;; Protection is a Software Issue; in ""Proceedings of the Fifth Workshop on Hot Topics in; Operating Systems (HotOS-V)"", pp. 62-65, Orcas Island,; WA, May 1995.;; Some Issues in the Design of an Extensible Operating System;in ""Proceedings of the First USENIX Symposium on Operating System; Design and Implementation (OSDI-1)"", p. 196, Monterey, CA,; November 1994. (panel abstract); A longer (unpublished) version of the above; paper.;;SPIN - An Extensible Microkernel for Application-specific; Operating System Services;in ""Proceedings of the Sixth SIGOPS European Workshop on; Matching Operating Systems to Application Needs"".;A version appeared in; Operating Systems Review, pp. 74-77,; January 1995, v 29, no 1.;;SPIN - An Extensible Microkernel for Application-specific; Operating System Services;University of Washington Tech Report UW-CSE-94-03-03, March 1994.;AFRAID paper;; AFRAID -- A Frequently Redundant Array of Independent Disks;in ""Proceedings of the 1996 Winter USENIX; Technical Conference"", pp. 27--39, San Diego, CA, January; 1996. (best student paper);;Slides from the talk.;Reservation papers;; Processor Capacity Reserves: Operating System Support for Multimedia; Applications; in ""Proceedings of the First IEEE International Conference; on Multimedia Computing and Systems"", Boston, MA, May 1994.;; Processor Capacity Reserves: An Abstraction for Managing Processor Usage; in ""Proceedings of the Fourth Workshop on Workstation; Operating Systems (WWOS-IV)"", pp. 129-134, Napa, CA, October; 1993.;; Processor Capacity Reserves for Multimedia Operating Systems;Carnegie-Mellon Tech Report CMU-CS-93-157, May 1993.;Ye Old Real-Time Mach paper;; Real-Time Mach Timers: Exporting Time to the User;in ""Proceedings of the Third USENIX Mach Symposium"",; pp. 111-118, Santa Fe, April 1993.;Slides from the talk.;Interests; Music; Hiking;This web is under construction...;"
"Sean D. Sandys; Sean David Sandys;sds@cs.washington.edu;Computer Science & Engineering Department;University of Washington; Box 352350;Seattle, WA 98195-2350 USA;Sean Sandys is a third year graduate student at the;University of Washington.;He graduated in 1994 from;Williams College;with a double major in;Computer Science and; Astrophysics. Currently, he is;trying to finish his;qualifying exams;. His interests include;Computational Astronomy,;Software;Safety and;Parallel Programming Languages.;He recently participated in a panel at the;CRA;Conference at Snowbird;entitled ""Retaining;and Mentoring Minority Students from Underrepresented Groups"". For those that are;interested, here is a description of the;Undergraduate Tutoring and Mentoring Program here at the University of Washington.;Within the department he is;co-editor of;Mossy Bits,;and one of the senators for;GPSS, the;graduate student;senate here at the University of Washington,;although it is common knowledge that he was appointed because of;his ability to bend the wills of men rather than for any literary;or political skills.;When he is not;working;he can be found;listening to Jimmy Buffett,;waxing philosophical about his glory days on;WUFO,;or (mis)quoting some of the finest minds;of our time. It is also rumored that he is interested in;brewing some cool refreshing;beers.;By the way, if you are looking for a internet search tool,;check out the;Metacrawler.;Sean David Sandys <sds@cs.washington.edu>;Last revised: July 23, 1996;"
"Richard Segal's Home Page;; ;Richard Segal;Department of Computer Science and Engineering;University of Washington;Box 352350;Seattle, WA 98195-2350;segal@cs.washington.edu; ; ;Personal; Biography.; Better half.; My family.; Pictures.;Research; Overview.; Brute.; Internet Softbot.; Publications.; Curriculum Vitae.;[postscript]; Amusements; Archery.; Bicycling.; Racquetball.; Skiing.; Softball.; ;"
"Stefan G. Berg;Stefan G. Berg; Work Home;427 Sieg Hall;University of Washington;Box 352350;Seattle, WA 98195-2350;U.S.A.;5212 University Way NE;Apt. 203;Seattle, WA 98105-3532;U.S.A.;Phone: +1 206 543 5118;Fax: +1 206 543 2969;Phone: +1 206 525 2147;Fax: +1 206 524 7725;Email; sgberg@cs.washington.edu;Contents; Address Information; About Me; Past Projects and Activities; Current Projects and Activities; Some Interesting Pages;; My Finger Information.; About Me:;Stefan was born in;Cologne ,;Germany in Spring of 1973. In 1989, he completed his Mittlere Reife (10th;grade) at the Schillergymnasium in Cologne before coming to the United States;to receive a high school diploma from Bloomington High School North (Indiana);in 1991. Stefan received his Bachelor of Science with honors and distinction;in the field of computer science from;Indiana University in 1994. At the moment;he is working towards a PhD at the;University of Washington with an expected completion date sometime this;century.;Past Projects and Activities:; CSE505; Project: Implementation of an SK Reduction Machine.; Teaching Assistant for; CSE471; .;; CSE548 Project: Comparison of Hardware and Software Solutions to; False Sharing.; Teaching Assistant for; CSE142; .; CSE521; Project: A Study of Linear-Time Sorting Algorithms.; Teaching Assistant for; CSE370; .;Current Projects and Activities:;; Quals Project: Comparison of Hardware and Software Solutions to; False Sharing.;Some Interesting Pages:; A few;; pictures about me and the people around me.; My rafting;; pictures .; My; bookmarks. Exciting!; The; Red Square at the University of Washington, this moment.; The;; weather in Seattle.;Print Yourself;Something crazy I did. I didn't even come up with this particular;solution myself, but the implementation was done by me. It's;all on one line and shouldn't contain a trailing carriage return;(384 bytes). Compiles without warning with gcc. If you run it,;this program will print it's exact source code. If you can do it;in fewer bytes in C, I'd like to see it!;v(c){putchar(c);}u(char*x){for(;*x;x++)if(*x-92)if(*x-34;)v(*x);else{v(92);v(34);}else{v(92);v(92);}v(92);v(48);};char x[]={37,115,0};main(){char*b=""v(c){putchar(c);}u(ch;ar*x){for(;*x;x++)if(*x-92)if(*x-34)v(*x);else{v(92);v(3;4);}else{v(92);v(92);}v(92);v(48);}char x[]={37,115,0};m;ain(){char*b=\""\0\"";printf(x,b);u(b);u(b+=148);printf(x,;b);}\0"";printf(x,b);u(b);u(b+=148);printf(x,b);};Stefan's resume is available in;postscript ,;dvi , and;TeX format.;"
"j ward shade;Greetings and salutations. I'm a third year grad student here;at u-dub;cse. Interactive rendering;of complex 3D scenes is currently my thing. If it is your thing too,;then follow the Projects link to the;Walkthru;project. There, among;lots of pictures and animations, you'll find the SIGGRAPH 96 paper;describing some recent work. ( As a shortcut, you can click on the;picture of the island in the lower left corner of this page.);There is lots of interesting work going on in many different aspects;of computer graphics here. The;Graphics and Imaging Laboratory is where most of it gets done.;; Contact Info,; Daily Schedule,; Travel Plans.;; Projects;; Publications;; Pictures;;;;;Hey! If this page looks scrunched, make your browser at least 750 pixels wide.;"
301 Moved Permanently;Moved Permanently;The document has moved here.;
"Shun-Tak A. Leung;Shun-Tak A. Leung;I am a Ph.D. student in the Department of Computer Science and;Engineering at University of;Washington. I am working with Prof. John;Zahorjan. Here are some pointers to my research.; Research summary; Publications; Curriculum vitae upon request; Shun-Tak A. Leung; Department of Computer Science & Engineering; University of Washington; Box 352350;Seattle, WA 98195-2350;Email: shuntak@cs.washington.edu; Fax: (206)543-2969;Last modified: January 8, 1995;"
"Welcome to Shuichi's Home Page!;Shuichi Koga (SKoga@CS.Washington.EDU);Graduate Student;Computer Science and Engineering;Department;University of Washington; Hi there! My name is Shuichi Koga (if you haven't noticed by;now). I've just started up graduate studies here at the University of;Washington. I haven't quite figured out what I'll be doing yet for my;quals (much less my dissertation!).; I graduated from the University;of Virginia in May 1995 with a degree in Mathematics. I was also;heavily involved with the asian studies, foreign relations, and;government departments (I was originally slated to also get a degree;in asian studies). I also was heavily involved with the User Interface Group;and the computer science;department working on a project called Alice.;Since you're here anyways, why don't you take a look at...; A picture of me at 2:00am (230K).; Here's a; smaller one (18K).; What Shuichi means; My Finger Info; My current schedule; Neat hypertext links; What I do a lot of: hunt and destroy; bugs.;Shuichi Koga (;;SKoga@CS.Washington.EDU);Last modified: Mon Jun 17 02:48:19 1996;"
"Soha Hassoun's Home Page; soha@cs.washington.edu; Soha Hassoun;It's my 6th year of graduate school at the University of Washington,;Computer Science and Engineering Dept. I am a circuit designer who;turned CAD developer. Currently, I am working on;architectural retiming;with Professor Carl;Ebeling .; Weekly schedule; Business?;Current;and previous research at UW.; Current cv; Education;;Experience;;Publications and a Patent; LIS and Chaos groups in the CSE dept. at UW.;Professional, and interesting CAD/VLSI sites and information.; Fun?; Little Deedee's Photo Gallery; Address:;Computer Science & Engineering Department,;University of Washington, Box 352350,;Seattle, WA 98195-2350 USA; Phone: 206 543-5143; FAX: 206 543-2969;"
"Sujay Parekh's Home Page; Sujay Parekh; Work;Department of Computer Science & Engineering,;Sieg Hall Chateau (a.k.a. Guggenheim Annex) 109A,;University of Washington, Box 352350,;Seattle, WA 98195 USA;(206) 616-1846; Home; 5745 28th Ave NE,;Seattle, WA 98105-5517;(206) 729-8515; This Quarter; CLASSES; CSE 590Q AI seminar; CSE 590S Systems seminar; FRENCH 110 French; RESEARCH; Simultaneous;Multithreading . In particular, O/S issues related to;multithreaded architectures.; The;Softbot project. I evaluated;Simon , a Softbot which employs a procedural search control;system to control its actions. My report .; The construction and design of a removable patio for conventional workspaces. (If you're interested in funding this project, please contact me!); SPORTS; SPUDS Soccer; Right now (sort of); My Bookmarks (Web pages I like to keep track of); My Interests; ACADEMIC:;AI/Cognitive Science, Distributed/Parallel Systems, Psychology, Philosophy; FOR FUN:;Tennis, Soccer, Sailing, Squash, Volleyball, Ballroom Dancing, Food; Been there; Cornell Computer Science; Oracle Corporation; Stottler-Henke Associates, Inc.; Done That; My resume; Random personal info; Favorite foods: Oondhiu, Mangoes, Phad Thai, Kung Pao Chicken; Favorite beverages: OJ, Screwdriver, Scotch, Long island Iced Tea; Favorite dances: Tango, Swing (East & West coast), Salsa; Favorite (rock) music: Dire Straits, Pink Floyd, Phil Collins/Genesis, Peter Gabriel, Tom Petty; sparekh@cs.washington.edu;"
"The Home Page of Sung-Eun Choi;WELCOME TO THE;HOME;PAGE OF;SUNG-;EUN;CHOI;;MY;SCHOOL;LIFE;My primary research interest is in compiling;parallel programming;languages. I am involved in the ZPL;Compiler Project at the University of Washington. Lately, I've been;spending most of my time thinking about optimized communication;generation using the ZPL architechture-independent communication;library, IRONMAN.;In addition, I am experimenting with simulating data parallel programs;on superscalar processors. The goal of this work is to improve node;performance on the coming generations of parallel machines. I've also;been seen hanging out with the Chaos;Router group. I did a bit of work on the simulator,;including a graphical front end for visualization. With that;experience, I am currently implementing another router simulator in;ZPL. Finally, I am also doing a little bit of astronomy.;This quarter, I am TAing CSE 451.;I enjoy watching movies,;but mostly in the comfort of my own home. I like to eat (oh yeah,;I've been a vegetarian since my;junior year in college) and drink (dinner would not be the same;without a good;wine.) As a result, I must exercise quite a bit. I play on two;soccer;teams: Cousin Scrubs (Co-Rec division 9A) and Cooper's (Co-Rec;division 2A). Last season, the Scrubs came in second place (9B) and;Cooper's won their division (4B). Unfortunately, I recently sacrified;my left knee for the game, and won't playing soccer or taking my usual;step aerobics;class. Instead, you may find me at the IMA trying to swim and at a weight training;class. Like all good people in this world, I try to read a few books, take in a;bit of;Shakespeare, watch public;television, and listen to classical;music.;MY;OTHER;LIFE;;; Sung-Eun Choi (sungeun@cs.washington.edu);Department of Computer Science & Engineering,;University of Washington,; Box 352350,;Seattle, WA 98195-2350 USA;"
"Thu Duc Nguyen;Thu Duc Nguyen;Department of Computer Science;& Engineering;University of Washington;Box 352350;Seattle, WA 98195-2350; thu@cs.washington.edu;;Work World; My research interests include operating systems, distributed and;parallel systems, networking, and security. Currently, with help from;my advisor, John;Zahorjan, I'm building system support for running soft real-time;applications (e.g., visualization) on partially idle workstations in;NOWs. Recently, I completed a study on how runtime measurements of;application characteristics can be used by a runtime system to;minimize application execution time in uniprogrammed multiprocessors;environments as well as by a system scheduler to make ""good"";global scheduling decisions in multiprogrammed multiprocessors;environments.;CV;Publications;;Fun World;Vietnamese;resources on the net;Cycling;playground;"
"Ashutosh Tiwary; Ashutosh Tiwary;;;tiwary@cs.washington.edu;Department of Computer Science & Engineering,;University of Washington, Box 352350,;Seattle, WA 98195-2350 USA;;I am a mostly-full-time fourth year graduate student. I work in the area of Single Address Space Operating Systems (Opal), Persistent Object Systems, Object Oriented Databases, Application Workload Measurement and Operating System Support for Databases. In the past, I have worked with CAD infrastructures, User Interfaces and Distributed Object Systems. In my spare time, I work in the Computer Science group at the Research and Technology Organization of Boeing Computer Services.; OOPSLA-95 Workshop on Building Large Distributed Software Systems Using Objects; OOPSLA-96 Workshop on Objects in Large Distributed and Persistent Software Systems;Projects;Opal;I am working on distribution in Opal. Opal is an operating systems project which addresses the issues and opportunities involved with creating a single, global address space, across multiple users and machines.;Jeff Chase is the primary architect of Opal. Hank Levy is the advisor working most closely with Opal and is also my advisor.; Application Workload Measurement;I am also work on measuring and characterizing the behavior of persistent object applications and some general techniques for doing this. See the paper below for some of my work in this area.; Distributed Object Systems;I have worked on several distributed object systems in my professional career. This;experience was the basis of; OOPSLA95 Workshop on Building Large Distributed Software Systems Using Objects that I co-organized. In 1996, we will follow this up by; OOPSLA96 Workshop on Objects in Large Distrbuted and Persistent Software Systems.; Publications; Using Virtual Addresses as Object References. J.Chase, H.Levy and A. Tiwary. In Proc. 2nd International Workshop on Object Orientation in Operating Systems, September 1992.; Exception Handling in a Parallel and Distributed Environment. A. Tiwary and H. Levy. In ECOOP Workshop on Exception Handling, July 1991.; Building Large Distributed Systems Using Objects. A. Tiwary, R.K. Raj, D.S. Lea, C.S. Bosch. In Addendum to the Proceedings of OOPSLA'95 (OOPS Messenger V6, #4), October 1995.; Evaluation of OO7 as a system and an application benchmark. A. Tiwary, V.R. Narasayya, H.M. Levy. In OOPSLA'95 Workshop on Object Database Behavior, Benchmarks and Performance, October 1995.;"
"Tessa Lau; Tessa Lau; Just another dead end on the information superhighway.;I'm a second-year;graduate student in Computer Science at the University of Washington.;My research interests include a mix of AI, UI, and all sorts of web-related;goodies. I'm currently working on Clio, a system for searching and;browsing one's personal web history. No, it's not available yet.;I'm not currently seeking gainful employment, but my;resume is online for the curious.;My kitty;I have the honor of sharing an apartment with;Gambit, a Siamese mix.;Cats are great.;More about me;More information about me can be found here. There;are some pictures of me;here, here, and here. There's a page on where to;find me. Apparently, I'm also;really interested in Scotland.;Classes;I'm still working on my quals, and this quarter I'm taking the last two of;eight classes to fulfill the breadth requirement.; CSE 567 : Digital Systems; CSE 573 : AI; CSE 590Q : AI seminar;Linux games;Everybody plays games. I maintain the Linux Game;Tome, which is committed to the advancement of Linux as a pretty cool;gaming platform.;There's also my first attempt at Java programming, a simple maze applet. See also Java for Linux.;What I do when I'm not sleeping;I've been known to frequent Seattle area bookstores.;I also knit and crochet.;Copyright (C) 1996;tlau@cs.washington.edu;"
"Martin Tompa;; Martin Tompa;Department of Computer Science and Engineering;University of Washington;Box 352350;Seattle, WA 98195-2350; phone: (206) 543-9263; receptionist: (206) 543-1695; fax: (206) 543-8331;; Lecture notes and articles;; Here I am; Computing the trajectory of Thelma &;Louise (273K); On a recent holiday on the moon (85K);; A few pearls among the wash of oysters;; Collaborative Surrealistic Art;;; Electronic Prophecy;; Art Building, across Pierce Lane, Carol Martin, Photographer;; Photo courtesy of the UW Health Sciences Center for Educational Resources,; who provide many; images; of the University of Washington.;; Martin Tompa; finger tompa@cs.washington.edu;"
"Tracy Kimbrel is being held prisoner!; Tracy Kimbrel is being held prisoner!;Tracy Kimbrel has been held prisoner at the University of Washington;since 1982 without charge or trial. He was moved for six years to;another Seattle area prison, where most of the inmates are forced to;manufacture airplanes. He escaped that institution, but was;recaptured and returned to the University of Washington. Help end his;plight! Rescue him from his imprisonment.;Here is a list of things he has done; (curriculum vitae);while imprisoned. Here are some more details and a statement of;what he promises to do for you; (history and goals);if you free him from his captors.;;Department of Computer Science & Engineering; University of Washington; Box 352350; Seattle, WA 98195-2350 USA; tracyk@cs.washington.edu;Here is what his captors force him to do:;;A Trace-driven Comparison of Algorithms for;Parallel Prefetching and Caching;Tracy Kimbrel, Andrew Tomkins, R. Hugo Patterson, Brian Bershad, Pei Cao,;Edward W. Felten, Garth A. Gibson, Anna R. Karlin, and Kai Li.;To appear in the 1996 ACM SIGOPS/USENIX Association Symposium on;Operating System Design and Implemenation.;;Near-optimal Parallel Prefetching and Caching;Tracy Kimbrel and Anna R. Karlin. To appear in the 1996 IEEE;Symposium on Foundations of Computer Science.;Longer version;here.;;Integrated Parallel Prefetching and Caching;(two-page extended abstract);Tracy Kimbrel, Pei Cao, Edward W. Felten, Anna R. Karlin, and Kai Li.;In Proceedings of the 1996 ACM SIGMETRICS Conference on Measurement;and Modeling of Computer Systems.;;A probabilistic algorithm for verifying matrix products using;O(n squared) time and (base 2) log n + O(1) random bits.;Tracy Kimbrel and Rakesh Kumar Sinha.; Information Processing Letters, 45:107-110, 1993.;"
"Travis Craig's Home Page; Travis Craig;travis@cs.washington.edu;Computer Science & Engineering Department,;University of Washington, FR-35,;Seattle, WA 98195 USA;;Research interests:; mechanisms for predictability in real-time systems; cache restoration; queuing spin locks; Arctic submarine currents;;Courses I'm taking this quarter:; CSE 800: Dissertation,; where I'm working on real-time systems.;;Time consuming side projects are:; working half-time at ESCA Corporation; helping keep the Volvo 1800ESs (5055 and 7135) running; Press Here for Latest Motor Pool Status;;How to understand Computer Science:;;; Travis Craig;; Last modified:; Oct 9, 1995;"
Dean Tullsen home page;Dean M. Tullsen;; Biographical Information; Research Interests and Bibliography; Home Page; download my resume;My hobbies:;;
"Michael VanHilst;Michael VanHilst;vanhilst@cs.washington.edu;mvh@cfa.harvard.edu;Personal,;Research;Computer Science & Engineering Department;University of Washington;Box 352350;Seattle, WA 98195-2350 USA;Click here to send an email message to Mike VanHilst.;Personal;Mike is starting his 7th year as a graduate student at the University of;Washington. Hopefully, with a little luck he will be finished around the;end of the winter quarter.;;Immediately prior to coming to UDub Mike worked as a contractor at;IBM Research;where he wrote;Motif;widgets for the user unterface of IBM's;Data Explorer.;Mike got his start as a programmer in 1981 while fixing and maintaining;computer hardware for the;Smithsonian;Astrophysical Observatory, which is part of the;Smithsonian, but located within;Harvard.;Learning to debug software was the only way Mike could convince the;programmers that the hardware really was working correctly.;Mike stayed at the Smithsonian for 8 years, during which time he wrote a;program called;SAOimage;which is used by lots of astronomers to look at images. SAOimage is now;part of the;GNU;distribution. (Mike would like to thank Bill Wyatt,;Eric Mandel,;Joe Schwarz, and;Doug Mink;for starting, guiding, and continuing the project,;not to mention countless others who contributed).;In 1986, Mike took a year off to work with a group of;seismologists;in Paris, France, doing data acquisition, calibration, and analysis.;He had a truly wonderful time in;Paris.;He met his wife, Luz Angela, in a French language class at the;Alliance Francaise.;Luz Angela had come to Paris that year from her native;Colombia;in South America.;In the summer of 1994, Mike wrote a front end to let students;browse the University's time schedule data base through UWIN.;He had fun working with the very talented staff at;pine.);Special thanks to Bill Shirey, who did most of the design, and;Tracy Stenvik, who wrote the UWIN screen library.;(If you are on a UW machine, you can run;UWIN here.);In between working on the time schedule Mike also taught beginning;programming, through the UW Extension, to a very motivated group from;Microsoft product support who sacrificed their summer to learn C.;Recently Mike has presented papers at the;International Symposium on Object Technologies for Advanced Software;(ISOTAS'96),;ACM Conference on Object Oriented Programming Systems, Languages, and;Applications (OOPSLA'96), and the;ACM SIGSOFT Symposium on the Foundations of Software Engineering (FSE'96);He also presented a poster at OOPSLA'95, made presentations at the;Subjectivity Workshops at OOPSLA'94 and OOPSLA'96, participated in the;Doctoral Symposium at OOPSLA'95, and participated in a demo at;UIST'96 (thanks Steve).;In an earlier life Mike earned BS and MCP degrees in;architecture;(the wooden kind) and;city planning;from;MIT;and worked as the Community Development Director for;the city of Grinnell,;Iowa.;While the things he works on are different now, the skills in visual;design and problem solving continue to be of value - and he still;gets to talk about;Chris;Alexander.;Here in Seattle, Mike has been active in the student chapter of the;Washington Software Association,;improving ties between students and large and small software;companies in the area. He enjoys hiking, cross-country skiing,;sailing, and;kayaking.;He also enjoys swimming at Lake Bronson.;More recently, Mike's ""free"" time has been taken up by;Marco Harold Sebastien Van Hilst, who was born on May 10, 1996.;Mike will post pictures as soon as he locates another photo scanner.; visits since 8 November 1996.;;Michael VanHilst;Last modified:;Friday, November 8, 1996;"
"Hello from Vassily;Long Live May Day! :);Hello. To start with, I am not really a web person. The best link;I've come up with thus far is this: http://www.cs.washington.edu/homes/vass/very useful documents;(it's also the shortest to write :)."
"Vivek Ratan's Home Page; Vivek Ratan;;Particulars;;I'm a graduate student in the;computer science department at the;University of Washington.;I'm currently on academic leave from UW and working as a research scientist;at Bellcore in Morristown, NJ.;;Researchwork;;At Bellcore:;I'm interested in distributed computing issues - distributed OO systems,;application/system development, high availability. I currently work with;the distributed systems group in Bellcore on high availability in distributed;software systems. [Very simply, a highly available system is one that;continues to run in the presence of failures.] Our group is developing a;toolset, Anatidae, that provides high availability mechanisms for;distributed applications that adhere to the CORBA standard.;We have also looked at active replication schemes for high availability in;DCE applications. A recent effort has focussed on enhancing the;availability and fault tolerance of the Cell Directory Service (CDS);of DCE.;Details about these projects can be found;here.;I'm also interested in high availability issues for the Web and integration;of distributed OO technology with Web servers.;At UW:;At the University of Washington, I worked on the Murphy project;(software safety methodologies) with the software safety group headed by;Dr. Nancy Leveson. Details on safety research at UW can be found at the;UW safety page. Much of my work involved looking into automatic fault;tree generation from;requirements specifications written in RSML, as well as working on the;RSML language simulator.;Publications:;A list of some recent publications can be found here.;; Personal information;;I was born and brought up in;India, but have been in the US for the last eight years. As an;undergraduate, I attended;Angelo State University (San Angelo, TX), and then,;Wesleyan University;(Middletown, CT), where I received a B.A. in Physics and;Math(Computer Science). Right after, I came to the University of Washington;in Seattle to puruse graduate studies in Computer Science.;I like to play tennis whenever I can. Squash, and to a lesser;extent racquetball, suffice when I can't. I ardently folow the game of;cricket. I've been participating in; Ultra Cricket,;a play-by-email cricket simulation game, for many years. I also follow the;exploits of the Supersonics, the Mariners, and the Cowboys.;Over the last year and a half, I have taken a keen interest in;learning ballroom dancing - the Waltz, Foxtrot, ChaCha, Rhumba, Tango,;and Swing (no West Coast please), and some occasional dabbles in Mambo.;The NY/NJ area has some of the best places for learning and dancing. The;Seattle Center used to have a big-band session every Saturday.;At UW, I was involved with the Model United Nations (MUN) chapter.;Model United Nations (MUN) is an international, educational organization;which simulates the workings of the UN. Conferences are held throughout;the year on current topics - restructuring and reforming parts of the;UN like the Security Council, ECOSOC, the IMF and the World Bank, rapid;population growth, nuclear proliferation, etc.; Here is the home page for the MUN chapter;of UW.;My other interests are in reading the poetry of Mirza Ghalib, a 19th century;Indian poet. I'm also interested in English literature, especially the;Romantic and Victorian periods.; Web links;; Here is the obligatory collection of Web sites;that I tend to visit often.;;Department of Computer Science & Engineering, Box 352350,;University of Washington,;Seattle, WA 98195 USA; vivek@cs.washington.edu; Last modified: Oct 2, 1996;;"
"Geoff's Li'l Pie in the Sky;Who;I am a graduate student at the University of Washington in;Seattle.;What;I did my Master's thesis in wireless mobile computing designing and;building a system called Mobisaic.;Currently I'm avoiding settling on a thesis topic.;Where;Chateau 109D (Guggenheim Annex);University of Washington;Seattle, Washington 98195;Looking for Emacs for Windows NT and Windows 95?;;Geoff Voelker (voelker@cs.washington.edu);"
"HOME; Wayne's Home;Computer Science & Engineering Department,;University of Washington, Box 352350,;Seattle, WA 98195 USA;waynew@cs.washington.edu;; CS Stuff;I'm currently looking at memory system performance. In particular, different;memory system organizations are being investigated. This work is being;done with Jean-Loup Baer.;I am also looking at interpreters with others (; Dennis,; Ted,; Geoff, and; Alec). Right;now, things are a little rocky.;Actually, we have an early version of our paper.; Things that I keep jumping to; DEC's Alpha; Interesting places to go fishing?;I don't have a list of cool sites. However, I have a list of people;who have a list of people who do (well, not yet).; Testing; TEST;Wayne Wong (waynew@cs.washington.edu);"
"William Chan's Home Page;William Chan's Home Page;I spend most of my time in the Hell.;When I have some spare time, I'll hang out in the Heaven.;wchan@cs.washington.edu;"
"Daniel S. Weld; Daniel S. Weld is Associate Professor of Computer Science and Engineering;at the University of;Washington. He received bachelor's degrees in both Computer Science and Biochemistry at Yale University in 1982. He landed a Ph.D.;from the MIT Artificial Intelligence Lab in 1988,;received a Presidential Young Investigator's award in 1989 and an Office of Naval Research Young;Investigator's award in 1990. Weld is on the;advisory board for the Journal of AI;Research, was guest editor for Computational Intelligence, edited the; AAAI report on the Role of;Intelligent Systems in the National Information Infrastructure, and is;co-Program Chair for AAAI-96. Weld has published two books and scads of;;technical papers.;Personal Data: Here's how to reach him:; Office: 408 Sieg Hall; Phone: (206) 543-9196 (work); 543-2969 (FAX); 523-9058 (home); Mail: Dept. of Computer Science and Engineering,;Box 352350, University of Washington, Seattle;WA 98195-2359;Research Interests: Weld's current research interests are in;Artificial intelligence, specifically;software agents and planning.;As one example, Weld's group supports the;UCPOP planner, which is being used at almost one hundred sites;worldwide. Many of Weld's papers are available electronically; here are;his current favorites:;;Representing Sensing Actions: The Middle Ground Revisited (KR-96, Nov 1996);;Planning to Gather Information (AAAI-96, August 1996);;Planning-Based Control of Software Agents (AIPS-96, May 1996); A;Scalable Comparison-Shopping Agent for the World-Wide Web (January '96);;A Softbot-Based Interface to the Internet (CACM, July '94); An;Introduction to Least-Commitment Planning (AI Magazine, Winter '94);Or select from a more exhaustive;list.;;;Recreation: When absent from his office, Weld can be found;at Cafe Allegro or in the;stormy;mountains,;climbing. In the past, he enjoyed traveling the;world, but now he's more likely to be found playing with his twin boys;;Adam and Galen.; You are invited to visit his gallery of;Pacific Northwest and;Desert wilderness photographs. See also his illustrated story about;Morocco.; weld@cs.washington.edu;;"
Wendy Belluomini; Wendy Belluomini;wendy@cs.washington.edu; I graduated in 1996 with a Masters in;CS.;I'm currently working on my PhD at the Univ. of Utah.;My new web page is here.;
"Wilson Hsieh;Wilson C. Hsieh;I am a postdoc in the;Department of Computer Science & Engineering at the;University of Washington (in;Seattle,;WA). I am a member of the;SPIN project.;I received my PhD from the;Department of Electrical Engineering and Computer Science;in the;School of Engineering;at;MIT, where I worked in the;Laboratory for Computer Science.;My advisors were;Frans Kaashoek;and;Bill Weihl.;Most of my research has been in compilation and parallel systems. My;research interests lie in the interactions among compilers, programming;languages, runtime and operating systems, and architectures.;selected publications;selected links;personal interests;Wilson C. Hsieh;Department of Computer Science and Engineering;University of Washington;Box 352350;Seattle, WA 98195;My office is in 229 Sieg. I just moved, so my phone number;has changed.;Voice:;206-616-9005;Fax: 206-543-2969;whsieh@cs.washington.edu;PGP public key;October 26, 1996;"
"Alec Wolman's home page.; Alec Wolman;wolman@cs.washington.edu;Work;Computer Science & Engineering Department;University of Washington;Box 352350;Seattle, WA 98195-2350;(206)616-1845;Home;1224 NW 77th St.;Seattle, WA 98117;(206)706-8104;I'm currently a graduate student in the;Computer Science department;at the;University of Washington.;My office is;room 109d;in the;Chateau.;Before gradual school, I worked for;Digital Equipment Corp.;at the Cambridge Research Lab.;My research interests include operating systems, networking,;and architecture.;Current and recent projects:;scalable networking performance.;Etch - binary instrumentation and optimization for Win32 executables;rocky - interpreter performance;On-line papers:;;X Through the Firewall, and Other Application Relays by Treese and Wolman.;Summer USENIX 1993.;;Latency Analysis of TCP on an ATM Network by Wolman, Voelker, and Thekkath.;Winter USENIX 1994.;;The Structure and Performance of Interpreters by Romer, Lee, Voelker, Wolman, Wong, Baer, Bershad, and Levy.;To Appear, ASPLOS VII, 1996.;Hungry? Have an; otter pop.;Jim Fix;has some strange ideas...;Nervous habit?;No, I don't really play the guitar.;Other Wolman Links:;Wolman Hall;Wolman disease;Wolmanized pressure treated lumber; wolman@cs.washington.edu - Aug 23, 1996;"
"Xiaohan Qin; Xiaohan Qin;xqin@cs.washington.edu;Computer Science & Engineering Department;University of Washington, Box 352350;Seattle, WA 98195;Office: Sieg 223;Phone: (206)685-4087;Fax: (206)543-2969;I am a 5th year graduate student working with;Jean-Loup Baer.;My research interests include computer architectures,;parallel and distributed systems,;performance evaluation methods such as modeling and simulation.;My short term goal is to get out of school as soon as possible.; Papers:;A Performance Evaluation of Cluster-based Architectures,;Qin and Baer, submitted to a conference.;On the Use and Performance of Explicit Communication;Primitives in Cache-coherent Multiprocessor Systems,;Qin and Baer, To appear in the Proceedings of HPCA-3.;A Comparative Study of Conservative and;Optimistic Trace-driven Simulations,;Qin and Baer, An award paper in 1995 Simulation Symposium, page 42-50.;Optimistic Trace-driven Simulation,;Qin and Baer, Tech Report 94-10-03, Dept of Computer Science and Engineering,;Univ. of Washington.;;A Parallel Trace-driven Simulator: Implementation and Performance,;Qin and Baer, in Proceedings of 1994 International Conference;of Parallel Processing, page 314-318.;MIN-Graph: A tool;for Monitoring and Visualizing MIN-based;Multiprocessor Performance,;Zhang, Nalluri, and Qin,; in Journal of Parallel and Distributed Computing,;June 93, page 231-241.;Performance Prediction and Evaluation of Parallel Processing;on a NUMA Multiprocessor,;Zhang and Qin, in IEEE Trans. on Software Engineering,;Oct 91, page 1059-68.; Other interesting stuff:;;Photos from China;Readings in Chinese;Search Engine;"
"Yasushi SAITO;Yasushi Saito(ï¿½ï¿½Æ£ï¿½ï¿½/ï¿½ï¿½ï¿½ï¿½ï¿½È¤ï¿½ï¿½ä¤¹ï¿½ï¿½);I am a second year graduate student at;Department of;Computer Science and Engineering;at University of Washington;Seattle, WA 98105.;I'm currently working;with Brian Bershad on the;SPIN project.;See my address,;pgp key, and;personal info.; Meta Links;MetaCrawler; Yahoo;; CSE Desktop Reference; RFC Index; Alta Vista; Lycos;; Archie; Tech Rep Index; Research Links; SPIN Internal Documentation; Modula 3 info.; CSE time Schedule.; I'm surveying hot operating systems.; Transaction Service a la; SPIN, aka; The Qual Project.; Sightseeing; Japanese Links; Random Info; Javascript apprentice page; Using Linux to connect CS; PPP gateway.; Japanized perl5.002 patch5; Touch type trainer(with Dvorak lesson texts);yasushi@cs.washington.edu;If you want to finger or talk me, try;canvas.cs.washington.edu.;It's my desktop box.;"
"Oren Zamir's Home Page;Oren Zamir's Home Page;Department of Computer Science and Engineering;University of Washington;Box 352350;Seattle,; WA 98195-2350;Office: 106 Chateau; (206) 616-1844; zamir@cs.washington.edu;Home: 10501 8th Ave. NE, apt. 331, Seattle WA 98125; (206) 361-1368;zamir@cs.washington.edu;I am an Israeli graduate student at the department of Computer;Science and Engineering at the University of Washington. My;undergraduate degree is in physics and mathematics from the Hebrew;University, Jerusalem, Israel.;My interests are in the fields of Artificial Intelligence and Software;Engineering. Currently I'm working on On-line Clustering algorithms;for Internet document retrievals. The basic idea is to help the user;with Internet searches resulting in hundreds of documents. This work;is done as part of the MetaCrawler; - a parallel Web search service, along with;Oren;Etzioni and;Erik Selberg.;My Resume is available here.;Here are some pictures of me doing the things I like most:;Diving in Sinai, Jeep;touring, and skiing.;Here are some pictures from my last Rafting Trip.;Here are some Interesting Links.;"
"Labyrinth of Ambiguity - Yeehah; Wackiness Ensues!; These random syllables brought to you courtesy of;Welcome to my web page, your personal fully ""interactive"" voyage of discovery. Now stop wasting time surfing; and go do something to abet commerce or the military.;The home page for CSE sections AE and AG is here.; Thought for the day: Computers have been going strictly downhill since;the Apple II series. Ah, the Apple IIe, now there was a machine. One spent;relatively little time trying to install software apparently written for;a circa 1956 programmable toaster on one's sparc, or waiting for the system;administrator to come back from a two to three month lunch.;I suppose if youve gone to all the effort of looking at this page then;you are either vaguely interested in me or what Im doing or you have;some scant hope of being entertained.;Ok, so a guy walks into a bar with a yak on a leash, and the thing is, the yak;is huge. I mean really big. Even for a yak, and theyre pretty large to start;with. So the bartender says, ""Hey, are you planning on bringing that thing in;here?"" And the guy says ""First of all, its a yak. And second of all, Im a;freemason, so I should certainly hope that Im bringing it in here."" I forgot;to mention that this is in Nottingham (or any largish city in the UK that isnt;London.) Oh, and the bar is built on the site of an old pagan temple. Aw,;forget it.; This is my cat, Loki.; Someday I hope to make him supreme ruler of the cosmos. So be kind to animals, because someday one of they will have absolute;mastery of time, space, and the fabric of reality..; This is;me (on the right) fencing Sean McClean; in the 93; Junior Olympics. He won. I knocked him out of the epee tournament the next; day, though...;You can send me mail...; particularly if you wish to say something nice about my cat.;Im a third year grad student at the U of W CS dept, where I study;AI, and any other cognitive science disciplines I can get my hands on.;Im also interested in pure math, physics(especially cosmology and;elementary particle physics), paleontology, cabbages, monarchy, whatnot.;Who am I kidding. I write email, read Dilbert, and drink alot of;mochas. (Dogbert has a place in my personal pantheon. Many real;team-players have never heard of him, yet.) I make fun of classical;AI, a field which makes medieval french theology look like vital,;relevant, and fast-developing. As far as I can tell, these days doing;'classical AI' consists of getting computers to do intelligent things;for which theyre well suited which sane people who are interested in;the same topic find uninteresting and useless. Ive heard faculty from;other CS disciplines describe some work as ""pure AI"", the connotations;of which Ill leave to the agile mind of the reader. Feh. Pardon me,;Ill step over to the sink and spit out all my bitterness along with;half of my last drink.;Sometimes I do research. It is,;all in all, grad school.;An excellent site for studying the;Ars magna.;My favorite authors are Lord Dunsany Stanislaw Lem;J L Borges Italo Calvino I suppose William Gibson, Haruki;Murakami, and J R R Tolkien also deserve honorable mention. Much as I;love these authors, not one of them has written the final, perfect;book... But I think that some of them, Borges especially, have read;fragments of it, and allude to half remembered passages in their most;successful writing. If you like children's books, try Patricia;MacLachlan. Also, though I cant quite bring myself to put him in;the same class with the aforementioned authors, I highly recommend;Steven Brust (""Agyar"" and ""Taltos"" are good places to start.);Though none of these have their books on-line, many good authors do.;I am also a great fan of understated sarcasm.;I recommend this excellent story by Neil Gaiman.;Chess stuff.;Other chess stuff.;Some recommended books.;Its always fun to reminisce about Simon's Rock, a wonderful place, although much better in the recollection than in the living. A nice place to wax nostalgic about but you wouldnt want to live there.;Click here if you would like to;know more about interdisciplinary cognitive science within UW CS.;Fencing is fun. I am very picky; about the blades I use.;I quite enjoy fencing. Some bits of it I have down quite well. For instance, I have more kime than a battleship full of suicidal klingons on PCP. However, as Coach Jim is often inclined to point out, my idea of tactical subtlety could use broadening.;Poor Jim.;An interesting question is that of whether spirit or technique dominates.;;Much as Im inclined to think the SCA consists of a bunch of;ferallieurs taking great pleasure in thwacking at each other with sticks;in between;beers, historical;fencing is interesting.;;You can always count on those wacky guys at the FIE to come up with some zany,madcap, and riotous rule changes;Want to see my thrill-packed home page?;To be quite honest, I dont wander around the web much any more, as its almost totally vacuous. Oh well, maybe things will improve in a few centuries. Im inclined to doubt it but one might as well be an optimist. Sigh.;I recommend that you look into the poetry of Philip Larkin if youre having a particularly bad day, or if you just want one.;In need of a useful web services? Nick will take tremendous pleasure in providing them. Oh yeah, hes also good for a dose of neo-Luddism. Rather odd coming from a CSE guy, much less an AI flavored one.;You might want to check out the Electronic Muse, brought to you by Mary-Suzanne. Shes the only person I know;whose cats have home pages.;Take a gander at Daphne's home page. Shescool and has beaucoup attitude.;Ill leave you with this. (Thanks to Messr. Mehl...); When love is gone, there's always justice.; And when justice is gone, there's always force.; And when force is gone, there's always Mom.; Hi, Mom!; -Laurie Anderson;Speak my language...;zmason@cs.washington.edu;P.S. Hi Rane!;"
"No Title; Jean-Loup Baer, Professor;and Adjunct Professor of Electrical Engineering,;received the Diplome d'IngÃ©nieur in Electrical;Enginering and the Doctorat 3e cycle in Computer Science from the;UniversitÃ© de Grenoble (France) and the Ph.D. from UCLA in 1968.;Prior to joining the University of Washington in 1969,;he was a Research Engineer with the Laboratoire de;Calcul, UniversitÃ© de Grenoble, and a member of the Digital Technology;Group at UCLA (1966-69). His present interests are in parallel and;distributed processing and computer systems architecture.;He is author or coauthor of more than 60 papers in these;areas and the author of the textbook ``Computer Systems Architecture'';(Computer Science Press, 1980).;Professor Baer has served as an IEEE Computer Science Distinguished;Visitor, and was an ACM National Lecturer. He is a Guggenheim Fellow,;an IEEE Fellow,;an editor of the Journal of Parallel and Distributed Computing,;and of the Journal of Computer Languages. He has served as;Program Chairman for the 1977 International Conference on Parallel;Processing, as co-Program Chairman for the 10th International;Symposium on Computer Architecture, and as General co-Chairman of;the 17th International;Symposium on Computer Architecture. He is currently Chair of ACM SIGARCH.;Eighteen Ph.D. students have completed their dissertation under Professor;Baer's direction. Twelve of them work in industry or research laboratories;and six are in;academia.;Although he has been in the U.S.A. for over 30 years, Dr. Baer has;had no difficulty in retaining his French accent.; Courses; CSE 378; CSE 590g; Recent research projects; Look under the Computer architecture page. Projects in which I am/was involved are:; Cache coherence protocols for cluster architectures and improved protocols for single bus systems.; Use and performance of software primitives for clusters (to appear in HPCA-3); Prefetching in uniprocessors, via hardware (see also IEEE TC May 95)and comparison;with;non-blocking caches (see also ASPLOS-V); prefetching in multiprocessors;(cf. ISCA 94); Impact of speculative execution on I-caches , see; Dennis Lee home page and;ISCA 95.; Parallel trace-driven simulations: conservative approach (see also ICPP 95);; optimistic;approach and their comparison (see also Distributed Simulation 95);"
"Craig Chambers; Craig Chambers, Assistant Professor, joined the faculty in;1991. He received his S.B. degree in Computer Science from MIT in;1986 and his Ph.D. in Computer Science from Stanford 1992.; Chambers's research interests lie in the design and implementation;of advanced programming systems, incorporating expressive programming;languages, efficient implementations, and supportive programming;environments. He currently is investigating object-oriented languages;and leads the Cecil;and Vortex projects: Cecil is a purely object-oriented language;serving as a vehicle for investigating multi-methods, static typing,;modules, and other features, and Vortex is an optimizing compiler;system for object-oriented languages incorporating intra- and;interprocedural static analyses and profile-guided optimizations, with;front-ends for Cecil, C++, Modula-3, and Java. Previously, Chambers;was a member of the Self project.; Chambers also is a member of the SPIN;Project. SPIN is an extensible operating system microkernel which;supports dynamic adaptation of system interfaces and implementations;under direct application control while still maintaining system;integrity and isolating applications. SPIN utilizes a dialect of the;Modula-3 language as a pointer-safe kernel extension language. SPIN;also relies on dynamic;compilation to achieve high performance despite its fine-grained;extensibility.; If you're from UW, click here;for information on some undergraduate- and graduate-level research;projects in these areas.;Contact Information;Prof. Craig Chambers;Department of Computer Science and Engineering;University of Washington;Box 352350;Seattle, WA 98195-2350;(206) 685-2094; fax: (206) 543-2969;chambers@cs.washington.edu;;[For mail requiring a street address, use Sieg Hall, Room 114];Last updated: April 10, 1996.;chambers@cs.washington.edu;"
"Carl Ebeling's home page; Carl Ebeling;Department of Computer Science and Engineering; University of;Washington; Seattle,;Washington, 98195;Voice: (206) 543-9342;;FAX: (206) 543-2969;;e-mail: ebeling@cs.washington.edu;Office: Sieg Hall, Room 215;Carl Ebeling, Associate Professor, has a B.S. in Physics, Wheaton;College, 1971; an M.S. in Computer Science, Southern Illinois;University, 1976; and a Ph.D. in Computer Science, Carnegie-Mellon;University in 1986. He joined the UW in 1986.;;Carl Ebeling's research interests fall into two categories: VLSI;architectures and computer-aided design of digital systems. He has;worked on a number of VLSI projects including the Hitech chess;machine, the Apex graphics chip for drawing spline curves and;surfaces, and the Triptych field-programmable gate array. Currently he;is involved in the Chaos project building a multicomputer routing;network. His CAD interests focus on methods for optimizing the;performance of circuits using level-sensitive latches, and placement;and routing algorithms for FPGAs, particularly Triptych.;Teaching;Spring 1996:; CSE 467 - Advanced Logic Design;Office Hours; Monday 2:30-3:20; Thursday 4:30-5:20;Travel:;April 16-19: FCCM, Napa;May 1-5: IBM, Burlington; Chicago;June 4-7: DAC, Las Vegas;Research Projects;;Northwest Laboratory for Integrated Systems;;Chaos Router Project;;Triptych: A New High-Density FPGA Architecture; Graduate Students;;Soha Hassoun.;;Neil McKenzie.;;Darren Cronquist.;;Paul Franklin.;Amara's Gallery;Elan's Gallery;ebeling@cs.washington.edu;"
"Steve Hanks;University of Washington;Department of Computer Science & Engineering;Steve Hanks, Associate Professor;Box 352350;University of Washington;Seattle, WA 98195-2350;(206)543-4784;I am on leave;Personal information;Research projects;; Probabilistic Planning;; Utility Models;; Probabilistic temporal reasoning and medical applications;; Planning testbeds and empirical evaluation of; agents;; The automated travel assistant;Some recent papers;;Oren Etzioni, Steve Hanks, Tao Jiang, Richard Karp, Omid Madani, Orli Waarts;Optimal Information Gathering on the Internet with Time and Cost Constraints;;To appear, FOCS, 1996.;;Mike Williamson and Steve Hanks;Flaw Selection Strategies for Value-Directed Planning;;Proceedings, AIPS96.;;Steve Hanks, David Madigan, Jonathan Gavrin;Probabilistic Temporal Reasoning with Endogenous Change;Proceedings, UAI95.;;Craig Boutilier, Tom Dean, Steve Hanks;Planning under Uncertainty: Structural Assumptions and Computational Leverage;Proceedings, European Planning Workshop 1995.;;Nick Kushmerick, Steve Hanks, Dan Weld;An Algorithm for Probabilistic Planning;TR version of a paper appearing in AI Journal vol 76, 1995.;Denise Draper, Steve Hanks;Localized Partial Evaluation of Belief Networks;Proceedings UAI'94.;Denise Draper, Steve Hanks, Dan Weld;Probabilistic Planning with Information Gathering and Contingent Execution;Proceedings AIPS'94.;Mike Williamson, Steve Hanks;Optimal Planning with a Goal-Directed Utility Model;Proceedings AIPS'94.;Steve Hanks, Martha Pollack, Paul Cohen;Benchmarks, Testbeds, Controlled Experimentation & the Design of Agent; Architectures;AI Magazine 13(4), 1993.;Some serious links; Home page for; CSE341 Spring 1996.;; Uncertainty in AI 1996 Conference Information;;; Uncertainty in AI page;;; UW AI Group Page;;Some other links; Seattle restaurants;; Seattle symphony schedule; Seattle wine; Opera schedule server;; Edita Gruberova fan page!;; and some photos!!; Carlo Maria Giulini discography!; Yma Sumac information!; Tennis news;;hanks@cs.washington.edu (Last Update: 03/01/96);"
"Dick Karp;Richard M. Karp;Professor of;Computer;Science & Engineering, and;Adjunct Professor of;Molecular;Biotechnology;University of;Washington;(206) 543-4226;karp@cs.washington.edu;Awards and Memberships;National Medal of Science, 1996;Babbage Prize, 1995;UC Berkeley University Professor, 1994;ACM Fellow, 1994;ACM Turing Award, 1985;Member, National Academy of Sciences;Member, National Academy of Engineering;Fellow, American Academy of Arts and Sciences;Fellow, American Association for the Advancement of Science;Distinguished Teaching Award, UC Berkeley Academic Senate, 1986;Class of 1939 Chair, UC Berkeley;Lanchester Prize, Operations Research Society of America and Institute for Management Science, 1977;Fulkerson Prize, American Mathematical Society and Mathematical;Programming Society, 1979;John von Neumann Theory Prize, Operations Research Society of America and Institute for Management Science, 1990;Faculty Research Lecturer, UC Berkeley, 1981-1982;Hermann Weyl Lecturer, Institute for Advanced Study, 1979;John von Neumann Lecturer, Society for Industrial and Applied;Mathematics, 1987;Miller Research Professor, UC Berkeley, 1980-1981;Honorary Doctorates: Georgetown University, 1992; University of Massachusetts, 1990; Technion, 1989; University of Pennsylvania,;1986;Member, National Advisory Board, Computer Professionals for;Social Responsibility, 1989-present;Member, Board of Governors, Weizmann Institute of Science, 1989-present;Member, Board of Trustees, International Computer Science;Institute, 1988-present;Selected Publications;""Combinatorics, Complexity and Randomness"" (Turing;Award Lecture), Communications of the ACM, Vol. 29;(1986), pp. 98-111.;""Constructing a Perfect Matching in Random NCS"";(with E. Upfal and A. Wigderson), Combinatorica, Vol. 6;(1986), pp. 35-48.;""Probabilistic Analysis of Partitioning Algorithms for the Traveling-Salesman Problem in the Plane,"" Mathematics of;Operations Research, Vol. 2, No. 3 (1977), pp. 209-244.;""Theoretical Improvements in Algorithmic Efficiency for;Network Flow Problems"" (with J. Edmonds), Journal of the;ACM, Vol. 18 (1972), pp. 264-284.;""Reducibility among Combinatorial Problems,"";in Complexity of Computer Computations, Plenum Press,;1972.;""The Traveling-Salesman Problem and Minimum Spanning;Trees: Part II"" (with M. Held), Mathematical Programming,;Vol. 1 (1971), pp. 6-25.;karp@cs.washington.edu;"
"Ed Lazowska;""A;Half Century of Exponential;Progress in Information Technology: Who, What, When, Where,;Why, and How"" (1996 University of Washington Annual;Faculty Lecture);Vice;President Gore's speech at the ENIAC 50th;anniversary celebration: ""[Congress] talks like George;Jetson. But they support policies more appropriate for;Fred Flintstone."";University;of California at Berkeley invents Chinese cooking!;Nathan;Myhrvold joins;Ed;Lazowska and the;UW;CSE faculty on a trip down memory lane;Ed Lazowska;Ed Lazowska is Professor and Chair of the;Department of Computer Science & Engineering;at the;University of Washington.;Lazowska received his A.B. from;Brown University in 1972, and has been at the University;of Washington since receiving his Ph.D. from the;University of Toronto in 1977.;His research concerns computer systems and computer system;performance. Recent specific topics have included parallel;discrete-event simulation, scheduling policies for multiprocessors,;kernel structures to support high-performance parallel computing,;programming systems for networks of multiprocessors, effective;program performance monitoring tools for parallel systems, the;interaction of architecture and operating system design, hardware;and software techniques for high performance communication, and,;most recently, operating system and programming system support that;exploits wide-address architectures;(Opal). Almost all of this work has actually;been carried out by terrific students, and has been supervised;jointly with;Hank Levy or;John Zahorjan; Lazowska mostly;wears;ties,;pushes paper, and racks up frequent flier miles.;(The graduate students seem to have picked up on;this (1.7Mb;Quicktime).) He;also hosts lots of visitors, a surprising number of whom have;funny;noses.;Lazowska is a member of the Board of Directors of the; Computing Research;Association (CRA's members include essentially all;graduate departments and industrial research laboratories;in the field), and Chair of;CRA's Government Affairs Committee.;He serves on the National Science Foundation's Advisory;Committee for;Computer and Information Science and;Engineering,;and on the National Research Council's;Computer;Science and Telecommunications Board.;He is a member of the 6-person Technical Advisory Board for;Microsoft Research,;of the 4-person;National;Semiconductor Computer Science & Systems Academic;Advisory Council,;of the Board of Directors of;Data I/O Corporation,;and of the Scientific Advisory Board for;Cable & Howse Ventures' Cascadia Fund.;He belongs to the standing advisory committees;for the;Department of EECS;at UC Berkeley and;the Departments of Computer Science at;Stanford University,;the University;of Virginia,;and the Hong;Kong University of Science & Technology,;and is a member of ACM's;A.M.;Turing Award selection committee.;He has just completed service on a 12-person National Research Council;panel reviewing the multi-agency;High Performance Computing;and Communications program;(the ""Brooks/Sutherland Committee""), and;has recently served as Chair of the Committee of Examiners;for the Graduate Record Examinations Board Computer Science Test,;Chair of ACM SIGMETRICS (the Association for Computing Machinery's;Special Interest Group concerned with computer system performance),;Chair of the ACM Software Systems Award Committee, Program Chair;of the 13th ACM Symposium on Operating Systems Principles, and;editor of IEEE Transactions on Computers.;At the University of Washington, in addition to serving;as Chair of the;Department of Computer Science & Engineering,;Lazowska is Chair of the University Advisory Committee on;Academic Technology.;He has recently served as a member of the;Committee on the Deanship of the College of Arts;and Sciences, as Chair of the review committee for;the Ph.D. program in Molecular Biotechnology, and as a;member of the performance review committee for the Dean;of Engineering. He was selected to deliver the;1996;University of Washington Annual Faculty Lecture.;Lazowska is;a Fellow;of the Association;for Computing Machinery and of the;Institute of Electrical and;Electronics Engineers.;Seventeen;Ph.D.;students and 21 M.S. students;have completed degrees working with him.;Miscellaneous links:;An integrated;overview of the University of Washington, the;Department, and the region. There's also a;Persuasion Player version of it (250K), intended for;local consumption.;""The;Impact of a Research University: An Information Technology Perspective"";New UW;CSE professional Masters program.;Persuasion Player;Top;Ten Reasons to Major in CSE at UW (115K).;Information on the EE/CSE;Building project.;Abbreviated CV;Computing;Research: Driving Information;Technology and the Information Industry Forward;Massy-Goldman;report alleging 50% CSE;Ph.D. over-production to be re-issued due to flawed data;""Median;Years to Ph.D."" in new Conference Board;study of doctorate programs is not what you think!;""A;Half Century of Exponential;Progress in Information Technology: Who, What, When, Where,;Why, and How"" (1996 University of Washington Annual;Faculty Lecture);""Driver's;Ed for the Information Highway"" (University of Washington ""Saturday;Seminar,"" November 1995);Testimony;to the House;Appropriations Committee concerning NSF, April 1995;Testimony;to the House Science Committee concerning HPCC, October 1995;Vice;President Gore's speech at the ENIAC 50th;anniversary celebration, February 1996;Some interesting;home pages that I sometimes use for demo purposes.;Ode;to T III (Executive Vice President Tallman Trask III departs;for Duke University);University;of California at Berkeley invents Chinese cooking!;Nathan;Myhrvold joins;Ed;Lazowska and the;UW;CSE faculty on a trip down memory lane;Lazowska/Downs family home page;Directions;to my house;Shilshole Aquatic Club;(SAC) home page;Recently-discovered;review of my now-10th-grade son's 6th grade poetry;finger lazowska@cs.washington.edu for schedule;information.;CU-SeeMe: office 128.95.2.223, reflector 128.95.2.51, home 128.95.1.129;This page: http://www.cs.washington.edu/homes/lazowska/;lazowska@cs.washington.edu;"
"No Title; Lawrence Snyder, Professor, received a bachelor's;degree from the University of Iowa in mathematics and economics, and;in 1973 received a Ph.D. from Carnegie Mellon University in computer;science. He was a visiting scholar at the University of Washington in;1979-80 and joined the faculty permanently in 1983 after serving on;the faculties of Yale and Purdue. During 1987-88 he was a visiting scholar;at MIT and Harvard.;Professor Snyder's research has ranged from proofs of the;undecidability of properties of programs to the design and development;of a 32 bit single chip (CMOS) microprocessor, the Quarter Horse. He;created the Configurable Highly Parallel (CHiP) architecture, the;Poker Parallel Programming Environment and is co-inventor of Chaotic;Routing. Following the completion of the Blue CHiP Project he is now;Principal Investigator for the Orca Project and the NWLIS.;Professor Snyder is an associate editor of the ``Journal of Computer;and Systems Sciences,'' parallel systems editor of the ``Journal of;the ACM,'' and area editor for ""IEEE Transactions on Parallel and;Distributed Systems."" He has served on the National Science Foundation;Advisory Committee of the Division of Computer Research;and participates on numerous national advisory;committees on future research directions in parallel computation and;computer science policy. He served on the ACM Distinguished Doctoral;Dissertation Award selection committee, chairing it in 1988. In 1989;he was program chair for the first Symposium on Parallel Algorithms;and Architectures.;In addition to the dozen students who have completed doctoral degrees;under his direction, Professor Snyder has guided numerous masters and senior;projects.;"
"Steven Tanimoto's Home Page; Steven Tanimoto, Professor of Computer Science and Engineering;(and Adjunct Professor of Electrical;Engineering) received the A.B. degree from;Harvard in 1971 and the Ph.D. from Princeton in 1975. He joined the;University of Washington faculty in 1977 after two years teaching at;the University of Connecticut. In 1982-83 he was a Visiting Professor;at the Institut de Programmation, University of Paris-VI in France and;a visiting scholar at LinkÃ¶ping University, Sweden. Since 1981 he has;also served as an adjunct member of the Department of Electrical;Engineering. In 1989-90 he was a Visiting Scientist at;Kobe University (Japan), Thinking Machines Corporation (Cambridge,;Massachusetts) and LinkÃ¶ping University, Sweden. In June of 1989;and again in June of 1992 he was a visiting scientist at the;Institut de Research et d'Enseignement Superieur Aux Techniques;de l'Electronique (IRESTE) of the University of Nantes, France.; In addition to assisting with various conferences, he has;recently set up a home page for;IMAGE'COM 96, which is a conference devoted to image processing;and communication. The conference will take place in Bordeaux, France,;20-24 May, 1996.;Professor Tanimoto's research interests include computer analysis of;images (particularly using parallel processors), educational technology,;visual programming, and artificial intelligence. He currently;directs an NSF-sponsored project,;Mathematics Experiences Through;Image Processing; whose objective is to develop personal computer software;that motivates 8-th grade students to study mathematics.;He has written or coauthored over 70 papers, co-edited the;book ``Structured Computer Vision''; he is the author of a;textbook entitled ``The Elements of Artificial Intelligence: An Introduction;Using LISP'' published in 1987;(with Common Lisp editions in 1990 and 1995) and its accompanying;software.;He is currently working on a book on the subject of;parallel computation in image processing.;Tanimoto organized the 1992 IEEE Computer Society International;Workshop on Visual Languages, held in Seattle, and he served;as General Chair for the 1993 meeting in Bergen, Norway.;He also served as program chair for the 1994 International Conference;on Pattern Recognition Subconference on Parallel Computation and;as the co-program chair for the 1994 IEEE Computer Society Conference;on Computer Vision and Pattern Recognition.;He has served on the program;committees for numerous conferences on image processing and pattern;recognition and was general chairman of the IEEE Computer Society;Workshop on Computer Architecture for Pattern Analysis and Machine;Intelligence in 1987.;He currently serves on the steering committee for the;IEEE Symposia;on Visual Languages.;He has served on the editorial;boards for the journals ``Pattern Recognition'',;``Journal of Visual Languages and Computing'',;and ``CVGIP: Image Understanding''.;He served as the editor-in-chief of ``IEEE;Transactions on Pattern Analysis and Machine Intelligence'';from 1986 to 1990. In addition to these research-related activities,;Tanimoto served as Chair of the College of Engineering;Educational Policy Committee 1991-92, as Vice Chair of;College Council 1992-93 and as its Chair in 1993-94.;He was elected a Fellow of the IEEE in 1995.;Outside of computer science, Steve Tanimoto enjoys playing jazz and;classical piano music.;"
"No Title; John Zahorjan, Professor, graduated from;Brown University in 1975 and received a Ph.D. from the University of;Toronto in 1980. He received an NSF Presidential Young Investigator;Award in 1984.;His primary research interests are in the areas of scheduling of parallel;systems, runtime support for parallel computations, and applications support;for mobile computing.;One current focus is on scheduling policies to support ""continuous media"";applications, such as those involving real-time audio and video, where the;goal is to provide a policy and system interface that allows applications to;respond easily to changes in system load.;Other active research topics include techniques for runtime parallelization;of code written in a sequential language, support for programs exhibiting both;control and data parallelism,;and programming constructs to aid in development of applications intended for;mobile computing platforms.;Dr. Zahorjan is on the Editorial Boards of IEEE Transactions;on Software Engineering and ACM Computing Surveys.;"
301 Moved Permanently;Moved Permanently;The document has moved here.;
"Mathematics Experiences Through Image Processing (METIP);;Mathematics Experiences Through Image Processing (METIP);Project Director: Steven Tanimoto;Department of Computer Science & Engineering,;University of Washington, Box 352350,;Seattle, WA 98195-2350 USA;A major educational problem in United States and some other countries;is that;students in grades K-12 lose interest in mathematics and science;as they progress through school.;Students often complain that;mathematics is difficult and that they don't see much use for it past simple;arithmetic. In response to these concerns, the National Council of;Teachers of Mathematics has identified a number of features that the grades;5-8 curriculum should include in order to help motivate students to stay;interested:; favor conceptual learning over rote operations;; emphasize practical uses of mathematics;; encourage discussions and group learning; and; encourage exploratory, open-ended learning.;The goal of the METIP project is to use;digital image processing to help meet these;objectives. In particular, we have developed a series of applications;designed to allow students to manipulate digitized images of their choice.;These materials are intended to be used in enrichment activities; rather than part of a;standard classroom curriculum. Teachers can play various roles with;these activities; for example, they can catalyze student learning by;leading discussions of the;concepts students have explored on the computer.;The METIP Project currently has a number of programs that allow students to;explore mathematics with image processing:; The Pixel Calculator (Click here to order your; free copy today!); The Image Warper (Click here to order your free copy today!); The Transform Programmer (Click here to order your free copy today!);These applications were developed primarily for 386/486/Pentium based PC's;running Microsoft Windows. One application, the Pixel Calculator, is also;available for the Apple Macintosh.;Here is a list of all the people working on the;METIP project.;A closely related project we are involved with is the study of;multiplayer educational activities.;The METIP project is working to;integrate the use of the WWW into its activities.;Some ideas are described in Prospects for;the Direct Use of Distributed Image Databases in Educational Image Processing.;Currently the project is collecting the experiences of users with its;XFORM image transformation software. If you have done something;fun or useful with the software please let us know.;We are putting the current version of its documentation online.;Here is a link to it.. A set of little demonstrations for XFORM has been;put together by graduate students who took a;seminar during the winter of 1996..;The XFORM programming environment, integrated with;a subset of Common Lisp, offers the technical essentials for a new;approach to learning and teaching computer programming --- the fundamental;attraction of using this approach is that students learn to program the;computer in the pursuit of creating neat visual effects with digital;images portraying people or things of interest to them.;If you have successfully installed the software and would like to discuss;teaching programming this way, please contact us.;Links to some related projects are listed here.;METIP is supported in part by the National Science Foundation under;grant number MDR-9155709.;; bricker@cs.washington.edu or tanimoto@cs.washington.edu; Last modified: Tuesday, 6 February 1996.;"
University of Washington: Research in Mobile Ubiquitous Computing;Mobile Computing at the University of Washington;Here's an overview of mobile computing;research here at UW.; Projects; Mobisaic; An information system for a mobile and wireless computing environment; Wit; A system infrastructure for mobile handheld computing; Task Graph Manager; An application infrastructure for coping with resource variability.; Papers;A survey paper describing the fundamental challenges in this field.;A Programming Methodology for Disconnected Operation;Distributed Transactions in a Mobile;Computing System;Contacts:;Prof. Brian Bershad;Prof. Gaetano Borriello;Marc E. Fiuczynski;George Forman;Prof. Hank Levy;Geoff Voelker;Terri Watson;Prof. John Zahorjan; Last updated Mon 15 Jan 1996;;forman@cs.washington.edu;
"UW Cecil/Vortex Project;UW Cecil/Vortex Project;Welcome to the home page for the Cecil and Vortex projects at UW CSE. We conduct research on programming language design and implementation, with an emphasis on these issues for object-oriented languages.;Cecil is a purely object-oriented language intended to support rapid;construction of high-quality, extensible software. Cecil incorporates;multi-methods, a simple prototype-based object model, a mechanism to;support a structured form of computed inheritance, module-based;encapsulation, and a flexible static type system which allows;statically- and dynamically-typed code to mix freely.;Vortex is an optimizing compiler infrastructure for;object-oriented and other high-level languages. It targets both pure;object-oriented languages like Cecil and hybrid object-oriented;languages like C++, Modula-3, and Java. Vortex currently incorporates;high-level optimizations such as static class analysis, class hierachy;analysis, profile-guided receiver class prediction, profile-guided;selective procedure specialization, intraprocedural message splitting,;automatic inlining, and static closure analyses. It also includes a;collection of standard intraprocedural analyses such as common;subexpression elimination and dead assignment elimination. The Vortex;compiler is written entirely in Cecil.;An initial beta release of the Cecil/Vortex system is currently;available for SPARCs running either SunOS 4 or SunOS 5 (Solaris).;Send mail to cecil-interest-request with a message body of subscribe if you'd like to subscribe to a list of;interested parties and get more information on how to obtain the;Beta release.;We've recently finished a technical report that describes much of our implementation research.;More Information; Project Overview; A more detailed overview of the project's goals and direction. A postscript version is also available.; Project members; Current and past project members; Papers; Papers we've written; Sample Projects; A list of some sample research projects (available to people from UW;CSE); Internal Documentation; Project internal documentation (available to people from UW CSE); Support; This page lists some of the sources of support for our project; Some related projects; Pointers to a few other object-oriented language implementation projects;Last updated August 25, 1996.;cecil@cs.washington.edu;"
"GRAIL: Graphics and Imaging Laboratory;Welcome to the home page of GRAIL, the Graphics and Imaging Laboratory of the;University of Washington's Department of Computer Science and Engineering.;Information;People;Courses;Research Projects;Publications;Theses;Software and Data;Cool Images; Our Neighborhood; ; Department of Computer Science; and Engineering; University of Washington; Seattle;Local Interest;GRAIL disk usage policy; ;Comments to; mtwong@cs.washington.edu;23 July 1996;"
"The Chaotic Routing Project;; The Chaotic Routing Project;Computer Science & Engineering Department;University of Washington,; Box 352350;Seattle, WA 98195-2350 USA;; Chaos is a friend of mine.; -Bob Dylan;; Chaotic People;All sorts of people work on the Chaotic Routing project.; Research Papers and Technical Reports;A repository of all of the research papers;and technical reports of the Chaotic;Routing project is available.; Chaos Router Chip;The;Chaos Router Chip is an implementation of the chaos routing algorithm in hardware. It;has been built and tested in 1.2 micron CMOS, and redesigned in a 0.8 micron process for;better performance.; Simulator;The;Chaos Router Simulator is a powerful simulator which can simulate all;sorts of networks and routing algorithms. It includes a very nice graphical;front end!; Standards for Presentation of Results;At PCRCW '94, we discussed the presentation;of simulation results for routing algorithms. We were able to come up;with some guidelines; for presentation of results.; Other Research Groups;We're building a list of all research groups that;have webs describing research in routing and/or interconnection networks.; Parallel Computer Routing and Communication Workshop (PCRCW) '94;PCRCW '94 was held at the Univeristy of Washington in Seattle in May;1994. Proceedings are available now.;The University of Washington CSE home Page;kwb@cs.washington.edu;"
"The Chinook Project;The Chinook Project;/shiNOOK/, n.;""chinook salmon"" a large salmon, Oncorhynchus tshawytscha,;of the N. Pacific.;Amer. Ind. name of a tribe;a warm dry wind which blows east of the Rocky Mountains.;a warm wet southerly wind west of the Rocky Mountains.;a rare American sled dog;a hardware-software co-synthesis CAD tool;for real-time embedded systems.;Chinook is a hardware-software co-synthesis CAD;tool for embedded systems. It is designed for control dominated, reactive;systems under timing constraints. Chinook maps a behavioral description;to the user's target architecture, by filling in all the details needed;to build the complete system. This enables designers to make informed design;decisions at the high level early in the design cycle, rather than reiterate;after having worked out all the low level details. Retargetability will;not only make the designs more maintainable but also enables the designer;to take advantage of new technologies, instead of being tied down by legacy;code.;Chinook is currently under active development in a new generation. Currently;we are actively working on software architecture synthesis, interprocessor;communication synthesis, and efficient and accurate co-simulation. More;details will become available shortly.;Chinook is characterized as follows. It meets timing constraints, rather;than trying to maximize average performance or utilization. It assumes;manual partitioning, because we believe the issues are too intricate;and sometimes not even technical. We want the designers to evaluate different;architectures, rather than forcing a single fixed Processor-Bus-ASIC;architecture. We synthesize software architectures rather than rely on;off the shelf real-time kernels because they discourage retargeting.;The first version of the Chinook co-synthesis tool was operational in;November 1993. ``Version roe'' was shown;at DAC (Design Automation Conference) in San Diego in June 1994. Its main;features include automatic connection between the processor and peripheral;devices, generation of sequential code from a concurrent description, and;synthesizing device drivers. Its inputs Verilog and outputs a hardware;netlist needed to connect the hardware components together and the software;program to run on the processor. The main topics include the interfacing;problem between hardware and software components, scheduling under timing;constraints, and partitioning of functionality.;An improved version was demonstrated at the NATO summer school on HW/SW;CodeDesign, in Tremezzo, Italy June 19-30, 1995. It incorporated several;more interface synthesis techniques, including memory-mapped I/O, more;efficient code generation, and a new simulator.;Chinookers;Faculty;Gaetano Borriello;Graduate students;Pai Chou;Ross Ortega;Ken Hines;Ian MacDuff;Recent Ph.D.'s;Elizabeth A. Walkup;Scott Hauck,;Henrik Hulgaard;Staff;Larry McMurchie;List of Papers;Chinook sponsors;ARPA under contract N00014-J-91-4041;National Science Foundation under Grant MIP-8858782;National Science Graduate Fellowship (Walkup);Patricia Roberts Harris Fellowship (Ortega);GTE Graduate Fellowship (Chou);Embedded Links;University;of Washington;Last updated Tue Nov 12 06:34:47 PDT 1996;"
"Emerald; The Emerald Project;Ideally, the development phase of a new FPGA architecture would make;use of a reliable set of mapping tools to produce accurate performance;evaluations of proposed designs. Unfortunately, given the quick;production time frames faced by most developers, tool construction is;often postponed until after many architectural features have been;frozen. To satisfy the need for fast tool prototyping, we have;designed Emerald, a powerful architecture-driven system for quick;development of FPGA tools. At its heart Emerald provides the basic;features needed in all FPGA systems -- logic block analysis, synthesis;and technology mapping, global placement and partitioning, and;detailed placement and routing. Its CAD environment provides an;efficient way to thoroughly specify an FPGA's routing and logic block;architectures, as well as architecture-specific metrics to tailor;placement and routing. Moreover, Emerald's parameterized schematic;specifications allow architectural variations to be quickly captured;and evaluated.;Emerald Publications; Any documents contained in this page are included by;the contributing authors as a means to ensure timely dissemination of;scholarly and technical work on a non-commercial basis. Copyright and;all rights therein are maintained by the authors or by other copyright;holders, notwithstanding that they have offered their works here;electronically. It is understood that all persons copying this;information will adhere to the terms and constraints invoked by each;author's copyright. These works may not be reposted without the;explicit permission of the copyright holder.;The Definitive Emerald Paper; Darren C. Cronquist and Larry McMurchie.;""Emerald - An Architecture-Driven Tool Compiler for FPGAs"",;To appear in Proceedings of the 1996 ACM/SIGDA Fourth International;Symposium on Field-Programmable Gate Arrays , February 1996.;The Router used in Emerald;Larry McMurchie and Carl Ebeling,;""PathFinder: A Negotiation-Based;Performance-Driven Router for FPGAs"",;Proceedings of the 1995 ACM; Third International Symposium on Field-Programmable Gate Arrays;Aided Design , pp. 111-117, February 1995.;Researchers; Darren Cronquist; Carl Ebeling; Larry McMurchie;"
"Northwest Laboratory for Integrated Systems;; Northwest Laboratory for Integrated Systems;; Department of Computer Science & Engineering;University of Washington,; Box 352350;Seattle, WA 98195-2350 USA;The Department of Computer Science and Engineering at the University of;Washington has been engaged in Very Large Scale Integration (VLSI) and;Computer-Aided Design (CAD) research, development, and education since;the late 1970s. Today, the Northwest Laboratory for Integrated Systems;is the focus of a wide variety of VLSI architectures, embedded sytems,;and CAD research.;Current Research Projects;Asynchronous Circuits and Verification;Time Separation of Events:; Specification, synthesis, and verification of timed asynchronous; circuits.; Asynchronous Circuits:; Survey of current asynchronous design methodologies, as; well as the first FPGA for asynchronous circuits.;FPGAs and Rapid-Prototyping;Triptych/Montage FPGA Architectures:; Development of the Triptych and Montage FPGA; architectures, architectures with improved densities over current; commercial FPGAs.;Multi-FPGA Systems & Rapid-Prototyping:; Development of the Springbok Rapid-Prototyping System for; Board-Level Designs, as well as partitioning, pin assignment,; and routing topology work for general multi-FPGA systems.;Emerald - An Architecture-Adaptive Toolset for FPGAs:; A complete set of mapping, placement and routing tools;can be generated automatically from a description of an FPGA;architecture. Architecture-specific metrics can be incorporated;into the various tools to improve the results.;Embedded Systems;The Chinook Project:; A Hardware/Software Co-design, Co-synthesis, and Co-simulation; system for embedded applications.;Performance Optimization of Synchronous Circuits;Retiming Level-Clocked Circuits:; Efficient algorithms for retiming circuits that use;level-sensitive latches to improve performance, reduce cost, and;increase tolerance to clock skew.;Architectural Retiming:; Methods for improving the performance of synchronous;circuits that have latency or feedback contraints.;Network Router;The Chaotic;Routing Project;Self-Tuned Systems;Self-tuned systems are directed by Ted Kehl;Previous Research Projects;; Gemini; Validating layout by comparing the specification circuit to the; implemented circuit.;;MacTester; A low-cost digital functional tester for chips and circuits; with TTL or CMOS voltage levels.;"
"Software Safety at the University of Washington; Software is playing an increasingly important role in systems such; as nuclear reactors, aircraft, defence and space systems, chemical; plants, and medical equipment. Because of the consequences of a; malfunction, these safety-critical systems must pass rigorous tests; and reviews before they may be used. Although system safety engineering; techniques have existed for decades, most do not apply to systems that; contain digital computers and software.; The goal of the University of Washington Safety Project is to develop; a theoretical foundation for safety and a methodology for building; safety-critical systems built upon that foundation.; In Safeware: System Safety and; Computers, Nancy Leveson summarizes the issues involved and; lays the foundation for the methodology. We are now working on safety; analysis techniques to support the methodology and a set of; prototype tools to be used to validate the specification and analysis; techniques.;University of Washington |; UW Computer Science;UW Software Engineering |; Other Safety Links;"
"The Internet Softbot;Internet Softbot;The Softbot was one of the 5;finalists in the 1995 Discover;Awards for Technological Innovation in Computer Software.; Building autonomous agents that interact with real-world software;environments such as operating systems or databases is a pragmatically;convenient yet intellectually challenging substrate for AI research.;To support this claim, we are utilizing planning and machine-learning;techniques to develop an Internet softbot (software robot), a;customizable and (moderately) intelligent assistant for Internet;access. The softbot accepts goals in a high-level language, generates;and executes plans to achieve these goals, and learns from its;experience. The softbot enables a human user to state what;he or she wants accomplished. The softbot disambiguates the request;and dynamically determines how and where to satisfy;it. The softbot uses a UNIX shell and the World-Wide Web to interact;with a wide range of internet resources.; Take a tour of the softbot's;graphical user interface.;Principal Investigators:;Oren Etzioni,;Daniel Weld.; Also, check out the;MetaCrawler Softbot --- a fielded Web service that enables you to;search multiple Web Indices in parallel, and provides sophisticated;pruning options. Try it!; For further information, contact: Oren Etzioni;(etzioni@cs.washington.edu);An accessible introduction to the Softbot project can be found here:; A Softbot-Based Interface to the Internet.; CACM, July 1994.;Methodological motivation for the project can be found here:; Intelligence without Robots (A Reply to Brooks).; AI Magazine, December 1993.;Technical softbot papers can be found;here.;A cartoon;representation of the Internet softbot taken from the L.G.;Blanchard article that appeared in the December 1994 issue of;Columns, the University of Washington alumni magazine.;The softbots research group is currently:;Developing a graphical user interface to;the softbot to allow the user to easily specify high level goals.;Extending and maintaining the XII;planner;(Keith Golden).; Working on graphical specification of search control;(Keith Golden).; Implementing an advanced plan space browser to debug planner control;(Dave Christianson).; Comparing rule-based versus procedural search control (Sujay Parekh); ILA;learns how to use information resources on the net; Designing a protocol for multi-softbot collaboration and negotiation;(Ying Sun).; Experimenting on reactive system in software domain;(C. T. Kwok and T.J. Goan).; Building an optimized agent Ingram for information gathering reactive system on the Internet.;(C. T. Kwok).; The Softbot-hackers info web (local access only);; Back to AI Home Page;; Back to CSE Home Page;Mike Perkowitz (map@cs.washington.edu);"
"SPIN;spin@cs.washington.edu; The SPIN Operating System;SPIN is an extensible operating system kernel that;supports the dynamic adaptation of system interfaces and;implementations through direct application control, while still;maintaining system integrity and inter-application isolation.;SPIN allows applications to load code into the kernel at;runtime. Because it runs in the kernel, this extension code can access;hardware and other operating systems services with with almost no;overhead (basically a procedure call), and data can be passed by;reference, rather than copied. The SPIN kernel itself provides;a core set of interfaces and capabilities to basic resources. These;are used by collections of extensions to implement general system;services such as address spaces, IPC, threads, and networking. All;extension code (and most of the kernel) is written in the typesafe language Modula-3. The property of;typesafety prevents extensions from crashing the system by attempting;to manipulate arbitrary pieces of code or data.;SPIN runs on DEC Alpha workstations. We're using it to write;both specialized applications such as network video systems, as well;as for supporting general purpose UNIX programs.;You can connect to a machine;running SPIN with the in-kernel SPIN web server; here.; Quick Results;This structure allows programs to extend operating system services with;low overhead. For example, with SPIN running on a 133 MHz Alpha,;an application can handle and recover from a page fault in 29 microseconds.;It takes 22 microseconds to create a new thread of control, execute;it, terminate, and synchronize with its termination (fork/join). A protected;procedure call to another extension or to a kernel function takes .13;microseconds. A cross-machine RPC (application to application) over;ethernet takes under 600 microseconds; over ATM (on really old;adapters) it takes less than 450 microseconds. The same operations;under Mach or DEC UNIX take up to 30 times longer on the same;hardware. Time them yourself (or see our benchmarks page and save;yourself the effort).; Recent reports and papers;;Dynamic Binding for Extensible Operating Systems; An invocation mechanism which provides flexible, efficient, and;simple way of integrating extensions with an executing system.;Appeared in the 2nd OSDI.;;Extensibility, Safety and Performance in the SPIN Operating System; A design, implementation and performance paper. Appeared in the 15th SOSP.; An Extensible Protocol Architecture for;Application-Specific Networking; A design, implementation and performance paper. Appeared in 1996; Usenix Winter Conference.;;Writing an Operating System Using Modula-3; Describes our experiences using Modula-3 to build a high; performance extensible system. Makes clear the distinction between a; language and its implementation.;;Language Support for Extensible Operating Systems; We've been pretty happy with M3, but we've had to deal with a few; shortcomings in order to use the language in a safe extensible; operating system. This paper describes how we've addressed those; shortcomings.;;Safe Dynamic Linking in an Extensible Operating System; Describes the dynamic linker we use to load code into the kernel.; Key point is the ability to create and manage linkable namespaces that; describe interfaces and collections of interfaces.;;Language and Runtime Support for Dynamic Interposition of System Code; Describes the kernel's internal communication and extension; facilities. Shows use of dynamic code generation to improve the; performance of a critical kernel service.; More Information; Dynamic compilation; Waiting until run time to compile code.; Paper trail; Project Reports, Talks. Papers, etc.; Project members; Who we are.; Benchmarks; Interested in the bottom-line? Go here.; Modula-3; Information on Modula-3.; ARPA Project Overview; The executive summary and regular reports.; Our friends; We've gotten a lot of assistance from academia and industry on this; project. This page says who we're involved with.; Some related projects; Pointers to other extensible systems projects.; What other people are saying; Barbs and Arrows;Internal Documentation; The latest status for project members; Available Projects; Projects that could result in Qualifications credit,; a Masters degree, a funded RAship position, or undergraduate; project credit. (UW-CS only); Our mascot; We're encouraged that so many people have decided to adopt our;mascot as their own.;This page maintained by Brian Bershad.;bershad@cs.washington.edu;"
"UW Dynamic Compilation Project;The UW Dynamic Compilation Project;More Information; Our Dynamic Compiler; Project Members; Papers; Related Projects;UW-Only Sections; Student Projects; Group Web;Dynamic compilation enables optimizations based on the values of;invariant data computed at run-time. Using the values of these;run-time constants, a dynamic compiler can eliminate their memory;loads, perform constant propagation and folding, remove branches they;determine, and fully unroll loops they bound. However, the performance;benefits of the more efficient, dynamically-compiled code are offset;by the run-time cost of the dynamic compile. Our approach to dynamic;compilation strives for both fast dynamic compilation and high-quality;dynamically-compiled code: the programmer annotates regions of the;programs that should be compiled dynamically; a static, optimizing;compiler automatically produces pre-optimized machine-code templates,;using a pair of dataflow analyses that identify which variables will;be constant at run-time; and a simple, dynamic compiler copies the;templates, patching in the computed values of the run-time constants,;to produce optimized, executable code. Our work targets general-;purpose, imperative programming languages, initially C. Initial;experiments applying dynamic compilation to C programs have produced;speedups ranging from 1.2 to 1.8.;We are part of the SPIN;project. Eventually, our system will be used to dynamically;compile code in the SPIN kernel, for example the SPIN;event dispatcher. However, we are also actively exploring other;possible applications of dynamic compilation, such as in;virtual-machine interpreters.;Our prototype dynamic-compilation system;is described in our PLDI paper. We are;now starting to design and build our second-generation system. We;will release more details on it soon.;Last updated August 6, 1996.;grant@cs.washington.edu;"
301 Moved Permanently;Moved Permanently;The document has moved here.;
"The ZPL Project;;;The ZPL Project; Department of Computer Science &;Engineering; University of;Washington; Box 352350; Seattle,;WA; 98195-2350 USA; zpl-info@cs.washington.edu;ZPL is a new array-based programming language suitable for most;computations that would previously have been written in Fortran 77:; ZPL programs run fast on sequential AND parallel computers,; without modifications, and without special directives.; ZPL is machine-independent, so recompilation is all that is; necessary to run a ZPL program on a new machine.; ZPL's higher level concepts like arrays, borders, etc. eliminate most; of the error-prone indexing and tedious looping typical of F77, C,; etc.; ZPL programs are shorter, more easily written, and more easily; understood and modified.; Computer scientists will find new concepts in ZPL: regions,; directions, borders, shattered control-flow, etc.;Conclusion: ZPL is ideal for new engineering and scientific programs.;Walk-through a small ZPL program, or write-compile-run a program from your;machine!;Scientific programmers in the area should;consider enrolling in CSE 590ZP;this autumn.;If you have programmed in ZPL before, check out the recent changes in the language.; Project Overview; A high-level overview of ZPL.; Program Walk-Through; A 10 minute introduction to the language.; Web-based ZPL Compiler; Compile ZPL programs via your web browser right now!; Papers; Papers and manuals about or related to ZPL.; ZPL Details; On-line information and sample programs.; People; Project members.; On the Horizon; A description of the group's direction and future projects.; Acknowledgments; A list of those who have helped support our work.;;[;ZPL |;UW CSE |;UW;];zpl-info@cs.washington.edu;"
"Simultaneous Multithreading home page;Simultaneous Multithreading Project;Overview;People;Publications; Overview;The crucial problem facing today's high-speed microprocessors is maintaining;high processor utilization in the face of long instruction and memory;latencies. To;alleviate this problem, modern processors issue multiple instructions per;cycle (i.e., superscalars), or interleave the execution of different;threads in different cycles (multithreaded processors). Ultimately, though,;both techniques are limited by the amount of parallelism available within a;single thread in a single cycle.; Simultaneous multithreading (SMT) is a technique that permits multiple;independent threads to issue instructions to a superscalar's functional;units in a single cycle. SMT combines the multiple-instruction-issue;features of wide superscalar processors with the latency-hiding ability;of multithreaded architectures. On an SMT processor, all hardware contexts;are active simultaneously, competing each cycle for all available resources.;This dynamic sharing of processor resources enables SMT to exploit;thread-level and instruction-level parallelism interchangeably; both forms;of parallelism can be effectively used to increase processor utilization.;Our studies have;demonstrated that simultaneous multithreading significantly improves;processor throughput and performance on both multiprogrammed and parallel;workloads. We have shown that these performance gains can be achieved;in an architecture with only minimal extensions to modern out-of-order;superscalar processors.;Our current and future work includes investigations of fast synchronization;techniques enabled by SMT. We are also conducting research in other;architectural and compiler issues for simultaneous multithreading.; People;Faculty; Susan Eggers; Hank Levy;Graduate students; Jack Lo; Dean Tullsen;Industrial collaborators (Digital Equipment Corporation); Joel S. Emer; Rebecca L. Stamm; Publications; Converting Thread-Level Parallelism Into Instruction-Level Parallelism via Simultaneous Multithreading (Abstract, Postscript);J.L. Lo,;S.J. Eggers,;J.S. Emer,;H.M. Levy,;R.L. Stamm, and;D.M. Tullsen;Submitted for publication, July 1996.; Exploiting Choice: Instruction Fetch and Issue on an Implementable Simultaneous Multithreading Processor (Abstract, Postscript);D.M. Tullsen,;S.J. Eggers,;J.S. Emer,;H.M. Levy,;J.L. Lo,;and R.L. Stamm;;Proceedings of the 23rd Annual International Symposium on Computer Architecture, Philadelphia, PA, May 1996.; Compilation Issues for a Simultaneous Multithreading Processor;(Postscript);J.L. Lo,;S.J. Eggers,;H.M. Levy, and;D.M. Tullsen;Proceedings of the First SUIF Compiler Workshop, Stanford, CA, January 1996, p. 146-7.; Simultaneous Multithreading: Maximizing On-Chip Parallelism (Abstract, Postscript);D.M. Tullsen,;S.J. Eggers, and;H.M. Levy,; Proceedings of the 22rd Annual International Symposium on Computer Architecture, Santa Margherita Ligure, Italy, June 1995.; UW students:;Check the list of research projects still to do;on the student-affairs page.;This page maintained by Jack Lo;jlo@cs.washington.edu;"
